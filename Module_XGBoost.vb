' =================================== Libraries ==================================
' HoldemHand: Written (ported) by Keith Rule - Sept 2005, updated May 2007 (sourceforge)
' SharpLearning: Written by Mads Dabros (mdabros on github), XGBoost by PicNet.
' LUTv2: published on pokerai.org (now poker-ai.org) some years ago (I can't remember by whom)
' Keras.NET (https://github.com/SciSharp/Keras.NET) (not currently used here, maybe re-introduced later)
' ================================================================================


Imports SharpLearning.XGBoost
Imports SharpLearning.Optimization
Imports SharpLearning.CrossValidation.TrainingTestSplitters

Module Module_XGBoost

    '' ============================= Look-up Tables ==============================

    Private luts_folder As String = "C:\S Backup\LUTs"

    Private fLUT As New Lutv2.FlopTable()
    Private tLUT As New Lutv2.TurnTable()
    Private rLUT As New Lutv2.RiverTable()

    ' "Cached" tables are (usually incompletely) calculated on-the-fly, as the training progresses.
    ' The other (most computationally costly) tables are pre-computed.
    Private flop_wtl_cache(1361801)() As Double
    Private flop_projected_HS_Histogram_WTL_50_Inverse(1361801)() As Single
    Private flop_projected_HS_Histogram_WTL_50(1361801)() As Single

    Private turn_projected_HS_Histogram_WTL_20_Inverse(15111641)() As Single
    Private turn_wtl_cache(15111641)() As Double
    Private turn_projected_HS_Histogram_WTL_45_cache(15111641)() As Single

    Private river_wtl_cache(52402674)() As Double
    Private river_projected_HS_Histogram_WTL_25_Inverse_cache(52402674)() As Single

    '' ===========================================================================

    Private log As String = ""

    Private iterations As Integer = 1
    Private r_sample_threshold As Long = 4500000
    Private c_sample_threshold As Long = 0
    Private logging_enabled As Boolean = False
    Private optimization_test As Boolean = False

    ' Model Training
    Private just_regrets As Boolean = False
    Private just_cummulative As Boolean = False
    Private delete_samples As Boolean = False
    Private estimators As Integer = 200
    Private treedepth As Integer = 5
    Private learningrate As Double = 0.09
    Private exact As Boolean = False
    Private linear As Boolean = False
    Private dart As Boolean = False
    Private dropout As Double = 0.03
    Private skipdrop As Double = 0.5
    Private gamma As Double = 0
    Private subsample As Double = 1

    ' Data Generation
    Private sampling_type As Integer = 0
    Private regret_pooling_only As Boolean = False
    Private r_pool_size As Integer = 1
    Private c_pool_size As Integer = 1
    Private r_save_count As Long = 20000
    Private c_save_count As Long = 20000
    Private c_save_percent As Double = 0
    Private r_save_percent As Double = 1
    Private parallel_deck_generation As Boolean = True ' May have problems still.


#Region "Statistical Functions"

#Region "PF River Equity"

    ' This table was published/coppied from the internet a long time ago in a galaxy far, far away... 
    Private pf_river_equity(,) As Double =
    {{0.5, 0.819461, 0.815471, 0.811481, 0.807491, 0.808606, 0.804617, 0.804808, 0.804575, 0.808886, 0.813285, 0.81771, 0.822167, 0.878595, 0.931719, 0.874609, 0.927362, 0.870623, 0.923005, 0.866637, 0.918648, 0.884323, 0.937818, 0.880337, 0.933461, 0.880344, 0.93347, 0.882321, 0.935618, 0.866931, 0.918979, 0.870931, 0.923361, 0.874931, 0.927753, 0.87893, 0.932155, 0.829357, 0.871198, 0.825314, 0.866823, 0.82127, 0.862448, 0.82727, 0.868701, 0.839173, 0.881442, 0.83513, 0.877082, 0.835009, 0.876953, 0.837582, 0.879729, 0.84164, 0.884136, 0.845697, 0.888555, 0.849755, 0.892991, 0.808876, 0.84929, 0.804833, 0.844915, 0.810832, 0.851168, 0.822736, 0.863909, 0.835137, 0.877076, 0.830965, 0.872578, 0.833538, 0.875354, 0.837596, 0.879761, 0.841654, 0.884181, 0.845711, 0.888616, 0.788395, 0.827382, 0.794395, 0.833635, 0.806299, 0.846376, 0.818699, 0.859543, 0.830972, 0.872573, 0.829495, 0.87098, 0.833552, 0.875387, 0.83761, 0.879806, 0.841668, 0.884241, 0.777958, 0.816102, 0.789861, 0.828843, 0.802262, 0.84201, 0.814535, 0.855039, 0.829502, 0.870974, 0.829509, 0.871012, 0.833566, 0.875431, 0.837624, 0.879867, 0.779402, 0.81781, 0.791803, 0.830978, 0.804076, 0.844007, 0.819043, 0.859941, 0.835494, 0.877507, 0.835501, 0.877557, 0.839559, 0.881992, 0.775366, 0.813445, 0.787639, 0.826474, 0.802606, 0.842409, 0.819058, 0.859974, 0.835509, 0.877552, 0.835516, 0.877618, 0.775254, 0.813325, 0.790221, 0.82926, 0.806673, 0.846825, 0.823124, 0.864402, 0.839576, 0.881996, 0.775012, 0.813078, 0.791464, 0.830644, 0.807915, 0.848221, 0.824367, 0.865815, 0.789064, 0.828141, 0.805517, 0.845719, 0.821968, 0.863313, 0.80959, 0.850126, 0.826044, 0.86772, 0.830125, 0.872139},
    {0.180539, 0.5, 0.819348, 0.815358, 0.811368, 0.808166, 0.808712, 0.804726, 0.804922, 0.804845, 0.809244, 0.813669, 0.818126, 0.658936, 0.698805, 0.681545, 0.717892, 0.677925, 0.713946, 0.674306, 0.71, 0.680482, 0.71642, 0.680703, 0.716672, 0.677084, 0.712728, 0.680718, 0.716681, 0.666618, 0.701523, 0.670251, 0.705501, 0.673885, 0.709492, 0.677519, 0.713499, 0.861319, 0.91301, 0.857333, 0.908653, 0.853348, 0.904296, 0.871033, 0.923449, 0.88421, 0.937705, 0.880224, 0.933349, 0.880231, 0.93336, 0.87998, 0.93309, 0.88398, 0.937473, 0.88798, 0.941864, 0.891979, 0.946266, 0.822964, 0.864378, 0.818921, 0.860003, 0.821969, 0.863177, 0.825858, 0.867163, 0.837762, 0.879906, 0.833718, 0.875549, 0.833465, 0.875281, 0.837522, 0.879688, 0.84158, 0.884107, 0.845638, 0.888543, 0.802483, 0.84247, 0.805531, 0.845644, 0.809421, 0.84963, 0.821325, 0.862373, 0.833725, 0.875543, 0.829421, 0.870906, 0.833479, 0.875313, 0.837536, 0.879732, 0.841594, 0.884168, 0.789094, 0.828111, 0.792984, 0.832097, 0.804887, 0.84484, 0.817288, 0.85801, 0.829428, 0.870901, 0.829435, 0.870938, 0.833493, 0.875357, 0.83755, 0.879793, 0.782525, 0.821052, 0.790589, 0.829643, 0.802989, 0.842813, 0.81513, 0.855704, 0.831581, 0.873269, 0.831588, 0.873319, 0.835646, 0.877754, 0.779343, 0.817753, 0.791744, 0.830923, 0.803884, 0.843814, 0.820336, 0.861379, 0.836787, 0.878957, 0.836794, 0.879023, 0.775308, 0.813392, 0.787449, 0.826283, 0.8039, 0.843848, 0.820352, 0.861425, 0.836803, 0.879019, 0.775066, 0.813136, 0.791518, 0.830701, 0.80797, 0.848279, 0.824421, 0.865873, 0.774829, 0.812906, 0.791282, 0.830484, 0.807733, 0.848078, 0.795355, 0.834891, 0.811809, 0.852485, 0.81589, 0.856904},
    {0.184529, 0.180652, 0.5, 0.819665, 0.815675, 0.811903, 0.808701, 0.80925, 0.80527, 0.805192, 0.809592, 0.814016, 0.818474, 0.539515, 0.567577, 0.657251, 0.696986, 0.680251, 0.716497, 0.676632, 0.712551, 0.682808, 0.718971, 0.679614, 0.715488, 0.681186, 0.717186, 0.681193, 0.717186, 0.667093, 0.702028, 0.670727, 0.706006, 0.67436, 0.709997, 0.677994, 0.714004, 0.646614, 0.685358, 0.679157, 0.715406, 0.675537, 0.71146, 0.681714, 0.71788, 0.68578, 0.722034, 0.686002, 0.722288, 0.682382, 0.718346, 0.682129, 0.718079, 0.685763, 0.722057, 0.689396, 0.726047, 0.69303, 0.730055, 0.841728, 0.891795, 0.837742, 0.887439, 0.855389, 0.906549, 0.868565, 0.920788, 0.881742, 0.935045, 0.877756, 0.930691, 0.877505, 0.930421, 0.881504, 0.934804, 0.885504, 0.939195, 0.889504, 0.943597, 0.816699, 0.857699, 0.819336, 0.860444, 0.820686, 0.861781, 0.824576, 0.865768, 0.836479, 0.878514, 0.832175, 0.873877, 0.836233, 0.878284, 0.84029, 0.882703, 0.844348, 0.887139, 0.802898, 0.842911, 0.804249, 0.844248, 0.808138, 0.848235, 0.820042, 0.860981, 0.832182, 0.873872, 0.832189, 0.873909, 0.836247, 0.878328, 0.840304, 0.882764, 0.78995, 0.829051, 0.793839, 0.833038, 0.805222, 0.845214, 0.817362, 0.858105, 0.833813, 0.87567, 0.83382, 0.87572, 0.837878, 0.880156, 0.782594, 0.821136, 0.790658, 0.82973, 0.802798, 0.842621, 0.81925, 0.860186, 0.835701, 0.877763, 0.835708, 0.87783, 0.779414, 0.817842, 0.791554, 0.830732, 0.808006, 0.848297, 0.824457, 0.865875, 0.840908, 0.883469, 0.775121, 0.813204, 0.791573, 0.830769, 0.808025, 0.848347, 0.824476, 0.865941, 0.774884, 0.812974, 0.791337, 0.830551, 0.807788, 0.848145, 0.79541, 0.834958, 0.811864, 0.852552, 0.815945, 0.856972},
    {0.188519, 0.184642, 0.180335, 0.5, 0.819856, 0.816083, 0.812312, 0.809113, 0.809668, 0.805413, 0.809813, 0.814238, 0.818695, 0.540388, 0.568509, 0.541155, 0.56923, 0.654936, 0.694493, 0.678264, 0.714366, 0.68444, 0.720786, 0.680725, 0.716733, 0.679402, 0.715266, 0.684601, 0.720908, 0.666875, 0.701797, 0.670508, 0.705776, 0.674142, 0.709766, 0.677776, 0.713773, 0.536698, 0.564644, 0.644298, 0.682866, 0.677169, 0.713276, 0.683346, 0.719695, 0.687412, 0.723849, 0.684218, 0.720367, 0.68579, 0.722069, 0.681911, 0.717848, 0.685544, 0.721826, 0.689178, 0.725817, 0.692811, 0.729824, 0.630107, 0.667348, 0.67248, 0.708275, 0.678657, 0.714695, 0.682723, 0.718848, 0.68679, 0.723004, 0.687011, 0.723261, 0.683131, 0.71904, 0.686765, 0.723018, 0.690399, 0.727009, 0.694032, 0.731016, 0.82183, 0.870255, 0.839397, 0.889281, 0.852534, 0.903478, 0.86571, 0.917718, 0.878887, 0.931976, 0.874643, 0.927343, 0.878643, 0.931726, 0.882643, 0.936117, 0.886643, 0.940519, 0.816996, 0.858014, 0.817935, 0.858922, 0.819285, 0.86026, 0.823175, 0.86425, 0.834818, 0.876716, 0.834825, 0.876754, 0.838882, 0.881173, 0.84294, 0.885609, 0.803115, 0.843155, 0.804465, 0.844493, 0.808354, 0.848484, 0.819997, 0.86095, 0.836449, 0.878515, 0.836456, 0.878565, 0.840513, 0.883001, 0.789901, 0.829008, 0.793791, 0.832999, 0.804912, 0.844896, 0.821363, 0.862461, 0.837815, 0.880038, 0.837822, 0.880105, 0.782546, 0.821098, 0.79035, 0.829413, 0.806801, 0.846978, 0.823253, 0.864555, 0.839704, 0.882149, 0.779108, 0.817527, 0.79556, 0.835093, 0.812012, 0.85267, 0.828463, 0.870264, 0.77482, 0.812916, 0.791273, 0.830493, 0.807725, 0.848087, 0.795347, 0.8349, 0.8118, 0.852494, 0.815882, 0.856913},
    {0.192509, 0.188632, 0.184325, 0.180144, 0.5, 0.820012, 0.81624, 0.812471, 0.809279, 0.809559, 0.809782, 0.814207, 0.818664, 0.54063, 0.568768, 0.541397, 0.569489, 0.542164, 0.57021, 0.651989, 0.691328, 0.685378, 0.721865, 0.681663, 0.717813, 0.67982, 0.715776, 0.682124, 0.718252, 0.669589, 0.704784, 0.669596, 0.704809, 0.67323, 0.7088, 0.676863, 0.712807, 0.53694, 0.564904, 0.537707, 0.565625, 0.64143, 0.679784, 0.684324, 0.720817, 0.68839, 0.72497, 0.684675, 0.720919, 0.683353, 0.719455, 0.684664, 0.720877, 0.684671, 0.720902, 0.688305, 0.724892, 0.691938, 0.728899, 0.530067, 0.557559, 0.627239, 0.664267, 0.679674, 0.715858, 0.68374, 0.720012, 0.687807, 0.724167, 0.684613, 0.720688, 0.685924, 0.72211, 0.685932, 0.722136, 0.689565, 0.726126, 0.693199, 0.730133, 0.613079, 0.648781, 0.675055, 0.710932, 0.679122, 0.715085, 0.683189, 0.71924, 0.687255, 0.723398, 0.687216, 0.723376, 0.687223, 0.723401, 0.690857, 0.727392, 0.694491, 0.731399, 0.823098, 0.871687, 0.836156, 0.8858, 0.849293, 0.899998, 0.86247, 0.91424, 0.875388, 0.928218, 0.875395, 0.928238, 0.879395, 0.932629, 0.883395, 0.937031, 0.816976, 0.858006, 0.817914, 0.858915, 0.819264, 0.860256, 0.822893, 0.863967, 0.838848, 0.881108, 0.838855, 0.881157, 0.842912, 0.885593, 0.802829, 0.842861, 0.804179, 0.844202, 0.807808, 0.847913, 0.823762, 0.865053, 0.840214, 0.882631, 0.840221, 0.882697, 0.789617, 0.828718, 0.793246, 0.832429, 0.808679, 0.849001, 0.82513, 0.866578, 0.841581, 0.884172, 0.782004, 0.820532, 0.794119, 0.833521, 0.810571, 0.851098, 0.827022, 0.868692, 0.778571, 0.816986, 0.795024, 0.834564, 0.811475, 0.852158, 0.795047, 0.834589, 0.8115, 0.852183, 0.815582, 0.856602},
    {0.191394, 0.191834, 0.188097, 0.183917, 0.179988, 0.5, 0.819361, 0.815592, 0.811829, 0.808362, 0.81312, 0.813368, 0.817826, 0.52578, 0.552712, 0.526971, 0.553862, 0.527739, 0.554583, 0.528506, 0.555304, 0.663997, 0.704511, 0.675873, 0.711764, 0.674029, 0.709727, 0.675812, 0.711633, 0.660383, 0.694999, 0.665582, 0.700667, 0.665589, 0.700705, 0.669223, 0.704712, 0.525574, 0.552465, 0.526341, 0.553186, 0.527109, 0.553907, 0.653714, 0.693279, 0.682692, 0.719018, 0.678976, 0.714967, 0.677133, 0.712933, 0.67555, 0.711189, 0.680748, 0.716857, 0.680756, 0.716894, 0.684389, 0.720901, 0.519113, 0.545548, 0.51988, 0.54627, 0.63968, 0.67793, 0.678121, 0.714144, 0.682187, 0.718299, 0.678472, 0.714251, 0.676889, 0.712507, 0.682088, 0.718175, 0.682095, 0.718212, 0.685729, 0.722219, 0.512271, 0.538235, 0.625599, 0.662528, 0.673581, 0.709302, 0.677648, 0.713457, 0.681714, 0.717614, 0.67826, 0.713856, 0.683459, 0.719524, 0.683466, 0.719562, 0.687099, 0.723569, 0.611549, 0.647158, 0.669073, 0.704491, 0.67314, 0.708646, 0.677206, 0.712803, 0.681013, 0.716682, 0.684861, 0.720905, 0.684868, 0.720943, 0.688501, 0.72495, 0.821698, 0.870217, 0.834756, 0.884331, 0.847893, 0.898531, 0.860811, 0.912493, 0.87798, 0.931124, 0.877987, 0.931152, 0.881987, 0.935554, 0.816207, 0.857192, 0.817146, 0.858104, 0.818235, 0.859165, 0.826175, 0.867551, 0.84213, 0.884704, 0.842137, 0.88477, 0.802061, 0.842051, 0.803151, 0.843112, 0.811092, 0.851498, 0.827046, 0.868651, 0.843497, 0.886245, 0.788591, 0.827632, 0.796532, 0.836018, 0.811965, 0.852601, 0.828416, 0.870195, 0.780984, 0.819471, 0.7931, 0.832473, 0.809551, 0.850066, 0.798314, 0.83814, 0.814768, 0.855734, 0.814799, 0.855772},
    {0.195383, 0.191288, 0.191299, 0.187688, 0.18376, 0.180639, 0.5, 0.818206, 0.814444, 0.810406, 0.811417, 0.8162, 0.816481, 0.524759, 0.551615, 0.525951, 0.552777, 0.526718, 0.553498, 0.527485, 0.554219, 0.543003, 0.570952, 0.659471, 0.699664, 0.673578, 0.709333, 0.675361, 0.711239, 0.659411, 0.694035, 0.661715, 0.696538, 0.666914, 0.702218, 0.666921, 0.702272, 0.512821, 0.538702, 0.514013, 0.539852, 0.51478, 0.540573, 0.530338, 0.557348, 0.661284, 0.701627, 0.673277, 0.709017, 0.671433, 0.706983, 0.669329, 0.70467, 0.671634, 0.707172, 0.676832, 0.712852, 0.676839, 0.712906, 0.509472, 0.535016, 0.510239, 0.535738, 0.525836, 0.552554, 0.647566, 0.686631, 0.676619, 0.712488, 0.672903, 0.70844, 0.670799, 0.706126, 0.673104, 0.708628, 0.678302, 0.714308, 0.678309, 0.714362, 0.503081, 0.528174, 0.518718, 0.545033, 0.633682, 0.67144, 0.672198, 0.707772, 0.676264, 0.71193, 0.672289, 0.707602, 0.674593, 0.710104, 0.679791, 0.715784, 0.679799, 0.715838, 0.511219, 0.537114, 0.619751, 0.656195, 0.667808, 0.703087, 0.671875, 0.707245, 0.675681, 0.711123, 0.676113, 0.711611, 0.681312, 0.717292, 0.681319, 0.717346, 0.609953, 0.645471, 0.667598, 0.702944, 0.671664, 0.707102, 0.67547, 0.71098, 0.683164, 0.719105, 0.687012, 0.723341, 0.687019, 0.723395, 0.819652, 0.868054, 0.83271, 0.88217, 0.845589, 0.89609, 0.862758, 0.914705, 0.879928, 0.933344, 0.879935, 0.933383, 0.814965, 0.855876, 0.815643, 0.856508, 0.821044, 0.862244, 0.828984, 0.870642, 0.844938, 0.887812, 0.800561, 0.840458, 0.805963, 0.846194, 0.813903, 0.854592, 0.829857, 0.871762, 0.787096, 0.826065, 0.795038, 0.834463, 0.81047, 0.851063, 0.800252, 0.840119, 0.812369, 0.853137, 0.817591, 0.858817},
    {0.195192, 0.195274, 0.19075, 0.190887, 0.187529, 0.184408, 0.181794, 0.5, 0.816421, 0.812384, 0.812825, 0.81386, 0.818676, 0.523103, 0.549839, 0.518928, 0.54532, 0.52012, 0.546482, 0.520887, 0.547204, 0.536405, 0.563936, 0.537172, 0.564659, 0.655792, 0.695754, 0.67366, 0.709523, 0.65771, 0.692319, 0.659493, 0.694252, 0.661797, 0.696766, 0.666996, 0.702463, 0.511284, 0.537055, 0.512475, 0.538218, 0.513243, 0.538939, 0.5288, 0.555714, 0.540638, 0.568437, 0.656201, 0.69619, 0.670442, 0.706017, 0.668338, 0.703703, 0.670121, 0.705636, 0.672425, 0.70815, 0.677624, 0.713847, 0.496242, 0.520746, 0.497433, 0.521897, 0.513031, 0.538713, 0.524907, 0.551478, 0.654619, 0.694431, 0.666703, 0.70196, 0.664599, 0.699647, 0.666382, 0.701579, 0.668686, 0.704093, 0.673885, 0.70979, 0.493002, 0.517176, 0.508639, 0.534035, 0.520555, 0.546842, 0.641089, 0.679635, 0.670234, 0.705631, 0.666258, 0.701303, 0.668041, 0.703236, 0.670345, 0.70575, 0.675544, 0.711447, 0.501631, 0.526629, 0.513587, 0.539478, 0.627395, 0.664644, 0.666002, 0.701115, 0.669808, 0.704993, 0.66972, 0.704911, 0.672024, 0.707425, 0.677222, 0.713122, 0.509974, 0.535799, 0.617755, 0.654087, 0.66595, 0.70114, 0.669756, 0.705018, 0.677449, 0.713142, 0.677881, 0.713643, 0.68308, 0.719339, 0.60763, 0.642997, 0.665408, 0.700628, 0.669214, 0.704506, 0.676907, 0.712631, 0.684601, 0.720767, 0.688449, 0.72502, 0.817216, 0.865481, 0.830017, 0.879317, 0.847147, 0.897889, 0.864316, 0.916512, 0.881485, 0.935162, 0.812867, 0.853646, 0.817857, 0.858953, 0.823258, 0.864702, 0.831198, 0.873116, 0.798469, 0.838255, 0.803871, 0.844003, 0.811811, 0.852418, 0.805767, 0.846076, 0.813709, 0.854491, 0.818932, 0.860159},
    {0.195425, 0.195078, 0.19473, 0.190332, 0.190721, 0.188171, 0.185556, 0.183579, 0.5, 0.813593, 0.814034, 0.814499, 0.815567, 0.523059, 0.549886, 0.519847, 0.546378, 0.515672, 0.541859, 0.516864, 0.543021, 0.532382, 0.559754, 0.533149, 0.560476, 0.537131, 0.564713, 0.654977, 0.695007, 0.656228, 0.690699, 0.65801, 0.692632, 0.660315, 0.695146, 0.665513, 0.70083, 0.509146, 0.53477, 0.504971, 0.53025, 0.506162, 0.531413, 0.52172, 0.548188, 0.533558, 0.560911, 0.534325, 0.561636, 0.651998, 0.691732, 0.666131, 0.701453, 0.667914, 0.703385, 0.669697, 0.70533, 0.672001, 0.707861, 0.494262, 0.518631, 0.495453, 0.519794, 0.51105, 0.536611, 0.522927, 0.549376, 0.534765, 0.562102, 0.649051, 0.688488, 0.663142, 0.698188, 0.664925, 0.700121, 0.666708, 0.702065, 0.669012, 0.704596, 0.479369, 0.50248, 0.49543, 0.519768, 0.507347, 0.532575, 0.519224, 0.545343, 0.647697, 0.686971, 0.659631, 0.694373, 0.661414, 0.696306, 0.663197, 0.69825, 0.665502, 0.700781, 0.491188, 0.515248, 0.503144, 0.528097, 0.515061, 0.540906, 0.634396, 0.672417, 0.663391, 0.698286, 0.663302, 0.698204, 0.665085, 0.700149, 0.667389, 0.702679, 0.500062, 0.524972, 0.512017, 0.537824, 0.625032, 0.662155, 0.663536, 0.698521, 0.671229, 0.706646, 0.67114, 0.706576, 0.673444, 0.709107, 0.508073, 0.533775, 0.615105, 0.651275, 0.663191, 0.69822, 0.670884, 0.706344, 0.678578, 0.714481, 0.67901, 0.714998, 0.605211, 0.640429, 0.662881, 0.697953, 0.670574, 0.706077, 0.678268, 0.714214, 0.685961, 0.722367, 0.81413, 0.862211, 0.831183, 0.8807, 0.848313, 0.89928, 0.865482, 0.917914, 0.810054, 0.850674, 0.815044, 0.855994, 0.820445, 0.861758, 0.816419, 0.857497, 0.821822, 0.863262, 0.823726, 0.865348},
    {0.191114, 0.195155, 0.194808, 0.194587, 0.190441, 0.191638, 0.189594, 0.187616, 0.186407, 0.5, 0.814765, 0.815231, 0.815729, 0.519656, 0.546172, 0.516445, 0.542663, 0.513234, 0.539154, 0.509059, 0.534635, 0.525001, 0.551809, 0.525769, 0.552532, 0.529751, 0.556769, 0.536016, 0.563455, 0.635349, 0.673732, 0.663137, 0.698491, 0.66492, 0.700436, 0.666703, 0.702397, 0.505177, 0.530547, 0.501966, 0.527039, 0.497791, 0.52252, 0.513773, 0.539736, 0.52561, 0.552459, 0.526377, 0.553184, 0.530359, 0.557427, 0.646845, 0.686272, 0.665087, 0.700493, 0.66687, 0.702438, 0.668653, 0.704399, 0.491453, 0.51563, 0.487278, 0.511111, 0.5033, 0.528369, 0.515177, 0.541134, 0.527014, 0.55386, 0.527781, 0.554591, 0.644134, 0.683281, 0.662334, 0.697481, 0.664117, 0.699425, 0.6659, 0.701386, 0.476758, 0.499692, 0.492819, 0.516992, 0.504736, 0.529799, 0.516612, 0.542567, 0.52845, 0.555298, 0.641455, 0.68032, 0.659613, 0.6945, 0.661396, 0.696445, 0.663179, 0.698406, 0.476964, 0.49992, 0.489344, 0.513198, 0.50126, 0.526008, 0.513137, 0.538781, 0.640369, 0.679088, 0.65637, 0.690969, 0.658153, 0.692913, 0.659936, 0.694875, 0.489067, 0.513001, 0.501023, 0.525853, 0.512939, 0.538669, 0.631439, 0.669305, 0.664546, 0.699675, 0.664457, 0.699606, 0.66624, 0.701567, 0.497648, 0.522402, 0.509604, 0.535259, 0.621827, 0.658761, 0.664438, 0.699626, 0.672131, 0.707763, 0.672043, 0.70771, 0.505891, 0.531455, 0.612171, 0.648168, 0.664365, 0.699611, 0.672058, 0.707748, 0.679751, 0.715901, 0.60255, 0.637612, 0.664329, 0.699634, 0.672022, 0.707771, 0.679715, 0.715924, 0.810646, 0.858544, 0.8277, 0.877041, 0.84483, 0.895632, 0.830071, 0.872164, 0.835062, 0.877499, 0.836445, 0.879015},
    {0.186715, 0.190756, 0.190408, 0.190187, 0.190218, 0.18688, 0.188583, 0.187175, 0.185966, 0.185235, 0.5, 0.810106, 0.810604, 0.514132, 0.540312, 0.51092, 0.536803, 0.507709, 0.533294, 0.504498, 0.529786, 0.515074, 0.541278, 0.516265, 0.542442, 0.520247, 0.546679, 0.526513, 0.553365, 0.52004, 0.546631, 0.631037, 0.669236, 0.658686, 0.693835, 0.660469, 0.695796, 0.49988899999999997, 0.52494, 0.496677, 0.521431, 0.493466, 0.517922, 0.504082, 0.529457, 0.516343, 0.542621, 0.517111, 0.543346, 0.521093, 0.547589, 0.525354, 0.552127, 0.642809, 0.682072, 0.660912, 0.696131, 0.662695, 0.698093, 0.486402, 0.510275, 0.48319, 0.506766, 0.493845, 0.518343, 0.506147, 0.531549, 0.517984, 0.544275, 0.518751, 0.545006, 0.523012, 0.549543, 0.640375, 0.679374, 0.658435, 0.693414, 0.660218, 0.695375, 0.472907, 0.495599, 0.483601, 0.507218, 0.495942, 0.520466, 0.507819, 0.533234, 0.519656, 0.545966, 0.520702, 0.546991, 0.637971, 0.676708, 0.655989, 0.690727, 0.657772, 0.692688, 0.473349, 0.496083, 0.485729, 0.509373, 0.497646, 0.522183, 0.509522, 0.534956, 0.521639, 0.547983, 0.6356, 0.674074, 0.653575, 0.688072, 0.655358, 0.690033, 0.473878, 0.496666, 0.486258, 0.509947, 0.498175, 0.522763, 0.51033, 0.535831, 0.638923, 0.677655, 0.654788, 0.689377, 0.656571, 0.691338, 0.485728, 0.509465, 0.497685, 0.522323, 0.50988, 0.535434, 0.629784, 0.667633, 0.662751, 0.697841, 0.662662, 0.697788, 0.49458, 0.519159, 0.506816, 0.532311, 0.620483, 0.657418, 0.662953, 0.698121, 0.670647, 0.706274, 0.503375, 0.528797, 0.61114, 0.647156, 0.663193, 0.698438, 0.670886, 0.706591, 0.600016, 0.63494, 0.661882, 0.697067, 0.669575, 0.70522, 0.826189, 0.875501, 0.843244, 0.894008, 0.831913, 0.874187},
    {0.18229, 0.186331, 0.185984, 0.185762, 0.185793, 0.186632, 0.1838, 0.18614, 0.185501, 0.184769, 0.189894, 0.5, 0.804295, 0.507939, 0.533755, 0.504728, 0.530246, 0.501517, 0.526737, 0.498305, 0.523228, 0.509845, 0.535732, 0.50567, 0.531213, 0.510076, 0.535892, 0.516342, 0.542578, 0.50987, 0.535844, 0.513088, 0.539395, 0.626046, 0.664061, 0.653504, 0.688423, 0.493972, 0.518677, 0.490761, 0.515168, 0.48755, 0.511659, 0.499129, 0.524205, 0.506024, 0.531687, 0.507216, 0.532853, 0.511198, 0.537097, 0.515459, 0.541634, 0.518677, 0.545186, 0.638054, 0.677148, 0.656045, 0.691056, 0.480761, 0.504306, 0.47755, 0.500797, 0.489169, 0.513385, 0.496103, 0.520909, 0.508365, 0.534076, 0.509133, 0.534807, 0.513393, 0.539345, 0.516612, 0.542897, 0.635935, 0.674787, 0.653884, 0.688674, 0.467542, 0.489925, 0.479201, 0.502554, 0.486175, 0.510121, 0.498476, 0.52333, 0.510313, 0.536061, 0.511359, 0.537087, 0.514578, 0.540639, 0.633847, 0.672457, 0.651753, 0.686324, 0.469224, 0.491713, 0.476238, 0.499322, 0.488578, 0.512573, 0.500456, 0.525347, 0.512572, 0.538373, 0.512575, 0.538413, 0.631791, 0.67016, 0.649655, 0.684006, 0.470029, 0.492594, 0.482409, 0.505887, 0.494326, 0.518703, 0.506481, 0.531771, 0.517555, 0.543812, 0.633868, 0.672381, 0.651735, 0.686229, 0.470345, 0.492938, 0.482725, 0.506225, 0.494921, 0.519335, 0.506034, 0.531418, 0.637023, 0.675765, 0.652775, 0.687334, 0.482506, 0.506072, 0.494741, 0.519224, 0.505894, 0.531349, 0.628234, 0.666113, 0.661087, 0.696168, 0.491949, 0.516391, 0.503143, 0.528558, 0.619285, 0.656272, 0.661643, 0.696822, 0.498015, 0.523222, 0.608558, 0.644476, 0.660647, 0.695787, 0.613854, 0.650205, 0.666026, 0.701576, 0.841314, 0.892034},
    {0.177833, 0.181874, 0.181526, 0.181305, 0.181336, 0.182174, 0.183519, 0.181324, 0.184433, 0.184271, 0.189396, 0.195705, 0.5, 0.501067, 0.526492, 0.497856, 0.522983, 0.494644, 0.519474, 0.491433, 0.515965, 0.502973, 0.528469, 0.499762, 0.524961, 0.498801, 0.523958, 0.50508, 0.530656, 0.499019, 0.524351, 0.502237, 0.527903, 0.505456, 0.531479, 0.620358, 0.658201, 0.487415, 0.51175, 0.484204, 0.508242, 0.480993, 0.504733, 0.492572, 0.517278, 0.500431, 0.525771, 0.496256, 0.521256, 0.500662, 0.52594, 0.504923, 0.530478, 0.508142, 0.53403, 0.51136, 0.537606, 0.632563, 0.671499, 0.47452, 0.497716, 0.471308, 0.494207, 0.482927, 0.506794, 0.490826, 0.515329, 0.497721, 0.522815, 0.498912, 0.523987, 0.503173, 0.528525, 0.506392, 0.532077, 0.50961, 0.535653, 0.630799, 0.669516, 0.461616, 0.483671, 0.473274, 0.4963, 0.481212, 0.504877, 0.488147, 0.512405, 0.500408, 0.525578, 0.501455, 0.526604, 0.504673, 0.530156, 0.507891, 0.533732, 0.629066, 0.667565, 0.463613, 0.485796, 0.471591, 0.494415, 0.478565, 0.501984, 0.490866, 0.515199, 0.502982, 0.528226, 0.502986, 0.528266, 0.506204, 0.531842, 0.627364, 0.665645, 0.465697, 0.488023, 0.472711, 0.495635, 0.485051, 0.508892, 0.497207, 0.52196, 0.508281, 0.534001, 0.508285, 0.534066, 0.629796, 0.668245, 0.466329, 0.488707, 0.478709, 0.502005, 0.490904, 0.515116, 0.502017, 0.527199, 0.513091, 0.539264, 0.631744, 0.670311, 0.466994, 0.489427, 0.479654, 0.503009, 0.490807, 0.515133, 0.50192, 0.52724, 0.635288, 0.674108, 0.479786, 0.50323, 0.49098, 0.515396, 0.502133, 0.527545, 0.626891, 0.664872, 0.486539, 0.510783, 0.497734, 0.522975, 0.616637, 0.653581, 0.502658, 0.528293, 0.622253, 0.659646, 0.627912, 0.665767},
    {0.121405, 0.341064, 0.460485, 0.459612, 0.45937, 0.47422, 0.475241, 0.476897, 0.476941, 0.480344, 0.485868, 0.492061, 0.498933, 0.5, 0.524921, 0.712772, 0.754463, 0.710101, 0.75148, 0.70743, 0.748497, 0.711934, 0.75386, 0.70943, 0.75105, 0.706956, 0.748271, 0.709286, 0.750761, 0.69817, 0.738602, 0.70243, 0.743225, 0.70672, 0.747894, 0.711039, 0.752615, 0.714286, 0.755913, 0.711615, 0.752931, 0.708944, 0.749948, 0.727256, 0.770289, 0.724839, 0.767568, 0.72248, 0.764908, 0.723082, 0.765508, 0.727341, 0.769985, 0.731804, 0.774816, 0.736325, 0.779723, 0.740904, 0.784712, 0.635281, 0.664448, 0.632231, 0.661185, 0.644504, 0.674124, 0.652831, 0.682945, 0.66189, 0.692424, 0.658256, 0.688569, 0.661156, 0.691542, 0.664567, 0.695194, 0.668038, 0.698924, 0.671568, 0.702738, 0.620078, 0.648391, 0.63235, 0.66133, 0.640677, 0.670152, 0.649736, 0.679631, 0.65826, 0.688567, 0.658106, 0.688279, 0.661517, 0.691931, 0.664988, 0.695661, 0.668518, 0.699475, 0.620197, 0.648536, 0.628524, 0.657358, 0.637583, 0.666837, 0.646107, 0.675773, 0.658109, 0.688276, 0.658467, 0.688668, 0.661938, 0.692397, 0.665468, 0.696211, 0.628824, 0.658121, 0.625951, 0.655038, 0.634475, 0.663974, 0.646477, 0.676477, 0.658993, 0.68966, 0.65941, 0.690129, 0.66294, 0.693943, 0.613976, 0.642423, 0.6225, 0.651359, 0.634502, 0.663862, 0.647017, 0.677044, 0.659592, 0.690304, 0.660068, 0.690858, 0.610585, 0.638805, 0.622588, 0.651308, 0.635104, 0.66449, 0.647678, 0.67775, 0.660311, 0.691094, 0.610946, 0.639171, 0.623462, 0.652354, 0.636037, 0.665614, 0.64867, 0.678958, 0.613382, 0.641582, 0.625959, 0.654842, 0.638592, 0.668186, 0.629453, 0.658554, 0.64209, 0.671898, 0.645656, 0.675687},
    {0.068281, 0.301195, 0.432423, 0.431491, 0.431232, 0.447288, 0.448385, 0.450161, 0.450114, 0.453828, 0.459688, 0.466245, 0.473508, 0.475079, 0.5, 0.70123, 0.743939, 0.698289, 0.740666, 0.695348, 0.737394, 0.699573, 0.742415, 0.696818, 0.739326, 0.694087, 0.736273, 0.696574, 0.738911, 0.684583, 0.72585, 0.689172, 0.730793, 0.693792, 0.735779, 0.698444, 0.740812, 0.704234, 0.747739, 0.701286, 0.744467, 0.698337, 0.741194, 0.717536, 0.762413, 0.714907, 0.759421, 0.712293, 0.756492, 0.71289, 0.757072, 0.717618, 0.761996, 0.722436, 0.76716, 0.727316, 0.772399, 0.73226, 0.777715, 0.610702, 0.648337, 0.607478, 0.644816, 0.619997, 0.658137, 0.628445, 0.667132, 0.637915, 0.677317, 0.634056, 0.673138, 0.637271, 0.676501, 0.640881, 0.680425, 0.644553, 0.684425, 0.648288, 0.688505, 0.594861, 0.631216, 0.60738, 0.644538, 0.615828, 0.653533, 0.625298, 0.663718, 0.63406, 0.673129, 0.634048, 0.67298, 0.637657, 0.676904, 0.641329, 0.680904, 0.645064, 0.684984, 0.594763, 0.630938, 0.603211, 0.639934, 0.61268, 0.650119, 0.621443, 0.65953, 0.634051, 0.672971, 0.634433, 0.673383, 0.638105, 0.677383, 0.641841, 0.681463, 0.603286, 0.640625, 0.600311, 0.637302, 0.609073, 0.646713, 0.621682, 0.660154, 0.634684, 0.674156, 0.635129, 0.674644, 0.638865, 0.678724, 0.587889, 0.623898, 0.596651, 0.63331, 0.60926, 0.64675, 0.622263, 0.660753, 0.635329, 0.674831, 0.635837, 0.675399, 0.584294, 0.619971, 0.596903, 0.633412, 0.609906, 0.647414, 0.622972, 0.661493, 0.636101, 0.67565, 0.584676, 0.620345, 0.597679, 0.634348, 0.610745, 0.648426, 0.623874, 0.662583, 0.587581, 0.623484, 0.600648, 0.637562, 0.613777, 0.65172, 0.604336, 0.64155, 0.617467, 0.655707, 0.621227, 0.65977},
    {0.125391, 0.318455, 0.342749, 0.458845, 0.458603, 0.473029, 0.474049, 0.481072, 0.480153, 0.483555, 0.48908, 0.495272, 0.502144, 0.287228, 0.29877, 0.5, 0.524921, 0.708149, 0.749579, 0.705478, 0.746596, 0.706625, 0.748287, 0.704081, 0.745435, 0.705273, 0.74678, 0.704239, 0.745584, 0.693082, 0.733385, 0.697303, 0.737967, 0.701552, 0.742594, 0.705831, 0.747274, 0.714176, 0.755812, 0.617683, 0.646699, 0.614633, 0.643436, 0.626513, 0.655965, 0.634839, 0.664787, 0.633092, 0.663012, 0.629459, 0.659151, 0.632358, 0.662124, 0.63577, 0.665776, 0.639241, 0.669506, 0.642771, 0.67332, 0.699717, 0.739977, 0.697046, 0.736995, 0.715358, 0.757327, 0.712941, 0.754606, 0.724354, 0.766963, 0.721631, 0.763918, 0.72589, 0.768395, 0.730353, 0.773226, 0.734874, 0.778133, 0.739453, 0.783122, 0.622024, 0.650301, 0.633994, 0.662922, 0.642321, 0.671743, 0.652802, 0.682781, 0.661101, 0.691482, 0.660947, 0.691194, 0.664358, 0.694847, 0.667829, 0.698577, 0.671359, 0.70239, 0.621841, 0.650128, 0.630168, 0.65895, 0.640649, 0.669988, 0.648947, 0.678689, 0.66095, 0.691191, 0.661308, 0.691583, 0.664779, 0.695313, 0.668309, 0.699127, 0.618536, 0.647145, 0.629017, 0.658183, 0.63421, 0.663578, 0.646213, 0.676081, 0.658728, 0.689263, 0.659145, 0.689732, 0.662675, 0.693546, 0.617042, 0.645567, 0.622235, 0.650962, 0.634237, 0.663465, 0.646753, 0.676648, 0.659327, 0.689908, 0.659803, 0.690461, 0.614455, 0.64291, 0.626458, 0.655413, 0.638973, 0.668595, 0.651548, 0.681855, 0.664181, 0.695199, 0.611762, 0.640009, 0.624279, 0.653192, 0.636853, 0.666452, 0.649487, 0.679796, 0.614199, 0.64242, 0.626775, 0.65568, 0.639408, 0.669024, 0.63027, 0.659392, 0.642906, 0.672736, 0.646473, 0.676525},
    {0.072638, 0.282108, 0.303014, 0.43077, 0.430511, 0.446138, 0.447223, 0.45468, 0.453622, 0.457337, 0.463197, 0.469754, 0.477017, 0.245537, 0.256061, 0.475079, 0.5, 0.696616, 0.739052, 0.693676, 0.735779, 0.694236, 0.736818, 0.69144, 0.733682, 0.692599, 0.734972, 0.691432, 0.73363, 0.6794, 0.720527, 0.683947, 0.725429, 0.688526, 0.730373, 0.693136, 0.735363, 0.704124, 0.745178, 0.591818, 0.628816, 0.5886, 0.625295, 0.600721, 0.6382, 0.609176, 0.647189, 0.607314, 0.645276, 0.603468, 0.641091, 0.606683, 0.644453, 0.610286, 0.648378, 0.613952, 0.652378, 0.617681, 0.656457, 0.688453, 0.730599, 0.685505, 0.727326, 0.704704, 0.748544, 0.702075, 0.745545, 0.714332, 0.758708, 0.711308, 0.755345, 0.716036, 0.76027, 0.720854, 0.765434, 0.725734, 0.770673, 0.730678, 0.775989, 0.59725, 0.633839, 0.609458, 0.646837, 0.617906, 0.655826, 0.628568, 0.667121, 0.637213, 0.676445, 0.637201, 0.676295, 0.64081, 0.68022, 0.644483, 0.68422, 0.648218, 0.688299, 0.596841, 0.633238, 0.605289, 0.642227, 0.615951, 0.653522, 0.624596, 0.662845, 0.637205, 0.676286, 0.637587, 0.676699, 0.641259, 0.680699, 0.644994, 0.684778, 0.592919, 0.629409, 0.603581, 0.640704, 0.608938, 0.646445, 0.621547, 0.659886, 0.63455, 0.673889, 0.634995, 0.674377, 0.63873, 0.678456, 0.591159, 0.627295, 0.596511, 0.633036, 0.60912, 0.646477, 0.622123, 0.66048, 0.635189, 0.674558, 0.635697, 0.675125, 0.588399, 0.624414, 0.601008, 0.637854, 0.614011, 0.651857, 0.627077, 0.665935, 0.640206, 0.680093, 0.58556, 0.621269, 0.598563, 0.635272, 0.611629, 0.64935, 0.624758, 0.663508, 0.588465, 0.624408, 0.601532, 0.638487, 0.614661, 0.652644, 0.60522, 0.642474, 0.618352, 0.656632, 0.622111, 0.660695},
    {0.129377, 0.322075, 0.319749, 0.345064, 0.457836, 0.472261, 0.473282, 0.47988, 0.484328, 0.486766, 0.492291, 0.498483, 0.505356, 0.289899, 0.301711, 0.291851, 0.303384, 0.5, 0.524921, 0.698716, 0.739443, 0.700627, 0.741963, 0.698043, 0.739071, 0.696293, 0.737202, 0.698926, 0.74013, 0.684404, 0.724244, 0.688585, 0.728785, 0.692794, 0.733373, 0.697032, 0.738011, 0.589701, 0.618109, 0.712725, 0.754222, 0.617776, 0.646663, 0.629656, 0.659192, 0.637983, 0.668014, 0.633129, 0.662926, 0.633329, 0.663256, 0.633175, 0.662962, 0.636587, 0.666614, 0.640057, 0.670344, 0.643587, 0.674158, 0.698962, 0.739222, 0.606475, 0.634659, 0.618355, 0.647188, 0.626682, 0.65601, 0.635113, 0.664934, 0.632605, 0.662381, 0.632451, 0.662087, 0.635863, 0.665739, 0.639334, 0.669469, 0.642864, 0.673283, 0.685148, 0.724041, 0.70346, 0.744374, 0.701043, 0.741652, 0.712456, 0.754001, 0.723504, 0.765973, 0.724438, 0.766805, 0.728902, 0.771636, 0.733423, 0.776543, 0.738002, 0.781532, 0.623787, 0.652037, 0.632114, 0.660859, 0.642293, 0.671579, 0.652014, 0.681839, 0.663791, 0.694107, 0.664149, 0.694499, 0.66762, 0.698229, 0.67115, 0.702043, 0.617377, 0.645748, 0.627556, 0.656468, 0.637276, 0.666728, 0.648565, 0.678475, 0.66108, 0.691657, 0.661497, 0.692127, 0.665027, 0.695941, 0.61558, 0.643853, 0.625301, 0.65411300000000006, 0.63659, 0.66586, 0.649105, 0.679042, 0.661679, 0.692302, 0.662156, 0.692855, 0.617521, 0.646054, 0.626193, 0.655016, 0.638709, 0.668199, 0.651283, 0.681459, 0.663916, 0.694803, 0.615632, 0.644114, 0.628149, 0.657297, 0.640723, 0.670557, 0.653356, 0.683901, 0.615015, 0.643258, 0.627592, 0.656518, 0.640225, 0.669862, 0.631086, 0.66023, 0.643723, 0.673574, 0.647289, 0.677363},
    {0.076995, 0.286054, 0.283503, 0.305507, 0.42979, 0.445417, 0.446502, 0.453518, 0.458141, 0.460846, 0.466706, 0.473263, 0.480526, 0.24852, 0.259334, 0.250421, 0.260948, 0.475079, 0.5, 0.686751, 0.72846, 0.688142, 0.730398, 0.685305, 0.727221, 0.683259, 0.725028, 0.685982, 0.728028, 0.670296, 0.710944, 0.674802, 0.715804, 0.679339, 0.720707, 0.683908, 0.725656, 0.563233, 0.597618, 0.702542, 0.74346, 0.592059, 0.628939, 0.60418, 0.641844, 0.612634, 0.650833, 0.607485, 0.645332, 0.607573, 0.64554, 0.607574, 0.645384, 0.611177, 0.649308, 0.614843, 0.653308, 0.618572, 0.657388, 0.68768, 0.72737, 0.580474, 0.616503, 0.592595, 0.629408, 0.601049, 0.638397, 0.609609, 0.6475, 0.606924, 0.644726, 0.606924, 0.64457, 0.610527, 0.648495, 0.614193, 0.652495, 0.617922, 0.656574, 0.672673, 0.713458, 0.691872, 0.734676, 0.689242, 0.731676, 0.7015, 0.744831, 0.713348, 0.757562, 0.714454, 0.758544, 0.719272, 0.763708, 0.724153, 0.768946, 0.729096, 0.774262, 0.59923, 0.63586, 0.607678, 0.644849, 0.618029, 0.655815, 0.627866, 0.666248, 0.640359, 0.679601, 0.64074, 0.680014, 0.644413, 0.684014, 0.648148, 0.688093, 0.592021, 0.628449, 0.602371, 0.639415, 0.612209, 0.649848, 0.62418, 0.662632, 0.637182, 0.676635, 0.637627, 0.677123, 0.641363, 0.681202, 0.589944, 0.626006, 0.599781, 0.636439, 0.611752, 0.649223, 0.624755, 0.663225, 0.637821, 0.677304, 0.638329, 0.677871, 0.591669, 0.62781, 0.600868, 0.637581, 0.613871, 0.651584, 0.626937, 0.665662, 0.640066, 0.679819, 0.589665, 0.625712, 0.602668, 0.639715, 0.615734, 0.653793, 0.628863, 0.667951, 0.589349, 0.625333, 0.602417, 0.639411, 0.615545, 0.653569, 0.606105, 0.643399, 0.619236, 0.657556, 0.622995, 0.661619},
    {0.133363, 0.325694, 0.323368, 0.321736, 0.348011, 0.471494, 0.472515, 0.479113, 0.483136, 0.490941, 0.495502, 0.501695, 0.508567, 0.29257, 0.304652, 0.294522, 0.306324, 0.301284, 0.313249, 0.5, 0.524921, 0.691513, 0.732237, 0.688888, 0.729303, 0.686811, 0.727076, 0.6865, 0.726791, 0.675646, 0.715029, 0.676462, 0.715884, 0.680631, 0.72043, 0.684829, 0.725028, 0.590518, 0.618947, 0.590097, 0.618383, 0.711274, 0.752632, 0.632799, 0.662419, 0.641126, 0.67124, 0.635784, 0.665632, 0.633366, 0.66317, 0.637045, 0.667067, 0.637403, 0.667452, 0.640874, 0.671182, 0.644404, 0.674996, 0.580544, 0.608176, 0.697511, 0.737632, 0.621498, 0.650415, 0.629825, 0.659237, 0.638257, 0.668161, 0.632643, 0.662295, 0.636321, 0.666192, 0.63668, 0.666578, 0.64015, 0.670307, 0.64368, 0.674121, 0.683749, 0.722632, 0.610198, 0.638412, 0.618525, 0.647233, 0.626956, 0.656157, 0.634627, 0.664303, 0.635598, 0.665317, 0.635956, 0.665703, 0.639427, 0.669433, 0.642957, 0.673246, 0.691562, 0.73142, 0.689145, 0.728699, 0.700558, 0.741048, 0.711606, 0.753011, 0.726311, 0.76886, 0.72745, 0.770046, 0.731971, 0.774953, 0.73655, 0.779942, 0.618834, 0.647136, 0.629013, 0.657856, 0.638432, 0.667799, 0.651631, 0.681625, 0.663921, 0.694573, 0.664338, 0.695043, 0.667868, 0.698856, 0.617038, 0.645241, 0.626457, 0.655184, 0.639656, 0.66901, 0.651946, 0.681958, 0.66452, 0.695218, 0.664997, 0.695771, 0.616059, 0.64434, 0.62926, 0.658167, 0.641061, 0.670593, 0.653635, 0.683853, 0.666269, 0.697197, 0.618698, 0.647259, 0.627884, 0.6569, 0.640458, 0.67016, 0.653092, 0.683504, 0.618885, 0.647363, 0.631461, 0.660623, 0.644095, 0.673967, 0.631903, 0.661068, 0.644539, 0.674412, 0.648106, 0.678201},
    {0.081352, 0.29, 0.287449, 0.285634, 0.308672, 0.444696, 0.445781, 0.452796, 0.456979, 0.465365, 0.470214, 0.476772, 0.484035, 0.251503, 0.262606, 0.253404, 0.264221, 0.260557, 0.27154, 0.475079, 0.5, 0.678647, 0.720287, 0.675768, 0.717068, 0.673363, 0.714483, 0.672881, 0.714001, 0.661086, 0.70126, 0.661937, 0.702139, 0.666433, 0.707, 0.67096, 0.711907, 0.564124, 0.598555, 0.563785, 0.598064, 0.700961, 0.741742, 0.607638, 0.645488, 0.616092, 0.654477, 0.610422, 0.648406, 0.607744, 0.645595, 0.611679, 0.649833, 0.612067, 0.650239, 0.615733, 0.654239, 0.619462, 0.658318, 0.553997, 0.587491, 0.686098, 0.725652, 0.596053, 0.633052, 0.604507, 0.642041, 0.613067, 0.651145, 0.607094, 0.644782, 0.611029, 0.649019, 0.611417, 0.649425, 0.615083, 0.653425, 0.618813, 0.657505, 0.671236, 0.709563, 0.584468, 0.620617, 0.592922, 0.629606, 0.601482, 0.638709, 0.609218, 0.64695, 0.61038, 0.648206, 0.610768, 0.648612, 0.614434, 0.652612, 0.618163, 0.656691, 0.67904, 0.720808, 0.67641, 0.717808, 0.688668, 0.730963, 0.700515, 0.743685, 0.716493, 0.76076, 0.71769, 0.761982, 0.722571, 0.76722, 0.727514, 0.772536, 0.593889, 0.630502, 0.60424, 0.641468, 0.613766, 0.651572, 0.62745, 0.666035, 0.640336, 0.67995, 0.640781, 0.680438, 0.644516, 0.684517, 0.591812, 0.628058, 0.601338, 0.638162, 0.615022, 0.652625, 0.627908, 0.666541, 0.640974, 0.680619, 0.641482, 0.681186, 0.590454, 0.626521, 0.604138, 0.640984, 0.616503, 0.654329, 0.629569, 0.668407, 0.642698, 0.682565, 0.592935, 0.629109, 0.602528, 0.639441, 0.615594, 0.653519, 0.628723, 0.667677, 0.593454, 0.629776, 0.606521, 0.643854, 0.61965, 0.658011, 0.606989, 0.644323, 0.62012, 0.658481, 0.623879, 0.662544},
    {0.115677, 0.319518, 0.317192, 0.31556, 0.314622, 0.336003, 0.456997, 0.463595, 0.467618, 0.474999, 0.484926, 0.490155, 0.497027, 0.288066, 0.300427, 0.293375, 0.305764, 0.299373, 0.311858, 0.308487, 0.321353, 0.5, 0.524922, 0.667049, 0.705999, 0.66525, 0.704072, 0.664612, 0.703427, 0.650815, 0.688453, 0.655298, 0.693431, 0.656102, 0.694291, 0.66026, 0.698848, 0.574553, 0.60254, 0.574132, 0.601976, 0.57377, 0.601472, 0.711044, 0.752885, 0.629508, 0.659368, 0.624166, 0.653759, 0.62126, 0.650777, 0.622321, 0.651882, 0.626512, 0.656458, 0.626929, 0.656921, 0.630459, 0.660735, 0.564579, 0.59177, 0.564217, 0.591265, 0.697282, 0.737885, 0.618207, 0.647364, 0.626639, 0.656288, 0.620536, 0.649902, 0.621598, 0.651007, 0.625788, 0.655583, 0.626206, 0.656046, 0.629736, 0.65986, 0.554723, 0.581117, 0.683577, 0.722945, 0.606966, 0.63542, 0.615397, 0.644344, 0.623068, 0.65249, 0.620933, 0.650191, 0.625124, 0.654767, 0.625542, 0.655231, 0.629072, 0.659044, 0.66993, 0.708064, 0.595784, 0.623535, 0.604215, 0.632459, 0.611886, 0.640604, 0.623036, 0.652317, 0.624519, 0.654011, 0.624937, 0.654474, 0.628467, 0.658288, 0.675914, 0.714397, 0.687326, 0.726746, 0.698374, 0.73871, 0.71308, 0.75455, 0.72799, 0.770753, 0.729186, 0.772015, 0.733765, 0.777004, 0.613707, 0.641753, 0.623126, 0.651696, 0.636023, 0.665205, 0.649735, 0.679712, 0.662084, 0.692737, 0.66256, 0.69329, 0.61224, 0.640331, 0.625138, 0.653841, 0.63885, 0.668347, 0.651199, 0.681372, 0.663832, 0.694716, 0.61196, 0.640148, 0.625673, 0.654654, 0.637533, 0.667158, 0.650167, 0.680502, 0.616674, 0.645111, 0.625919, 0.65483, 0.638553, 0.668174, 0.630495, 0.659776, 0.643132, 0.67312, 0.643645, 0.673643},
    {0.062182, 0.28358, 0.281029, 0.279214, 0.278135, 0.295489, 0.429048, 0.436064, 0.440246, 0.448191, 0.458722, 0.464268, 0.471531, 0.24614, 0.257585, 0.251713, 0.263182, 0.258037, 0.269602, 0.267763, 0.279713, 0.475078, 0.5, 0.652487, 0.692306, 0.650381, 0.690043, 0.64954, 0.689169, 0.634539, 0.672945, 0.639281, 0.678167, 0.640123, 0.679047, 0.644609, 0.683912, 0.547312, 0.581082, 0.546974, 0.580591, 0.546698, 0.580164, 0.700113, 0.741366, 0.603861, 0.641873, 0.598191, 0.635802, 0.594991, 0.632421, 0.596159, 0.63364, 0.600482, 0.638439, 0.600933, 0.638921, 0.604662, 0.643, 0.537185, 0.570018, 0.53691, 0.569591, 0.685251, 0.725277, 0.592276, 0.629437, 0.600836, 0.63854, 0.594342, 0.631608, 0.59551, 0.632826, 0.599833, 0.637626, 0.600284, 0.638107, 0.604013, 0.642187, 0.527185, 0.559081, 0.670451, 0.70925, 0.580754, 0.617064, 0.589314, 0.626167, 0.59705, 0.634409, 0.594924, 0.632076, 0.599246, 0.636875, 0.599698, 0.637357, 0.603427, 0.641436, 0.655715, 0.693287, 0.569295, 0.604755, 0.577855, 0.613858, 0.585591, 0.622099, 0.597174, 0.63437, 0.598723, 0.636188, 0.599174, 0.636669, 0.602903, 0.640749, 0.662046, 0.702416, 0.674303, 0.715571, 0.686151, 0.728293, 0.702129, 0.74536, 0.718196, 0.762674, 0.719456, 0.76397, 0.7244, 0.769286, 0.588539, 0.624809, 0.598066, 0.634913, 0.611439, 0.649047, 0.625517, 0.664072, 0.638466, 0.678063, 0.638974, 0.67863, 0.58666, 0.622702, 0.600033, 0.636836, 0.614111, 0.651861, 0.62706, 0.665852, 0.640189, 0.680009, 0.586058, 0.621948, 0.600136, 0.636973, 0.612564, 0.650394, 0.625693, 0.664552, 0.591063, 0.627301, 0.600719, 0.637709, 0.613848, 0.651867, 0.605432, 0.642895, 0.618563, 0.657052, 0.619102, 0.657597},
    {0.119663, 0.319297, 0.320386, 0.319275, 0.318337, 0.324127, 0.340529, 0.462828, 0.466851, 0.474231, 0.483735, 0.49433, 0.500238, 0.29057, 0.303182, 0.295919, 0.30856, 0.301957, 0.314695, 0.311112, 0.324232, 0.332951, 0.347513, 0.5, 0.524923, 0.644198, 0.681491, 0.644076, 0.681406, 0.629952, 0.666073, 0.631492, 0.667838, 0.635963, 0.672822, 0.636756, 0.673693, 0.569051, 0.596975, 0.569014, 0.596805, 0.568652, 0.5963, 0.58516, 0.613658, 0.723424, 0.766295, 0.626486, 0.65613, 0.62358, 0.653147, 0.624153, 0.653731, 0.625726, 0.655516, 0.629976, 0.66017, 0.630453, 0.660717, 0.56193, 0.589123, 0.561568, 0.588618, 0.578076, 0.605977, 0.709662, 0.751294, 0.628959, 0.658659, 0.62324, 0.652666, 0.623813, 0.65325, 0.625387, 0.655035, 0.629637, 0.659689, 0.630113, 0.660236, 0.552458, 0.578864, 0.568966, 0.596222, 0.695957, 0.736354, 0.618101, 0.647108, 0.625772, 0.655253, 0.623149, 0.652434, 0.624722, 0.654219, 0.628972, 0.658873, 0.629449, 0.65942, 0.559532, 0.586134, 0.682311, 0.721473, 0.606919, 0.635222, 0.61459, 0.643368, 0.62574, 0.655081, 0.624117, 0.653462, 0.628367, 0.658116, 0.628844, 0.658663, 0.672902, 0.711353, 0.600117, 0.628127, 0.607788, 0.636273, 0.618938, 0.647985, 0.6306, 0.660378, 0.632142, 0.662149, 0.632619, 0.662696, 0.675429, 0.713794, 0.686477, 0.725757, 0.701183, 0.741598, 0.716093, 0.757792, 0.731061, 0.774071, 0.732315, 0.775415, 0.614186, 0.64224, 0.627084, 0.65575, 0.640494, 0.669939, 0.654265, 0.684523, 0.666673, 0.697632, 0.613417, 0.641535, 0.626829, 0.655725, 0.6406, 0.670309, 0.653008, 0.683418, 0.615212, 0.643397, 0.628986, 0.657981, 0.640905, 0.670568, 0.633562, 0.662921, 0.642867, 0.672724, 0.647515, 0.677748},
    {0.066539, 0.283328, 0.284512, 0.283267, 0.282187, 0.288236, 0.300336, 0.435341, 0.439524, 0.447468, 0.457558, 0.468787, 0.475039, 0.24895, 0.260674, 0.254565, 0.266318, 0.260929, 0.272779, 0.270697, 0.282932, 0.294001, 0.307694, 0.475077, 0.5, 0.628034, 0.666116, 0.627751, 0.665847, 0.612391, 0.649232, 0.613928, 0.650971, 0.618661, 0.656194, 0.619493, 0.657078, 0.541188, 0.574526, 0.541268, 0.574464, 0.540992, 0.574036, 0.557987, 0.592113, 0.713584, 0.755872, 0.600651, 0.638358, 0.597451, 0.634977, 0.598099, 0.635626, 0.599655, 0.637406, 0.60404, 0.642281, 0.604555, 0.642842, 0.534128, 0.566644, 0.533852, 0.566217, 0.550847, 0.584293, 0.698722, 0.739791, 0.603303, 0.641102, 0.59722, 0.634598, 0.597867, 0.635247, 0.599423, 0.637027, 0.603809, 0.641902, 0.604323, 0.642463, 0.524539, 0.556136, 0.541533, 0.574212, 0.683922, 0.723764, 0.592192, 0.629158, 0.599928, 0.637399, 0.597281, 0.634497, 0.598837, 0.636277, 0.603223, 0.641152, 0.603737, 0.641713, 0.531871, 0.563765, 0.669186, 0.707801, 0.580734, 0.616848, 0.588469, 0.62509, 0.600052, 0.637361, 0.598314, 0.63559, 0.602699, 0.640464, 0.603214, 0.641026, 0.658949, 0.696854, 0.573776, 0.609565, 0.581511, 0.617806, 0.593094, 0.630077, 0.605064, 0.64291, 0.606677, 0.644803, 0.607191, 0.645364, 0.66147, 0.701702, 0.673318, 0.714424, 0.689296, 0.731491, 0.705364, 0.748797, 0.721495, 0.766186, 0.722818, 0.767559, 0.589048, 0.625323, 0.602422, 0.639457, 0.616189, 0.654153, 0.63033, 0.669253, 0.643342, 0.683323, 0.587924, 0.624, 0.601692, 0.638695, 0.615833, 0.653796, 0.628845, 0.667866, 0.589846, 0.62601, 0.603988, 0.641111, 0.616479, 0.654611, 0.608701, 0.64629, 0.618421, 0.656778, 0.623205, 0.662039},
    {0.119656, 0.322916, 0.318814, 0.320598, 0.32018, 0.325971, 0.326422, 0.344208, 0.462869, 0.470249, 0.479753, 0.489924, 0.501199, 0.293044, 0.305913, 0.294727, 0.307401, 0.303707, 0.316741, 0.313189, 0.326637, 0.33475, 0.349619, 0.355802, 0.371966, 0.5, 0.524927, 0.615313, 0.650434, 0.60194, 0.635919, 0.603153, 0.637326, 0.604681, 0.639097, 0.609142, 0.644092, 0.569867, 0.597807, 0.56983, 0.597636, 0.569468, 0.597131, 0.585976, 0.61449, 0.597362, 0.626355, 0.721973, 0.764708, 0.626723, 0.656374, 0.627295, 0.656958, 0.628381, 0.658222, 0.630013, 0.660084, 0.634322, 0.664822, 0.554449, 0.581537, 0.554471, 0.581425, 0.570979, 0.598783, 0.582364, 0.610649, 0.720109, 0.762662, 0.622853, 0.652269, 0.623426, 0.652853, 0.624511, 0.654117, 0.626144, 0.655979, 0.630453, 0.660717, 0.547446, 0.573803, 0.563954, 0.591161, 0.575339, 0.603027, 0.706404, 0.747721, 0.625385, 0.654857, 0.623145, 0.65243, 0.62423, 0.653694, 0.625863, 0.655557, 0.630172, 0.660295, 0.554903, 0.581466, 0.566289, 0.593331, 0.692757, 0.73284, 0.614586, 0.643365, 0.625736, 0.655077, 0.623625, 0.652938, 0.625258, 0.6548, 0.629567, 0.659538, 0.561234, 0.588032, 0.683349, 0.72272, 0.607784, 0.636269, 0.618934, 0.647982, 0.630596, 0.660374, 0.629033, 0.658833, 0.633342, 0.663571, 0.669819, 0.707959, 0.596721, 0.624503, 0.607871, 0.636216, 0.619533, 0.648608, 0.631255, 0.661078, 0.632856, 0.662933, 0.676033, 0.714398, 0.69074, 0.730238, 0.70565, 0.746433, 0.720618, 0.762703, 0.735643, 0.779064, 0.614544, 0.642603, 0.627955, 0.656792, 0.641424, 0.671059, 0.655254, 0.685727, 0.61585, 0.643943, 0.629321, 0.658209, 0.643151, 0.672877, 0.63128, 0.660365, 0.645114, 0.675033, 0.649761, 0.68005},
    {0.06653, 0.287272, 0.282814, 0.284734, 0.284224, 0.290273, 0.290667, 0.304246, 0.435287, 0.443231, 0.453321, 0.464108, 0.476042, 0.251729, 0.263727, 0.25322, 0.265028, 0.262798, 0.274972, 0.272924, 0.285517, 0.295928, 0.309957, 0.318509, 0.333884, 0.475073, 0.5, 0.596979, 0.632787, 0.582438, 0.617061, 0.583615, 0.618408, 0.585142, 0.620148, 0.589865, 0.625376, 0.542075, 0.575454, 0.542155, 0.575399, 0.54188, 0.574971, 0.558874, 0.593047, 0.570889, 0.605933, 0.711998, 0.754162, 0.600906, 0.638618, 0.601554, 0.639267, 0.602589, 0.640478, 0.604208, 0.642333, 0.608657, 0.647288, 0.525998, 0.558058, 0.526141, 0.55806, 0.543135, 0.576136, 0.55515, 0.589021, 0.709968, 0.751941, 0.596795, 0.634169, 0.597443, 0.634818, 0.598478, 0.636029, 0.600097, 0.637885, 0.604546, 0.642839, 0.519064, 0.550303, 0.536058, 0.568379, 0.548073, 0.581264, 0.695169, 0.735923, 0.59951, 0.636977, 0.597274, 0.634502, 0.598309, 0.635713, 0.599928, 0.637569, 0.604377, 0.642523, 0.526808, 0.558361, 0.538823, 0.571246, 0.680433, 0.719959, 0.588463, 0.625096, 0.600046, 0.637367, 0.597786, 0.635026, 0.599405, 0.636882, 0.603854, 0.641836, 0.533661, 0.565825, 0.670195, 0.709013, 0.581505, 0.617812, 0.593088, 0.630083, 0.605058, 0.642916, 0.603382, 0.64122, 0.607831, 0.646175, 0.655586, 0.693176, 0.570173, 0.605629, 0.581756, 0.6179, 0.593726, 0.630734, 0.60576, 0.643642, 0.607435, 0.645614, 0.662066, 0.702281, 0.678045, 0.719348, 0.694112, 0.736654, 0.710243, 0.754034, 0.726437, 0.771501, 0.589422, 0.62569, 0.60319, 0.640386, 0.61702, 0.655157, 0.631224, 0.670337, 0.590822, 0.627131, 0.604654, 0.641903, 0.618858, 0.657082, 0.606594, 0.644069, 0.6208, 0.659249, 0.625584, 0.664503},
    {0.117679, 0.319282, 0.318807, 0.315399, 0.317876, 0.324188, 0.324639, 0.32634, 0.345023, 0.463984, 0.473487, 0.483658, 0.49492, 0.290714, 0.303426, 0.295761, 0.308568, 0.301074, 0.314018, 0.3135, 0.327119, 0.335388, 0.35046, 0.355924, 0.372249, 0.384687, 0.403021, 0.5, 0.524936, 0.56741, 0.598683, 0.569611, 0.601169, 0.571285, 0.603101, 0.575705, 0.608046, 0.569864, 0.597803, 0.565994, 0.593698, 0.566016, 0.593587, 0.582524, 0.610945, 0.593909, 0.62281, 0.593725, 0.622492, 0.721551, 0.764269, 0.627213, 0.656886, 0.628298, 0.65815, 0.629443, 0.659492, 0.63103, 0.661329, 0.554445, 0.581527, 0.554467, 0.581415, 0.570975, 0.598773, 0.58236, 0.610639, 0.593728, 0.622489, 0.718235, 0.760632, 0.624163, 0.653623, 0.625249, 0.654887, 0.626393, 0.656228, 0.62798, 0.658065, 0.539145, 0.565375, 0.556036, 0.583126, 0.567422, 0.594991, 0.57879, 0.606842, 0.716429, 0.758645, 0.620353, 0.649577, 0.621438, 0.650841, 0.622582, 0.652182, 0.624169, 0.654019, 0.549071, 0.575563, 0.560457, 0.587428, 0.571824, 0.599279, 0.702782, 0.743764, 0.622944, 0.652224, 0.621217, 0.650478, 0.622361, 0.651819, 0.623948, 0.653656, 0.555786, 0.582523, 0.567154, 0.594374, 0.693374, 0.733644, 0.616525, 0.645522, 0.628188, 0.657914, 0.626136, 0.655852, 0.627723, 0.657689, 0.557838, 0.584404, 0.679844, 0.718883, 0.605462, 0.633756, 0.617125, 0.646148, 0.628846, 0.658618, 0.627237, 0.657051, 0.669698, 0.707829, 0.597514, 0.625318, 0.609176, 0.63771, 0.620897, 0.65018, 0.63298, 0.663045, 0.676887, 0.715271, 0.691798, 0.731466, 0.706766, 0.747736, 0.721792, 0.764088, 0.614009, 0.641973, 0.62748, 0.65624, 0.64131, 0.670901, 0.62895, 0.657874, 0.642784, 0.672535, 0.644709, 0.674659},
    {0.064382, 0.283319, 0.282814, 0.279092, 0.281748, 0.288367, 0.288761, 0.290477, 0.304993, 0.436545, 0.446635, 0.457422, 0.469344, 0.249239, 0.261089, 0.254416, 0.26637, 0.25987, 0.271972, 0.273209, 0.285999, 0.296573, 0.310831, 0.318594, 0.334153, 0.349566, 0.367213, 0.475064, 0.5, 0.54523, 0.577011, 0.547487, 0.579532, 0.549174, 0.581449, 0.553855, 0.58663, 0.542071, 0.575452, 0.53796, 0.571003, 0.538102, 0.571011, 0.555097, 0.589087, 0.567112, 0.601972, 0.567025, 0.601743, 0.711515, 0.753664, 0.601539, 0.63931, 0.602574, 0.640521, 0.603672, 0.641808, 0.605227, 0.643602, 0.525994, 0.558056, 0.526136, 0.558064, 0.543131, 0.57614, 0.555145, 0.589025, 0.567029, 0.60174, 0.707903, 0.749733, 0.598322, 0.635796, 0.599357, 0.637006, 0.600455, 0.638293, 0.602009, 0.640087, 0.510042, 0.540786, 0.527455, 0.559292, 0.53947, 0.572177, 0.551353, 0.584892, 0.705936, 0.747574, 0.594274, 0.63141, 0.595309, 0.632621, 0.596407, 0.633907, 0.597961, 0.635702, 0.520441, 0.551598, 0.532456, 0.564483, 0.544339, 0.577198, 0.6912, 0.731619, 0.597052, 0.63428, 0.595204, 0.632368, 0.596302, 0.633654, 0.597856, 0.635449, 0.527706, 0.559491, 0.53959, 0.572206, 0.680963, 0.720673, 0.590505, 0.627425, 0.602476, 0.640259, 0.600279, 0.637993, 0.601833, 0.639788, 0.530054, 0.561886, 0.666353, 0.704836, 0.579174, 0.615243, 0.591144, 0.628076, 0.603177, 0.640984, 0.601437, 0.639227, 0.655429, 0.693005, 0.571128, 0.606644, 0.583098, 0.619477, 0.595132, 0.632385, 0.607539, 0.645696, 0.662936, 0.703145, 0.679005, 0.720451, 0.695136, 0.737832, 0.71133, 0.75529, 0.589277, 0.625713, 0.603109, 0.640484, 0.617313, 0.655658, 0.604527, 0.642081, 0.618734, 0.657255, 0.620617, 0.659356},
    {0.133069, 0.333382, 0.332907, 0.333125, 0.330411, 0.339617, 0.340589, 0.34229, 0.343772, 0.364651, 0.47996, 0.49013, 0.500981, 0.30183, 0.315417, 0.306918, 0.3206, 0.315596, 0.329704, 0.324354, 0.338914, 0.349185, 0.365461, 0.370048, 0.387609, 0.39806, 0.417562, 0.43259, 0.45477, 0.5, 0.524956, 0.550885, 0.580541, 0.553231, 0.58321, 0.554311, 0.584522, 0.57473, 0.602771, 0.57168, 0.599507, 0.567869, 0.595462, 0.584761, 0.613213, 0.596147, 0.625078, 0.595962, 0.62476, 0.596245, 0.62506, 0.724336, 0.767227, 0.640035, 0.670141, 0.641179, 0.671482, 0.642324, 0.672848, 0.560131, 0.587336, 0.556321, 0.58329, 0.573212, 0.601041, 0.584598, 0.612907, 0.595966, 0.624757, 0.593195, 0.621796, 0.721021, 0.763591, 0.636985, 0.666877, 0.638129, 0.668219, 0.639274, 0.669585, 0.544831, 0.571177, 0.561722, 0.588929, 0.573108, 0.600794, 0.584476, 0.612645, 0.593258, 0.621852, 0.717763, 0.760014, 0.633994, 0.663673, 0.635139, 0.665015, 0.636283, 0.666381, 0.54646, 0.572947, 0.558229, 0.585206, 0.569597, 0.597057, 0.578378, 0.606264, 0.716014, 0.758086, 0.630243, 0.659687, 0.631387, 0.661028, 0.632531, 0.662394, 0.555643, 0.582433, 0.567011, 0.594283, 0.575793, 0.603491, 0.706606, 0.747966, 0.637214, 0.667123, 0.635546, 0.665454, 0.63669, 0.66682, 0.558079, 0.584707, 0.566861, 0.593915, 0.693076, 0.733205, 0.626535, 0.655751, 0.638256, 0.66822, 0.636204, 0.666183, 0.56066, 0.587274, 0.682931, 0.72215, 0.618586, 0.647312, 0.630307, 0.659782, 0.642029, 0.672277, 0.669826, 0.707961, 0.610354, 0.638578, 0.622075, 0.651048, 0.633796, 0.663543, 0.692045, 0.731232, 0.706935, 0.747421, 0.721822, 0.763632, 0.644701, 0.674063, 0.658232, 0.688414, 0.659774, 0.690126},
    {0.081021, 0.298477, 0.297972, 0.298203, 0.295216, 0.305001, 0.305965, 0.307681, 0.309301, 0.326268, 0.453369, 0.464156, 0.475649, 0.261398, 0.27415, 0.266615, 0.279473, 0.275756, 0.289056, 0.284971, 0.29874, 0.311547, 0.327055, 0.333927, 0.350768, 0.364081, 0.382939, 0.401317, 0.422989, 0.475044, 0.5, 0.527935, 0.558056, 0.530358, 0.560778, 0.531402, 0.562017, 0.547252, 0.580813, 0.544034, 0.577298, 0.539986, 0.572913, 0.557399, 0.591424, 0.569414, 0.604309, 0.569327, 0.60408, 0.569713, 0.604518, 0.714619, 0.756923, 0.615089, 0.653483, 0.616187, 0.654769, 0.617285, 0.656072, 0.532068, 0.564351, 0.52802, 0.559966, 0.545433, 0.578477, 0.557447, 0.591362, 0.569331, 0.604077, 0.566496, 0.601003, 0.711006, 0.752992, 0.611871, 0.649968, 0.612969, 0.651254, 0.614067, 0.652557, 0.516117, 0.547082, 0.53353, 0.565593, 0.545544, 0.578478, 0.557428, 0.591193, 0.566562, 0.601064, 0.707457, 0.749123, 0.608717, 0.646516, 0.609815, 0.647802, 0.610913, 0.649105, 0.517499, 0.548379, 0.529932, 0.561693, 0.541815, 0.574408, 0.55095, 0.584278, 0.705553, 0.747028, 0.604732, 0.642194, 0.60583, 0.64348, 0.606928, 0.644782, 0.527418, 0.559025, 0.539302, 0.57174, 0.548436, 0.581611, 0.695316, 0.73609, 0.61201, 0.65009, 0.610225, 0.648253, 0.611323, 0.649556, 0.530178, 0.561849, 0.539313, 0.57172, 0.680707, 0.720254, 0.60109, 0.638336, 0.613124, 0.651245, 0.610927, 0.648996, 0.533063, 0.564983, 0.669783, 0.708422, 0.593044, 0.629737, 0.605078, 0.642645, 0.617111, 0.65557, 0.655542, 0.693124, 0.584708, 0.620839, 0.596741, 0.633747, 0.608775, 0.646672, 0.679843, 0.720845, 0.695893, 0.738142, 0.711941, 0.755454, 0.621146, 0.659336, 0.635042, 0.674186, 0.636532, 0.675859},
    {0.129069, 0.329749, 0.329273, 0.329492, 0.330404, 0.334418, 0.338285, 0.340507, 0.34199, 0.336863, 0.368963, 0.486912, 0.497763, 0.29757, 0.310828, 0.302697, 0.316053, 0.311415, 0.325198, 0.323538, 0.338063, 0.344702, 0.360719, 0.368508, 0.386072, 0.396847, 0.416385, 0.430389, 0.452513, 0.449115, 0.472065, 0.5, 0.524992, 0.527619, 0.555521, 0.530201, 0.558472, 0.573906, 0.601926, 0.570857, 0.598662, 0.567866, 0.595458, 0.580925, 0.609275, 0.592694, 0.621534, 0.59251, 0.621216, 0.592793, 0.621515, 0.604806, 0.633809, 0.725788, 0.768854, 0.640356, 0.670637, 0.6415, 0.672003, 0.559308, 0.58649, 0.556317, 0.583286, 0.569376, 0.597103, 0.581145, 0.609362, 0.592513, 0.621213, 0.589743, 0.618252, 0.601757, 0.630546, 0.722472, 0.765217, 0.637306, 0.667374, 0.63845, 0.66874, 0.544827, 0.571174, 0.557886, 0.584991, 0.569656, 0.59725, 0.581023, 0.6091, 0.589805, 0.618308, 0.598766, 0.627341, 0.719214, 0.76164, 0.634315, 0.664169, 0.635459, 0.665536, 0.546456, 0.572938, 0.558225, 0.585196, 0.569593, 0.597047, 0.578375, 0.606254, 0.598888, 0.627457, 0.716014, 0.758122, 0.631383, 0.661024, 0.632528, 0.66239, 0.547342, 0.574004, 0.559094, 0.586248, 0.567876, 0.595456, 0.588388, 0.616658, 0.718504, 0.760955, 0.632012, 0.661827, 0.633156, 0.663193, 0.552247, 0.578804, 0.561029, 0.588012, 0.581542, 0.609214, 0.704974, 0.746194, 0.634722, 0.664593, 0.633054, 0.662949, 0.555212, 0.581764, 0.575725, 0.602966, 0.694829, 0.73514, 0.627157, 0.656549, 0.638879, 0.669043, 0.567491, 0.594232, 0.681725, 0.720951, 0.618925, 0.647814, 0.630646, 0.660309, 0.684258, 0.723192, 0.610169, 0.638481, 0.621949, 0.651035, 0.708418, 0.749047, 0.72331, 0.765258, 0.658951, 0.68928},
    {0.076639, 0.294499, 0.293994, 0.294224, 0.295191, 0.299333, 0.303462, 0.305748, 0.307368, 0.301509, 0.330764, 0.460605, 0.472097, 0.256775, 0.269207, 0.262033, 0.274571, 0.271215, 0.284196, 0.284116, 0.297861, 0.306569, 0.321833, 0.332162, 0.349029, 0.362674, 0.381592, 0.398831, 0.420468, 0.419459, 0.441944, 0.475008, 0.5, 0.502625, 0.530887, 0.505309, 0.533909, 0.546327, 0.579851, 0.54311, 0.576337, 0.539956, 0.572885, 0.553177, 0.587003, 0.56561, 0.600323, 0.565524, 0.600094, 0.56591, 0.600532, 0.57875, 0.613853, 0.716164, 0.758641, 0.615262, 0.653804, 0.61636, 0.655107, 0.531144, 0.563389, 0.527989, 0.559938, 0.541211, 0.574056, 0.553644, 0.587376, 0.565527, 0.600091, 0.562692, 0.597017, 0.575533, 0.610338, 0.712552, 0.75471, 0.612045, 0.650289, 0.613143, 0.651592, 0.516086, 0.547054, 0.529308, 0.561172, 0.541741, 0.574492, 0.553624, 0.587207, 0.562759, 0.597078, 0.572379, 0.606887, 0.709003, 0.750841, 0.60889, 0.646838, 0.609988, 0.64814, 0.517468, 0.548351, 0.529901, 0.561671, 0.541784, 0.574386, 0.550919, 0.584257, 0.572508, 0.60701, 0.705517, 0.747037, 0.605799, 0.643449, 0.606897, 0.644752, 0.518371, 0.549483, 0.530672, 0.562627, 0.539807, 0.572497, 0.561396, 0.59525, 0.708112, 0.749958, 0.606315, 0.644152, 0.607413, 0.645455, 0.523785, 0.55506, 0.53292, 0.564931, 0.554509, 0.587684, 0.693503, 0.73413, 0.609219, 0.64715, 0.607434, 0.645329, 0.527082, 0.558623, 0.548672, 0.581376, 0.682579, 0.722299, 0.601585, 0.638979, 0.613619, 0.651904, 0.540334, 0.572478, 0.668339, 0.707, 0.593249, 0.630081, 0.605282, 0.643006, 0.671687, 0.710063, 0.584354, 0.620493, 0.59645, 0.633481, 0.69746, 0.739857, 0.713511, 0.757168, 0.635604, 0.674891},
    {0.125069, 0.326115, 0.32564, 0.325858, 0.32677, 0.334411, 0.333086, 0.338203, 0.339685, 0.33508, 0.341314, 0.373954, 0.494544, 0.29328, 0.306208, 0.298448, 0.311474, 0.307206, 0.320661, 0.319369, 0.333567, 0.343898, 0.359877, 0.364037, 0.381339, 0.395319, 0.414858, 0.428715, 0.450826, 0.446769, 0.469642, 0.472381, 0.497375, 0.5, 0.525053, 0.527222, 0.5553, 0.573083, 0.60108, 0.570033, 0.597817, 0.567042, 0.594613, 0.580921, 0.609271, 0.588858, 0.617596, 0.589057, 0.617671, 0.58934, 0.61797, 0.601354, 0.630264, 0.604825, 0.633976, 0.727239, 0.770504, 0.640677, 0.671158, 0.558484, 0.585645, 0.555493, 0.582441, 0.569373, 0.5971, 0.577309, 0.605424, 0.589061, 0.617668, 0.58629, 0.614707, 0.598304, 0.627001, 0.601775, 0.630712, 0.723923, 0.766868, 0.637627, 0.667895, 0.544004, 0.570328, 0.557883, 0.584987, 0.56582, 0.593312, 0.577571, 0.605555, 0.586353, 0.614763, 0.595313, 0.623797, 0.598784, 0.627508, 0.720665, 0.763291, 0.634636, 0.66469, 0.546452, 0.572934, 0.554389, 0.581258, 0.56614, 0.593502, 0.574922, 0.60271, 0.595435, 0.623912, 0.595853, 0.624363, 0.717465, 0.759773, 0.631704, 0.661545, 0.547338, 0.573995, 0.55909, 0.586238, 0.567872, 0.595446, 0.588385, 0.616648, 0.600355, 0.629268, 0.718504, 0.761016, 0.633153, 0.66319, 0.543946, 0.570376, 0.552728, 0.579584, 0.573625, 0.601179, 0.585594, 0.613799, 0.716872, 0.759208, 0.62952, 0.659322, 0.548996, 0.575468, 0.569893, 0.597063, 0.581863, 0.609683, 0.706727, 0.748154, 0.635345, 0.665416, 0.561659, 0.588329, 0.57363, 0.600948, 0.693623, 0.733965, 0.627112, 0.656682, 0.565255, 0.592009, 0.696159, 0.736206, 0.618799, 0.647802, 0.699987, 0.740361, 0.622356, 0.651572, 0.724809, 0.766909},
    {0.072247, 0.290508, 0.290003, 0.290234, 0.2912, 0.299295, 0.297782, 0.303234, 0.304854, 0.299564, 0.306165, 0.335939, 0.468521, 0.252106, 0.264221, 0.257406, 0.269627, 0.266627, 0.279293, 0.27957, 0.293, 0.305709, 0.320953, 0.327178, 0.343806, 0.360903, 0.379852, 0.396899, 0.418551, 0.41679, 0.439222, 0.444479, 0.469113, 0.474947, 0.5, 0.502078, 0.530496, 0.545384, 0.578877, 0.542167, 0.575362, 0.539013, 0.571911, 0.553128, 0.586963, 0.56137, 0.59589, 0.561702, 0.596096, 0.562088, 0.596534, 0.574929, 0.609855, 0.578595, 0.613846, 0.717685, 0.760359, 0.615417, 0.654124, 0.530201, 0.562415, 0.527046, 0.558964, 0.541162, 0.574016, 0.549404, 0.582943, 0.561706, 0.596093, 0.55887, 0.593019, 0.571711, 0.60634, 0.575377, 0.610331, 0.714073, 0.756428, 0.6122, 0.650609, 0.515143, 0.546079, 0.529259, 0.561131, 0.537501, 0.570059, 0.549802, 0.583209, 0.558937, 0.593079, 0.568557, 0.602888, 0.572223, 0.606879, 0.710524, 0.75256, 0.609045, 0.647157, 0.517419, 0.54831, 0.525661, 0.557237, 0.537962, 0.570388, 0.54709700000000006, 0.580258, 0.568686, 0.603012, 0.569131, 0.60349, 0.707038, 0.748755, 0.605954, 0.643768, 0.518321, 0.549442, 0.530623, 0.562592, 0.539758, 0.572463, 0.561347, 0.595216, 0.573762, 0.608639, 0.708051, 0.749966, 0.607363, 0.645406, 0.514719, 0.545506, 0.52386, 0.555376, 0.545861, 0.578558, 0.558276, 0.591981, 0.706274, 0.747998, 0.603505, 0.64121, 0.520259, 0.551393, 0.542261, 0.574575, 0.554675, 0.587998, 0.69535, 0.736175, 0.609696, 0.647791, 0.533923, 0.565677, 0.546339, 0.5791, 0.681111, 0.720877, 0.60136, 0.638893, 0.537853, 0.569941, 0.68446, 0.72394, 0.59294, 0.629797, 0.688616, 0.728421, 0.596696, 0.63385, 0.715065, 0.758874},
    {0.12107, 0.322481, 0.322006, 0.322224, 0.323137, 0.330777, 0.333079, 0.333004, 0.334487, 0.333297, 0.339531, 0.346496, 0.379642, 0.288961, 0.301556, 0.294169, 0.306864, 0.302968, 0.316092, 0.315171, 0.32904, 0.33974, 0.355391, 0.363244, 0.380507, 0.390858, 0.410135, 0.424295, 0.446145, 0.445689, 0.468598, 0.469799, 0.494691, 0.472778, 0.497922, 0.5, 0.525147, 0.572259, 0.600235, 0.569209, 0.596972, 0.566219, 0.593767, 0.580098, 0.608426, 0.588855, 0.617592, 0.585221, 0.613733, 0.585504, 0.614032, 0.597902, 0.62672, 0.601373, 0.630431, 0.604844, 0.634161, 0.72869, 0.772188, 0.557661, 0.5848, 0.55467, 0.581596, 0.568549, 0.596254, 0.577306, 0.60542, 0.585225, 0.61373, 0.582454, 0.610769, 0.594852, 0.623456, 0.598323, 0.627168, 0.601794, 0.630898, 0.725374, 0.768552, 0.54318, 0.569483, 0.557059, 0.584142, 0.565816, 0.593308, 0.573735, 0.601617, 0.582517, 0.610825, 0.591861, 0.620252, 0.595332, 0.623963, 0.598803, 0.627693, 0.722117, 0.764974, 0.545629, 0.572089, 0.554385, 0.581254, 0.562305, 0.589564, 0.571086, 0.598772, 0.591983, 0.620367, 0.5924, 0.620818, 0.595871, 0.624548, 0.718916, 0.761457, 0.547335, 0.573991, 0.555254, 0.5823, 0.564036, 0.591508, 0.584932, 0.613104, 0.596902, 0.625723, 0.59732, 0.626193, 0.719955, 0.7627, 0.543942, 0.570366, 0.552724, 0.579574, 0.573621, 0.601169, 0.585591, 0.613789, 0.597561, 0.626427, 0.716872, 0.759302, 0.538609, 0.564907, 0.561975, 0.589028, 0.573945, 0.601648, 0.585915, 0.614286, 0.718625, 0.761201, 0.553742, 0.580294, 0.565713, 0.592913, 0.577683, 0.605551, 0.705521, 0.747012, 0.559807, 0.5865, 0.571838, 0.599197, 0.708057, 0.749253, 0.575392, 0.602968, 0.711889, 0.753408, 0.715734, 0.757579},
    {0.067845, 0.286501, 0.285996, 0.286227, 0.287193, 0.295288, 0.297728, 0.297537, 0.29917, 0.297603, 0.304204, 0.311577, 0.341799, 0.247385, 0.259188, 0.252726, 0.264637, 0.261989, 0.274344, 0.274972, 0.288093, 0.301152, 0.316088, 0.326307, 0.342922, 0.355908, 0.374624, 0.391954, 0.41337, 0.415478, 0.437983, 0.441528, 0.466091, 0.4447, 0.469504, 0.474853, 0.5, 0.544417, 0.577887, 0.541199, 0.574372, 0.538045, 0.57092, 0.552161, 0.585972, 0.561296, 0.595833, 0.557437, 0.591646, 0.557829, 0.59209, 0.571082, 0.60584, 0.574748, 0.609831, 0.578414, 0.61384, 0.719174, 0.762077, 0.529233, 0.561425, 0.526079, 0.557973, 0.540194, 0.573025, 0.54933, 0.582886, 0.557441, 0.591643, 0.554612, 0.588575, 0.567865, 0.602325, 0.571531, 0.606316, 0.575197, 0.610325, 0.715561, 0.758146, 0.514176, 0.545089, 0.528291, 0.560141, 0.537427, 0.570002, 0.545538, 0.578759, 0.554679, 0.588636, 0.56471, 0.598874, 0.568376, 0.602864, 0.572042, 0.606873, 0.712012, 0.754278, 0.516451, 0.54732, 0.525587, 0.557181, 0.533698, 0.565938, 0.542839, 0.575815, 0.56484, 0.598997, 0.565285, 0.599475, 0.568951, 0.603484, 0.708526, 0.750473, 0.518247, 0.549386, 0.526358, 0.558143, 0.535499, 0.568019, 0.5575, 0.591202, 0.569915, 0.604624, 0.57036, 0.605121, 0.709539, 0.751685, 0.514645, 0.545449, 0.523786, 0.555325, 0.545787, 0.578508, 0.558202, 0.59193, 0.570617, 0.605372, 0.70618, 0.748007, 0.508931, 0.539503, 0.533588, 0.565433, 0.546003, 0.578856, 0.558417, 0.592297, 0.708089, 0.750043, 0.52525, 0.556541, 0.537666, 0.569964, 0.550081, 0.583405, 0.693849, 0.734753, 0.531829, 0.563552, 0.544309, 0.577056, 0.697199, 0.737817, 0.548062, 0.58111, 0.701357, 0.742298, 0.705524, 0.746798},
    {0.170643, 0.138681, 0.353386, 0.463302, 0.46306, 0.474426, 0.487179, 0.488716, 0.490854, 0.494823, 0.500111, 0.506028, 0.512585, 0.285714, 0.295766, 0.285824, 0.295876, 0.410299, 0.436767, 0.409482, 0.435876, 0.425447, 0.452688, 0.430949, 0.458812, 0.430133, 0.457925, 0.430136, 0.457929, 0.42527, 0.452748, 0.426094, 0.453673, 0.426917, 0.454616, 0.427741, 0.455583, 0.5, 0.524921, 0.708525, 0.749609, 0.705773, 0.746545, 0.706811, 0.748124, 0.710499, 0.752468, 0.707984, 0.749648, 0.705498, 0.746862, 0.706129, 0.747497, 0.710349, 0.752079, 0.714599, 0.756707, 0.718877, 0.761387, 0.708404, 0.749237, 0.705653, 0.746173, 0.710056, 0.751422, 0.724206, 0.76709, 0.721806, 0.764389, 0.719465, 0.761752, 0.720269, 0.762566, 0.724692, 0.767357, 0.729173, 0.772223, 0.733711, 0.777171, 0.633376, 0.661952, 0.643216, 0.672383, 0.652393, 0.682013, 0.660779, 0.690896, 0.669897, 0.700439, 0.666899, 0.697232, 0.670311, 0.700884, 0.673782, 0.704614, 0.677312, 0.708428, 0.631063, 0.65959, 0.64024, 0.66922, 0.648626, 0.678103, 0.657744, 0.687645, 0.666903, 0.697229, 0.667261, 0.697621, 0.670732, 0.701351, 0.674262, 0.705165, 0.628587, 0.657395, 0.634201, 0.663319, 0.640214, 0.669556, 0.649372, 0.679139, 0.661887, 0.692322, 0.662305, 0.692791, 0.665835, 0.696605, 0.632668, 0.662016, 0.629855, 0.658997, 0.639013, 0.66858, 0.651529, 0.681763, 0.664103, 0.695023, 0.664579, 0.695576, 0.61794, 0.646443, 0.6271, 0.656026, 0.639615, 0.669209, 0.652189, 0.682469, 0.664822, 0.695813, 0.615248, 0.643536, 0.627764, 0.656718, 0.640339, 0.669978, 0.652972, 0.683322, 0.616261, 0.644601, 0.628837, 0.657861, 0.64147, 0.671205, 0.632332, 0.661573, 0.644968, 0.674917, 0.648535, 0.678706},
    {0.128802, 0.08699, 0.314642, 0.435356, 0.435096, 0.447535, 0.461298, 0.462945, 0.46523, 0.469453, 0.47506, 0.481323, 0.48825, 0.244087, 0.252261, 0.244188, 0.254822, 0.381891, 0.402382, 0.381053, 0.401445, 0.39746, 0.418918, 0.403025, 0.425474, 0.402193, 0.424546, 0.402197, 0.424548, 0.397229, 0.419187, 0.398074, 0.420149, 0.39892, 0.421123, 0.399765, 0.422113, 0.475079, 0.5, 0.697482, 0.739597, 0.694459, 0.736241, 0.694904, 0.737157, 0.698375, 0.741224, 0.695611, 0.738127, 0.692869, 0.735066, 0.693513, 0.735697, 0.69806, 0.740599, 0.702639, 0.745543, 0.707249, 0.750534, 0.698652, 0.741367, 0.69562, 0.738011, 0.69973, 0.742915, 0.714524, 0.759207, 0.711916, 0.756239, 0.709324, 0.753333, 0.710157, 0.754153, 0.714933, 0.759275, 0.719772, 0.764472, 0.724674, 0.769746, 0.609211, 0.646227, 0.619231, 0.656951, 0.62858, 0.666836, 0.637091, 0.675896, 0.646624, 0.686148, 0.643455, 0.68268, 0.647064, 0.686604, 0.650736, 0.690604, 0.654472, 0.694684, 0.606613, 0.643351, 0.615963, 0.653237, 0.624474, 0.662297, 0.634007, 0.672548, 0.643459, 0.682671, 0.643841, 0.683083, 0.647513, 0.687083, 0.651248, 0.691163, 0.603569, 0.640392, 0.609238, 0.646382, 0.615483, 0.653051, 0.624935, 0.663173, 0.637937, 0.677176, 0.638382, 0.677664, 0.642118, 0.681744, 0.60743, 0.644875, 0.604517, 0.641617, 0.613969, 0.65174, 0.626972, 0.665743, 0.640038, 0.679821, 0.640546, 0.680388, 0.59216, 0.628279, 0.601613, 0.638401, 0.614615, 0.652404, 0.627681, 0.666482, 0.64081, 0.68064, 0.589321, 0.625128, 0.602325, 0.639131, 0.61539, 0.653209, 0.628519, 0.667367, 0.590394, 0.62626, 0.603461, 0.640338, 0.61659, 0.654495, 0.607149, 0.644325, 0.620281, 0.658483, 0.62404, 0.662546},
    {0.174686, 0.142667, 0.320843, 0.355702, 0.462293, 0.473659, 0.485987, 0.487525, 0.495029, 0.498034, 0.503323, 0.509239, 0.515796, 0.288385, 0.298714, 0.382317, 0.408182, 0.287275, 0.297458, 0.409903, 0.436215, 0.425868, 0.453026, 0.430986, 0.458732, 0.43017, 0.457845, 0.434006, 0.46204, 0.42832, 0.455966, 0.429143, 0.45689, 0.429967, 0.457833, 0.430791, 0.458801, 0.291475, 0.302518, 0.5, 0.524921, 0.699052, 0.739433, 0.700894, 0.741882, 0.701698, 0.743074, 0.699142, 0.740213, 0.700323, 0.741551, 0.69759, 0.7385, 0.70177, 0.743041, 0.705979, 0.747628, 0.710218, 0.752267, 0.707649, 0.748481, 0.615868, 0.644295, 0.627668, 0.656742, 0.636452, 0.665963, 0.644838, 0.674846, 0.64315, 0.673134, 0.640152, 0.669921, 0.643563, 0.673574, 0.647034, 0.677304, 0.650564, 0.681117, 0.693755, 0.733219, 0.698158, 0.738468, 0.712308, 0.754128, 0.709908, 0.751427, 0.721338, 0.763807, 0.718818, 0.760976, 0.723241, 0.765767, 0.727722, 0.770633, 0.73226, 0.775581, 0.633009, 0.661499, 0.641884, 0.670812, 0.65027, 0.679695, 0.66081, 0.690796, 0.669744, 0.700145, 0.670102, 0.700537, 0.673573, 0.704267, 0.677103, 0.70808, 0.627125, 0.655681, 0.63274, 0.661605, 0.64328, 0.672706, 0.651725, 0.681534, 0.66424, 0.694716, 0.664657, 0.695186, 0.668187, 0.698999, 0.622381, 0.65104, 0.632921, 0.662141, 0.638749, 0.668184, 0.651264, 0.681366, 0.663838, 0.694626, 0.664315, 0.69518, 0.621007, 0.649587, 0.626835, 0.65563, 0.63935, 0.668812, 0.651924, 0.682072, 0.664558, 0.695416, 0.619118, 0.647641, 0.631634, 0.660823, 0.644208, 0.674083, 0.656842, 0.687427, 0.617077, 0.645439, 0.629654, 0.658699, 0.642287, 0.672043, 0.633148, 0.662411, 0.645785, 0.675755, 0.649351, 0.679544},
    {0.133177, 0.091347, 0.284594, 0.317134, 0.434375, 0.446814, 0.460148, 0.461782, 0.46975, 0.472961, 0.478569, 0.484832, 0.491758, 0.247069, 0.255533, 0.353301, 0.371184, 0.245778, 0.25654, 0.381617, 0.401936, 0.398024, 0.419409, 0.403195, 0.425536, 0.402364, 0.424601, 0.406302, 0.428997, 0.400493, 0.422702, 0.401338, 0.423663, 0.402183, 0.424638, 0.403028, 0.425628, 0.250391, 0.260403, 0.475079, 0.5, 0.687575, 0.728964, 0.688893, 0.73082, 0.689219, 0.731474, 0.686413, 0.728329, 0.687562, 0.729612, 0.684552, 0.726262, 0.689057, 0.731122, 0.693595, 0.736024, 0.698164, 0.740973, 0.697878, 0.738139, 0.59042, 0.6268, 0.60246, 0.639615, 0.611412, 0.649085, 0.619929, 0.658138, 0.618131, 0.656292, 0.614975, 0.652818, 0.618578, 0.656742, 0.622244, 0.660742, 0.625973, 0.664821, 0.682788, 0.724143, 0.686898, 0.729046, 0.701692, 0.745339, 0.699084, 0.742362, 0.711363, 0.755549, 0.708575, 0.752427, 0.713351, 0.757549, 0.71819, 0.762746, 0.723092, 0.76802, 0.609003, 0.645973, 0.618041, 0.655536, 0.626552, 0.66459, 0.637277, 0.675951, 0.646612, 0.685986, 0.646994, 0.686398, 0.650666, 0.690398, 0.654402, 0.694478, 0.60236, 0.639109, 0.608028, 0.645093, 0.618753, 0.656454, 0.627567, 0.665919, 0.64057, 0.679922, 0.641015, 0.68041, 0.64475, 0.684489, 0.597063, 0.633659, 0.607788, 0.64502, 0.613835, 0.651473, 0.626838, 0.665475, 0.639904, 0.679553, 0.640412, 0.680121, 0.59543, 0.631675, 0.601472, 0.638128, 0.614475, 0.652131, 0.627541, 0.666209, 0.64067, 0.680366, 0.593426, 0.629571, 0.606429, 0.643574, 0.619495, 0.657652, 0.632624, 0.67181, 0.591278, 0.627184, 0.604346, 0.641262, 0.617475, 0.65542, 0.608034, 0.64525, 0.621165, 0.659408, 0.624924, 0.663471},
    {0.17873, 0.146652, 0.324463, 0.322831, 0.35857, 0.472891, 0.48522, 0.486757, 0.493838, 0.502209, 0.506534, 0.51245, 0.519007, 0.291056, 0.301663, 0.385367, 0.4114, 0.382224, 0.407941, 0.288726, 0.299039, 0.42623, 0.453302, 0.431348, 0.459008, 0.430532, 0.45812, 0.433984, 0.461898, 0.432131, 0.460014, 0.432134, 0.460044, 0.432958, 0.460987, 0.433781, 0.461955, 0.294227, 0.305541, 0.300948, 0.312425, 0.5, 0.524921, 0.691889, 0.73227, 0.693272, 0.734089, 0.690676, 0.731187, 0.688914, 0.729312, 0.689848, 0.730385, 0.690664, 0.73124, 0.694833, 0.735786, 0.699031, 0.740384, 0.587887, 0.615704, 0.706198, 0.746891, 0.630811, 0.659969, 0.639595, 0.66919, 0.647981, 0.678072, 0.643187, 0.673049, 0.644021, 0.674026, 0.64438, 0.674412, 0.647851, 0.678142, 0.651381, 0.681956, 0.692436, 0.731891, 0.619511, 0.647965, 0.628295, 0.657186, 0.636681, 0.666069, 0.645171, 0.675056, 0.643298, 0.673151, 0.643657, 0.673537, 0.647127, 0.677267, 0.650657, 0.681081, 0.68626, 0.725515, 0.70041, 0.741174, 0.69801, 0.738474, 0.70944, 0.750845, 0.720691, 0.763031, 0.721789, 0.764177, 0.72627, 0.769043, 0.730809, 0.773991, 0.628583, 0.657069, 0.634197, 0.662992, 0.644435, 0.673777, 0.654791, 0.684684, 0.667081, 0.697632, 0.667498, 0.698101, 0.671028, 0.701915, 0.621221, 0.649642, 0.631459, 0.660427, 0.641815, 0.671334, 0.653616, 0.683761, 0.66619, 0.697021, 0.666667, 0.697574, 0.619545, 0.647873, 0.629901, 0.65878, 0.641702, 0.671207, 0.654277, 0.684467, 0.66691, 0.697811, 0.622184, 0.650785, 0.631369, 0.660427, 0.643944, 0.673687, 0.656577, 0.687031, 0.620947, 0.649544, 0.633523, 0.662804, 0.646157, 0.676148, 0.633965, 0.663249, 0.646601, 0.676593, 0.650168, 0.680382},
    {0.137552, 0.095704, 0.28854, 0.286724, 0.320216, 0.446093, 0.459427, 0.461061, 0.468587, 0.47748, 0.482078, 0.488341, 0.495267, 0.250052, 0.258806, 0.356564, 0.374705, 0.353337, 0.371061, 0.247368, 0.258258, 0.398528, 0.419836, 0.4037, 0.425964, 0.402869, 0.425029, 0.406413, 0.428989, 0.404538, 0.427087, 0.404542, 0.427115, 0.405387, 0.428089, 0.406233, 0.42908, 0.253455, 0.263759, 0.260567, 0.271036, 0.475079, 0.5, 0.67951, 0.720824, 0.680465, 0.722158, 0.677618, 0.718971, 0.675562, 0.716771, 0.676442, 0.717764, 0.677293, 0.718643, 0.681789, 0.723504, 0.686316, 0.728411, 0.561836, 0.595602, 0.696296, 0.736421, 0.605919, 0.64326, 0.61487, 0.652729, 0.623387, 0.661782, 0.618302, 0.656347, 0.61908, 0.657266, 0.619468, 0.657673, 0.623134, 0.661673, 0.626863, 0.665752, 0.681434, 0.720331, 0.594334, 0.630824, 0.603285, 0.640293, 0.611802, 0.649347, 0.620426, 0.658516, 0.61843, 0.656453, 0.618819, 0.656859, 0.622485, 0.660859, 0.626214, 0.664938, 0.674066, 0.715178, 0.68886, 0.731471, 0.686252, 0.728494, 0.698531, 0.741672, 0.710614, 0.754643, 0.711769, 0.755823, 0.716608, 0.76102, 0.72151, 0.766294, 0.604228, 0.641162, 0.609896, 0.647145, 0.62031, 0.658177, 0.630837, 0.669322, 0.643723, 0.683237, 0.644168, 0.683725, 0.647904, 0.687804, 0.596164, 0.632699, 0.606578, 0.643731, 0.617105, 0.654875, 0.62947, 0.668221, 0.642536, 0.682299, 0.643044, 0.682867, 0.594215, 0.630386, 0.604743, 0.641531, 0.617107, 0.654876, 0.630173, 0.668954, 0.643302, 0.683112, 0.596696, 0.632968, 0.606289, 0.6433, 0.619355, 0.657379, 0.632484, 0.671536, 0.595383, 0.631627, 0.608451, 0.645705, 0.62158, 0.659863, 0.608918, 0.646174, 0.622049, 0.660332, 0.625808, 0.664395},
    {0.17273, 0.128967, 0.318286, 0.316654, 0.315676, 0.346286, 0.469662, 0.4712, 0.47828, 0.486227, 0.495918, 0.500871, 0.507428, 0.272744, 0.282464, 0.373487, 0.399279, 0.370344, 0.39582, 0.367201, 0.392362, 0.288956, 0.299887, 0.41484, 0.442013, 0.414024, 0.441126, 0.417476, 0.444903, 0.415239, 0.442601, 0.419075, 0.446823, 0.419079, 0.446872, 0.419902, 0.447839, 0.293189, 0.305096, 0.299106, 0.311107, 0.308111, 0.32049, 0.5, 0.524921, 0.673349, 0.712826, 0.670713, 0.709884, 0.668623, 0.70765, 0.666614, 0.70551, 0.671097, 0.710488, 0.671901, 0.711348, 0.676059, 0.715906, 0.571922, 0.599297, 0.57156, 0.598792, 0.705969, 0.747144, 0.627977, 0.657317, 0.636363, 0.6662, 0.631081, 0.660655, 0.629298, 0.658841, 0.633489, 0.663418, 0.633906, 0.663881, 0.637436, 0.667695, 0.562066, 0.588645, 0.692264, 0.732204, 0.616736, 0.645373, 0.625122, 0.654256, 0.633612, 0.663243, 0.628634, 0.658026, 0.632824, 0.662602, 0.633242, 0.663065, 0.636772, 0.666879, 0.678559, 0.717264, 0.605495, 0.633428, 0.613881, 0.642311, 0.622371, 0.651299, 0.630677, 0.660092, 0.63216, 0.661786, 0.632578, 0.662249, 0.636108, 0.666063, 0.687036, 0.726726, 0.684636, 0.724025, 0.696066, 0.736396, 0.707317, 0.748575, 0.722187, 0.764737, 0.723343, 0.765958, 0.727882, 0.770905, 0.617364, 0.645594, 0.627603, 0.656378, 0.637656, 0.666969, 0.651368, 0.681475, 0.663717, 0.6945, 0.664193, 0.695054, 0.615688, 0.643824, 0.625742, 0.654415, 0.639454, 0.668921, 0.651803, 0.681946, 0.664436, 0.69529, 0.615408, 0.643635, 0.629121, 0.658141, 0.640981, 0.670645, 0.653615, 0.683989, 0.61821, 0.646731, 0.627455, 0.65645, 0.640089, 0.669794, 0.632031, 0.661397, 0.644668, 0.674741, 0.645181, 0.675263},
    {0.131299, 0.076551, 0.28212, 0.280305, 0.279183, 0.306721, 0.442652, 0.444286, 0.451812, 0.460264, 0.470543, 0.475795, 0.482722, 0.229711, 0.237587, 0.344035, 0.3618, 0.340808, 0.358156, 0.337581, 0.354512, 0.247115, 0.258634, 0.386342, 0.407887, 0.38551, 0.406953, 0.389055, 0.410913, 0.386787, 0.408576, 0.390725, 0.412997, 0.390729, 0.413037, 0.391574, 0.414028, 0.251876, 0.262843, 0.258118, 0.26918, 0.26773, 0.279176, 0.475079, 0.5, 0.659234, 0.699579, 0.656345, 0.696351, 0.65393, 0.693759, 0.651605, 0.691269, 0.656347, 0.696491, 0.657189, 0.697371, 0.661675, 0.702236, 0.545024, 0.578129, 0.544749, 0.577701, 0.695449, 0.736037, 0.602639, 0.640125, 0.611156, 0.649178, 0.605549, 0.643173, 0.603561, 0.641073, 0.607883, 0.645873, 0.608335, 0.646355, 0.612064, 0.650434, 0.535024, 0.567191, 0.680649, 0.720011, 0.591117, 0.627752, 0.599634, 0.636805, 0.608257, 0.645975, 0.602974, 0.640323, 0.607297, 0.645122, 0.607748, 0.645604, 0.611477, 0.649683, 0.66585, 0.703984, 0.579595, 0.615379, 0.588112, 0.624433, 0.596735, 0.633602, 0.605161, 0.642555, 0.60671, 0.644372, 0.607162, 0.644854, 0.610891, 0.648933, 0.674348, 0.715918, 0.671732, 0.712941, 0.684011, 0.72612, 0.696094, 0.739082, 0.71212, 0.756355, 0.713338, 0.757609, 0.718241, 0.762883, 0.592331, 0.628839, 0.602745, 0.63987, 0.612961, 0.650686, 0.627039, 0.665711, 0.639988, 0.679701, 0.640496, 0.680269, 0.590381, 0.626526, 0.600598, 0.637341, 0.614676, 0.652366, 0.627625, 0.666356, 0.640754, 0.680514, 0.589779, 0.625765, 0.603858, 0.64079, 0.616286, 0.654211, 0.629415, 0.668369, 0.592431, 0.628541, 0.602088, 0.638949, 0.615217, 0.653107, 0.6068, 0.644135, 0.619931, 0.658292, 0.62047, 0.658837},
    {0.160827, 0.11579, 0.31422, 0.312588, 0.31161, 0.317308, 0.338716, 0.459362, 0.466442, 0.47439, 0.483657, 0.493976, 0.499569, 0.275161, 0.285093, 0.365161, 0.390824, 0.362017, 0.387366, 0.358874, 0.383908, 0.370492, 0.396139, 0.276576, 0.286416, 0.402638, 0.429111, 0.406091, 0.432888, 0.403853, 0.430586, 0.407306, 0.43439, 0.411142, 0.43863, 0.411145, 0.438704, 0.289501, 0.301625, 0.298302, 0.310781, 0.306728, 0.319535, 0.326651, 0.340766, 0.5, 0.524923, 0.643776, 0.681042, 0.642203, 0.679367, 0.639866, 0.676869, 0.641406, 0.678634, 0.645877, 0.683618, 0.646671, 0.684489, 0.559414, 0.586434, 0.559052, 0.585929, 0.57556, 0.603281, 0.705593, 0.747115, 0.6279, 0.657556, 0.622618, 0.652011, 0.620346, 0.649677, 0.62192, 0.651462, 0.62617, 0.656116, 0.626647, 0.656663, 0.549559, 0.575782, 0.566067, 0.593133, 0.691888, 0.732175, 0.616659, 0.645612, 0.625149, 0.654599, 0.619682, 0.648861, 0.621256, 0.650646, 0.625506, 0.6553, 0.625982, 0.655847, 0.556632, 0.583045, 0.678241, 0.717294, 0.605477, 0.633727, 0.613967, 0.642714, 0.622273, 0.651508, 0.620651, 0.649889, 0.624901, 0.654543, 0.625377, 0.65509, 0.668833, 0.707165, 0.595465, 0.623209, 0.603955, 0.632197, 0.612261, 0.64099, 0.623923, 0.653383, 0.625465, 0.655154, 0.625942, 0.655701, 0.67159, 0.709913, 0.68302, 0.722285, 0.694271, 0.734463, 0.709141, 0.750616, 0.724069, 0.766854, 0.725283, 0.768157, 0.613125, 0.641123, 0.623178, 0.651714, 0.636588, 0.665903, 0.650359, 0.680487, 0.662767, 0.693596, 0.612356, 0.640412, 0.625767, 0.654602, 0.639538, 0.669186, 0.651946, 0.682295, 0.612239, 0.640407, 0.626012, 0.654991, 0.637931, 0.667579, 0.630588, 0.659931, 0.639894, 0.669734, 0.644541, 0.674758},
    {0.118558, 0.062295, 0.277966, 0.276151, 0.27503, 0.280982, 0.298373, 0.431563, 0.439089, 0.447541, 0.457379, 0.468313, 0.474229, 0.232432, 0.240579, 0.335213, 0.352811, 0.331986, 0.349167, 0.32876, 0.345523, 0.340632, 0.358127, 0.233705, 0.244128, 0.373645, 0.394067, 0.37719, 0.398028, 0.374922, 0.395691, 0.378466, 0.399677, 0.382404, 0.40411, 0.382408, 0.404167, 0.247532, 0.258776, 0.256926, 0.268526, 0.265911, 0.277842, 0.287174, 0.300421, 0.475077, 0.5, 0.627552, 0.66561, 0.625696, 0.663623, 0.623011, 0.660741, 0.624548, 0.662481, 0.62928, 0.667704, 0.630112, 0.668588, 0.531891, 0.564478, 0.531615, 0.56405, 0.54861, 0.58212, 0.694574, 0.7355, 0.602296, 0.640072, 0.596688, 0.634067, 0.594179, 0.631397, 0.595735, 0.633178, 0.600121, 0.638053, 0.600635, 0.638614, 0.52189, 0.55354, 0.538885, 0.57161, 0.679774, 0.719474, 0.590774, 0.627699, 0.599397, 0.636868, 0.593593, 0.630647, 0.595149, 0.632427, 0.599534, 0.637302, 0.600049, 0.637864, 0.529223, 0.561163, 0.665038, 0.70351, 0.579315, 0.615389, 0.587938, 0.624559, 0.596364, 0.633511, 0.594625, 0.63174, 0.599011, 0.636615, 0.599526, 0.637176, 0.654801, 0.692558, 0.568935, 0.604376, 0.577558, 0.613546, 0.585984, 0.622498, 0.597954, 0.635331, 0.599567, 0.637224, 0.600081, 0.637785, 0.65758, 0.697762, 0.669859, 0.710941, 0.681942, 0.723903, 0.697968, 0.741168, 0.714057, 0.758515, 0.715339, 0.759847, 0.587931, 0.624133, 0.598148, 0.634948, 0.611915, 0.649644, 0.626056, 0.664745, 0.639068, 0.678815, 0.586808, 0.622803, 0.600576, 0.637499, 0.614717, 0.652599, 0.627729, 0.666669, 0.586376, 0.622237, 0.600519, 0.637337, 0.613009, 0.650838, 0.605231, 0.642517, 0.614952, 0.653004, 0.619736, 0.658265},
    {0.16487, 0.119776, 0.313998, 0.315782, 0.315325, 0.321024, 0.326723, 0.343799, 0.465675, 0.473623, 0.482889, 0.492784, 0.503744, 0.27752, 0.287707, 0.366908, 0.392686, 0.366871, 0.392515, 0.364216, 0.389578, 0.375834, 0.401809, 0.373514, 0.399349, 0.278027, 0.288002, 0.406275, 0.432975, 0.404038, 0.430673, 0.40749, 0.434476, 0.410943, 0.438298, 0.414779, 0.442563, 0.292016, 0.304389, 0.300858, 0.313587, 0.309324, 0.322382, 0.329287, 0.343655, 0.356224, 0.372448, 0.5, 0.524927, 0.615313, 0.650426, 0.613728, 0.648746, 0.61494, 0.650153, 0.616469, 0.651924, 0.620929, 0.656919, 0.553913, 0.580869, 0.553934, 0.580757, 0.570442, 0.598109, 0.583552, 0.611844, 0.717973, 0.760527, 0.624938, 0.654382, 0.622667, 0.652047, 0.623752, 0.653311, 0.625384, 0.655174, 0.629694, 0.659911, 0.54691, 0.573135, 0.563418, 0.590487, 0.576528, 0.604222, 0.704268, 0.745587, 0.62747, 0.65697, 0.622386, 0.651625, 0.623471, 0.652889, 0.625104, 0.654751, 0.629413, 0.659489, 0.554367, 0.580792, 0.567477, 0.594527, 0.690622, 0.730706, 0.616671, 0.645478, 0.624977, 0.654272, 0.622866, 0.652132, 0.624499, 0.653995, 0.628808, 0.658732, 0.562423, 0.589222, 0.677838, 0.716894, 0.606764, 0.63507, 0.615069, 0.643864, 0.626731, 0.656256, 0.625168, 0.654715, 0.629477, 0.659453, 0.668015, 0.706297, 0.599533, 0.627495, 0.607839, 0.636288, 0.619501, 0.648681, 0.631222, 0.661151, 0.632824, 0.663006, 0.671125, 0.709335, 0.682377, 0.721513, 0.697247, 0.737667, 0.712175, 0.753897, 0.72716, 0.770216, 0.614302, 0.642321, 0.627713, 0.656511, 0.641182, 0.670777, 0.655012, 0.685445, 0.613696, 0.641795, 0.627167, 0.656061, 0.640998, 0.670729, 0.629126, 0.658217, 0.64296, 0.672884, 0.647607, 0.677902},
    {0.122918, 0.066651, 0.277712, 0.279633, 0.279081, 0.285033, 0.290983, 0.30381, 0.438364, 0.446816, 0.456654, 0.467147, 0.478744, 0.235092, 0.243508, 0.336988, 0.354724, 0.337074, 0.354668, 0.334368, 0.351594, 0.346241, 0.364198, 0.34387, 0.361642, 0.235292, 0.245838, 0.377508, 0.398257, 0.37524, 0.39592, 0.378784, 0.399906, 0.382329, 0.403904, 0.386267, 0.408354, 0.250352, 0.261873, 0.259787, 0.271671, 0.268813, 0.281029, 0.290116, 0.303649, 0.318958, 0.33439, 0.475073, 0.5, 0.596987, 0.632787, 0.595121, 0.630795, 0.596299, 0.632142, 0.597826, 0.633882, 0.602548, 0.63911, 0.525765, 0.55792, 0.525907, 0.557921, 0.542902, 0.575991, 0.556419, 0.590309, 0.708042, 0.750006, 0.599147, 0.63662, 0.596637, 0.633951, 0.597672, 0.635162, 0.599291, 0.637017, 0.60374, 0.641972, 0.51883, 0.550165, 0.535825, 0.568235, 0.549343, 0.582553, 0.693243, 0.733988, 0.601861, 0.639428, 0.596469, 0.633635, 0.597504, 0.634846, 0.599123, 0.636702, 0.603572, 0.641656, 0.526575, 0.558216, 0.540092, 0.572535, 0.678506, 0.718024, 0.590814, 0.627547, 0.59924, 0.6365, 0.59698, 0.634159, 0.5986, 0.636015, 0.603048, 0.640969, 0.534931, 0.567107, 0.664577, 0.703068, 0.580562, 0.616675, 0.588988, 0.625627, 0.600958, 0.63846, 0.599283, 0.636764, 0.603732, 0.641719, 0.6539, 0.691616, 0.573165, 0.608885, 0.581591, 0.617838, 0.593561, 0.630671, 0.605594, 0.643579, 0.60727, 0.645551, 0.657025, 0.697071, 0.669108, 0.710033, 0.685135, 0.727298, 0.701224, 0.744637, 0.717377, 0.762061, 0.589193, 0.625421, 0.602961, 0.640117, 0.616791, 0.654888, 0.630995, 0.670068, 0.58824, 0.624285, 0.602071, 0.639057, 0.616276, 0.654237, 0.604011, 0.641223, 0.618218, 0.656403, 0.623002, 0.661658},
    {0.164991, 0.119769, 0.317618, 0.31421, 0.316647, 0.322867, 0.328567, 0.329558, 0.348002, 0.469641, 0.478907, 0.488802, 0.499338, 0.276918, 0.28711, 0.370541, 0.396532, 0.366671, 0.392427, 0.366634, 0.392256, 0.37874, 0.405009, 0.37642, 0.402549, 0.373277, 0.399094, 0.278449, 0.288485, 0.403755, 0.430287, 0.407207, 0.43409, 0.41066, 0.437912, 0.414496, 0.442171, 0.294502, 0.307131, 0.299677, 0.312438, 0.311086, 0.324438, 0.331377, 0.34607, 0.357797, 0.374304, 0.384687, 0.403013, 0.5, 0.524936, 0.581131, 0.613555, 0.583332, 0.616041, 0.584533, 0.617453, 0.58605, 0.619235, 0.554729, 0.581701, 0.554751, 0.581589, 0.571259, 0.598941, 0.584369, 0.612676, 0.595813, 0.624603, 0.716521, 0.758947, 0.625809, 0.655274, 0.626895, 0.656537, 0.628039, 0.657879, 0.629731, 0.659826, 0.539429, 0.565549, 0.55632, 0.583294, 0.56943, 0.597029, 0.580875, 0.608956, 0.714715, 0.75696, 0.621999, 0.651228, 0.623084, 0.652492, 0.624228, 0.653833, 0.62592, 0.65578, 0.549355, 0.575731, 0.562465, 0.589466, 0.573909, 0.601393, 0.701068, 0.742079, 0.62459, 0.653875, 0.62286300000000006, 0.652128, 0.624007, 0.65347, 0.625699, 0.655416, 0.557794, 0.584554, 0.566133, 0.593175, 0.688284, 0.728267, 0.615066, 0.64386, 0.626728, 0.656253, 0.624676, 0.65419, 0.626368, 0.656137, 0.56065, 0.587396, 0.678462, 0.71767, 0.607835, 0.636285, 0.619497, 0.648677, 0.631218, 0.661147, 0.629714, 0.65969, 0.664991, 0.702971, 0.596833, 0.62458, 0.608496, 0.636972, 0.620217, 0.649442, 0.631997, 0.661996, 0.671939, 0.71016, 0.68681, 0.726313, 0.701738, 0.742543, 0.716723, 0.758854, 0.614822, 0.642862, 0.628294, 0.657129, 0.641822, 0.671479, 0.629764, 0.658763, 0.643295, 0.673113, 0.645326, 0.675346},
    {0.123047, 0.06664, 0.281654, 0.277931, 0.280545, 0.287067, 0.293017, 0.293983, 0.308268, 0.442573, 0.452411, 0.462903, 0.47406, 0.234492, 0.242928, 0.340849, 0.358909, 0.336744, 0.35446, 0.33683, 0.354405, 0.349223, 0.367579, 0.346853, 0.365023, 0.343626, 0.361382, 0.235731, 0.246336, 0.37494, 0.395482, 0.378485, 0.399468, 0.38203, 0.403466, 0.385968, 0.40791, 0.253138, 0.264934, 0.258449, 0.270388, 0.270688, 0.283229, 0.29235, 0.306241, 0.320633, 0.336377, 0.349574, 0.367213, 0.475064, 0.5, 0.560127, 0.593109, 0.562383, 0.59563, 0.563551, 0.596978, 0.565068, 0.598723, 0.526648, 0.558845, 0.52679, 0.558853, 0.543785, 0.576923, 0.557302, 0.591241, 0.56938, 0.604191, 0.70645, 0.748296, 0.600088, 0.637588, 0.601123, 0.638799, 0.602221, 0.640085, 0.603903, 0.64202, 0.510696, 0.541576, 0.528109, 0.560075, 0.541627, 0.574393, 0.553704, 0.587343, 0.704483, 0.746138, 0.59604, 0.633202, 0.597075, 0.634413, 0.598173, 0.635699, 0.599855, 0.637634, 0.521095, 0.552381, 0.534613, 0.566699, 0.54669, 0.57965, 0.689747, 0.730183, 0.598818, 0.636072, 0.596969, 0.63416, 0.598068, 0.635447, 0.59975, 0.637382, 0.529863, 0.561701, 0.538647, 0.571069, 0.675818, 0.715226, 0.588977, 0.625629, 0.600948, 0.638462, 0.598751, 0.636197, 0.600433, 0.638132, 0.533046, 0.565142, 0.66514, 0.703775, 0.58158, 0.617839, 0.59355, 0.630672, 0.605584, 0.643581, 0.603971, 0.641964, 0.650595, 0.688004, 0.570313, 0.605722, 0.582284, 0.618555, 0.594317, 0.631463, 0.606414, 0.644452, 0.657854, 0.697888, 0.673881, 0.715153, 0.689971, 0.732491, 0.706123, 0.749908, 0.589732, 0.62597, 0.603563, 0.640741, 0.617457, 0.655592, 0.604982, 0.642338, 0.618877, 0.657189, 0.620889, 0.65943},
    {0.162418, 0.12002, 0.317871, 0.318089, 0.315336, 0.32445, 0.330671, 0.331662, 0.333869, 0.353155, 0.474646, 0.484541, 0.495077, 0.272659, 0.282382, 0.367642, 0.393317, 0.366825, 0.392426, 0.362955, 0.388321, 0.377679, 0.403841, 0.375847, 0.401901, 0.372705, 0.398446, 0.372787, 0.398461, 0.275664, 0.285381, 0.395194, 0.42125, 0.398646, 0.425071, 0.402098, 0.428918, 0.293871, 0.306487, 0.30241, 0.315448, 0.310152, 0.323558, 0.333386, 0.348395, 0.360134, 0.376989, 0.386272, 0.404879, 0.418869, 0.439873, 0.5, 0.524956, 0.55196, 0.582093, 0.554387, 0.584844, 0.555576, 0.586267, 0.555301, 0.582278, 0.55149, 0.578232, 0.568382, 0.595977, 0.581492, 0.609712, 0.592936, 0.621639, 0.592811, 0.621384, 0.716285, 0.758707, 0.629514, 0.659229, 0.630658, 0.66057, 0.631862, 0.661995, 0.54, 0.566119, 0.556892, 0.583865, 0.570002, 0.5976, 0.581447, 0.609526, 0.592874, 0.621441, 0.713027, 0.75513, 0.626523, 0.656024, 0.627668, 0.657366, 0.628871, 0.658791, 0.541629, 0.567883, 0.555123, 0.582012, 0.566567, 0.593938, 0.577994, 0.605852, 0.711278, 0.753202, 0.622772, 0.652038, 0.623916, 0.653379, 0.62512, 0.654804, 0.552538, 0.579232, 0.560877, 0.587853, 0.572304, 0.599767, 0.698495, 0.73939, 0.626637, 0.656162, 0.624969, 0.654493, 0.626173, 0.655918, 0.555777, 0.582467, 0.567204, 0.594381, 0.688672, 0.728793, 0.61979, 0.64898, 0.631511, 0.66145, 0.629519, 0.659471, 0.55795, 0.584473, 0.675203, 0.714094, 0.608789, 0.637275, 0.62051, 0.649745, 0.63229, 0.662299, 0.665119, 0.703103, 0.600904, 0.628901, 0.612625, 0.64137, 0.624405, 0.653924, 0.672961, 0.71122, 0.687892, 0.72745, 0.702877, 0.743761, 0.631226, 0.660179, 0.644757, 0.67453, 0.646299, 0.676241},
    {0.120271, 0.06691, 0.281921, 0.282152, 0.279123, 0.288811, 0.29533, 0.296297, 0.298547, 0.313728, 0.447873, 0.458366, 0.469522, 0.230015, 0.238004, 0.337876, 0.355547, 0.337038, 0.354616, 0.332933, 0.350167, 0.348118, 0.36636, 0.346269, 0.364374, 0.343042, 0.360733, 0.343114, 0.36069, 0.232773, 0.243077, 0.366191, 0.386147, 0.369736, 0.390145, 0.37328, 0.39416, 0.252503, 0.264303, 0.2615, 0.273738, 0.269615, 0.282236, 0.29449, 0.308731, 0.323131, 0.339259, 0.351254, 0.369205, 0.386445, 0.406891, 0.475044, 0.5, 0.528651, 0.559228, 0.531157, 0.562034, 0.532315, 0.563387, 0.527262, 0.559481, 0.523214, 0.555096, 0.540626, 0.5736, 0.554144, 0.587919, 0.566222, 0.600869, 0.566199, 0.600708, 0.70617, 0.748012, 0.604006, 0.641849, 0.605104, 0.643135, 0.606265, 0.644501, 0.511311, 0.542211, 0.528723, 0.560716, 0.542241, 0.575035, 0.554319, 0.587985, 0.566265, 0.600768, 0.702621, 0.744144, 0.600852, 0.638397, 0.60195, 0.639683, 0.603111, 0.641049, 0.512693, 0.543502, 0.526628, 0.558249, 0.538706, 0.5712, 0.550653, 0.583982, 0.700717, 0.742049, 0.596867, 0.634075, 0.597965, 0.635361, 0.599126, 0.636727, 0.524115, 0.555575, 0.532899, 0.564943, 0.544845, 0.577726, 0.686788, 0.7271, 0.600851, 0.638382, 0.599066, 0.636546, 0.600227, 0.637911, 0.52771, 0.559445, 0.539657, 0.572228, 0.676111, 0.715649, 0.593865, 0.631022, 0.605899, 0.64393, 0.603765, 0.641744, 0.530186, 0.561973, 0.661566, 0.699878, 0.582599, 0.618904, 0.594632, 0.631813, 0.606729, 0.644801, 0.650709, 0.688114, 0.574621, 0.610372, 0.586654, 0.623281, 0.598751, 0.636269, 0.658888, 0.698938, 0.67498, 0.716277, 0.691132, 0.733693, 0.606952, 0.644567, 0.620848, 0.659418, 0.622338, 0.66109},
    {0.15836, 0.11602, 0.314237, 0.314456, 0.315329, 0.319252, 0.328366, 0.329879, 0.332086, 0.334913, 0.357191, 0.481323, 0.491858, 0.268196, 0.277564, 0.36423, 0.389714, 0.363413, 0.388823, 0.362597, 0.387933, 0.373488, 0.399518, 0.374274, 0.400345, 0.371619, 0.397411, 0.371702, 0.397426, 0.359965, 0.384911, 0.274212, 0.283836, 0.395175, 0.421405, 0.398627, 0.425252, 0.289651, 0.30194, 0.29823, 0.310943, 0.309336, 0.322707, 0.328903, 0.343653, 0.358594, 0.375452, 0.38506, 0.403701, 0.416668, 0.437617, 0.44804, 0.471349, 0.5, 0.524992, 0.528734, 0.557113, 0.531386, 0.560134, 0.554477, 0.581433, 0.551486, 0.578228, 0.564546, 0.592039, 0.57804, 0.606168, 0.589484, 0.618094, 0.589359, 0.61784, 0.592538, 0.6211, 0.717736, 0.760333, 0.629835, 0.659725, 0.631038, 0.66115, 0.539997, 0.566116, 0.553056, 0.579927, 0.56655, 0.594055, 0.577994, 0.605982, 0.589421, 0.617896, 0.589547, 0.617896, 0.714478, 0.756756, 0.626844, 0.65652, 0.628047, 0.657946, 0.541625, 0.567873, 0.555119, 0.582002, 0.566564, 0.593928, 0.577991, 0.605842, 0.589669, 0.618011, 0.711278, 0.753239, 0.623912, 0.653375, 0.625116, 0.654801, 0.544236, 0.570804, 0.552959, 0.579818, 0.564386, 0.591732, 0.576064, 0.6039, 0.710393, 0.75238, 0.621435, 0.650866, 0.622639, 0.652291, 0.549945, 0.576564, 0.561372, 0.588478, 0.57305, 0.600647, 0.70057, 0.741783, 0.627978, 0.657823, 0.626369, 0.656238, 0.552501, 0.578964, 0.56418, 0.591132, 0.687101, 0.727084, 0.61736, 0.646511, 0.62914, 0.659065, 0.558041, 0.584554, 0.677019, 0.716093, 0.609475, 0.638137, 0.621255, 0.650691, 0.665457, 0.703466, 0.598653, 0.626613, 0.610433, 0.639167, 0.689375, 0.729076, 0.704364, 0.745387, 0.645476, 0.675396},
    {0.115864, 0.062527, 0.277943, 0.278174, 0.279098, 0.283143, 0.292828, 0.294364, 0.296615, 0.299507, 0.317928, 0.454814, 0.46597, 0.225184, 0.23284, 0.334224, 0.351622, 0.333386, 0.350692, 0.332548, 0.349761, 0.343542, 0.361561, 0.344484, 0.362594, 0.341778, 0.359522, 0.34185, 0.359479, 0.329859, 0.346517, 0.231146, 0.241359, 0.366024, 0.386154, 0.369569, 0.390169, 0.247921, 0.259401, 0.256959, 0.268878, 0.26876, 0.281357, 0.289512, 0.303509, 0.321366, 0.337519, 0.349847, 0.367858, 0.383959, 0.40437, 0.417907, 0.440772, 0.475008, 0.5, 0.503383, 0.532102, 0.50614, 0.535197, 0.526337, 0.558519, 0.523183, 0.555068, 0.536405, 0.569179, 0.550341, 0.583932, 0.562418, 0.596883, 0.562395, 0.596721, 0.565871, 0.600357, 0.707716, 0.74973, 0.604179, 0.64217, 0.605341, 0.643536, 0.51128, 0.542184, 0.524502, 0.556295, 0.538438, 0.571048, 0.550515, 0.583999, 0.562462, 0.596782, 0.562717, 0.596905, 0.704167, 0.745862, 0.601025, 0.638719, 0.602186, 0.640084, 0.512662, 0.543474, 0.526597, 0.558227, 0.538675, 0.571178, 0.550622, 0.583961, 0.562846, 0.597028, 0.700681, 0.742057, 0.597934, 0.63533, 0.599095, 0.636696, 0.515067, 0.546033, 0.524269, 0.55583, 0.536216, 0.568613, 0.548441, 0.58168, 0.699584, 0.740968, 0.595155, 0.632445, 0.596317, 0.63381, 0.521316, 0.552656, 0.533263, 0.565439, 0.545488, 0.578507, 0.688907, 0.729525, 0.601995, 0.639835, 0.600273, 0.638078, 0.524205, 0.555613, 0.53643, 0.568681, 0.674362, 0.713754, 0.59114, 0.628147, 0.603236, 0.641135, 0.530247, 0.562012, 0.663506, 0.701991, 0.583162, 0.619615, 0.595258, 0.632603, 0.651022, 0.688448, 0.572174, 0.607816, 0.584271, 0.620804, 0.676546, 0.717991, 0.692702, 0.735407, 0.62141, 0.660122},
    {0.154303, 0.11202, 0.310604, 0.310822, 0.311695, 0.31924400000000003, 0.323168, 0.327575, 0.330303, 0.33313, 0.339088, 0.361946, 0.48864, 0.263675, 0.272684, 0.360759, 0.386048, 0.359943, 0.385157, 0.359126, 0.384267, 0.373071, 0.399067, 0.370024, 0.39596, 0.369987, 0.395792, 0.370557, 0.396328, 0.358821, 0.383813, 0.359644, 0.384738, 0.272761, 0.282315, 0.395156, 0.421586, 0.285401, 0.297361, 0.294021, 0.306405, 0.305167, 0.318211, 0.328099, 0.342811, 0.354123, 0.37072, 0.383531, 0.402174, 0.415467, 0.436449, 0.445613, 0.468843, 0.471266, 0.496617, 0.5, 0.525053, 0.528298, 0.556849, 0.553654, 0.580587, 0.550663, 0.577383, 0.564542, 0.592035, 0.574204, 0.60223, 0.586032, 0.61455, 0.585906, 0.614295, 0.589086, 0.617555, 0.592556, 0.621267, 0.719187, 0.761984, 0.630215, 0.660305, 0.539173, 0.565271, 0.553052, 0.579923, 0.562714, 0.590117, 0.574542, 0.602437, 0.585969, 0.614351, 0.586095, 0.614351, 0.589566, 0.618062, 0.71593, 0.758407, 0.627224, 0.657101, 0.541622, 0.56787, 0.551283, 0.578064, 0.563111, 0.590384, 0.574538, 0.602298, 0.586217, 0.614466, 0.586634, 0.614917, 0.712729, 0.754889, 0.624292, 0.653955, 0.544233, 0.570794, 0.552955, 0.579808, 0.564382, 0.591722, 0.57606, 0.60389, 0.58803, 0.61651, 0.710392, 0.75244, 0.622635, 0.652288, 0.541644, 0.568136, 0.553454, 0.580443, 0.565133, 0.592612, 0.577102, 0.605232, 0.712468, 0.754797, 0.622835, 0.652611, 0.546669, 0.573061, 0.558348, 0.585229, 0.570317, 0.597849, 0.698999, 0.740098, 0.625606, 0.655438, 0.552593, 0.579045, 0.564564, 0.591665, 0.688917, 0.729107, 0.618105, 0.647457, 0.55579, 0.582248, 0.677358, 0.71648, 0.607283, 0.635933, 0.681185, 0.720635, 0.61084, 0.639704, 0.705864, 0.747038},
    {0.111445, 0.058136, 0.273953, 0.274183, 0.275108, 0.283106, 0.287148, 0.29185, 0.29467, 0.297562, 0.303869, 0.322852, 0.462394, 0.220277, 0.227601, 0.330494, 0.347622, 0.329656, 0.346692, 0.328818, 0.345761, 0.343079, 0.361079, 0.33983, 0.357719, 0.339916, 0.357667, 0.340508, 0.358192, 0.328518, 0.345231, 0.329363, 0.346196, 0.229496, 0.239641, 0.365839, 0.38616, 0.243293, 0.254457, 0.252372, 0.263976, 0.264214, 0.276496, 0.288652, 0.302629, 0.316382, 0.332296, 0.348076, 0.366118, 0.382547, 0.403022, 0.415156, 0.437966, 0.442887, 0.467898, 0.474947, 0.5, 0.502797, 0.531669, 0.525395, 0.557545, 0.52224, 0.554093, 0.536356, 0.569139, 0.546101, 0.579499, 0.558596, 0.592885, 0.558573, 0.592723, 0.562049, 0.596358, 0.565715, 0.600349, 0.709237, 0.751448, 0.604398, 0.642553, 0.510337, 0.541209, 0.524453, 0.556255, 0.534198, 0.566615, 0.546693, 0.58, 0.55864, 0.592783, 0.558895, 0.592907, 0.562561, 0.596897, 0.705688, 0.74758, 0.601243, 0.639101, 0.512613, 0.543434, 0.522358, 0.553794, 0.534853, 0.567179, 0.5468, 0.579962, 0.559025, 0.59303, 0.55947, 0.593508, 0.702202, 0.743775, 0.598152, 0.635712, 0.515018, 0.545993, 0.52422, 0.555796, 0.536167, 0.568579, 0.548391, 0.581646, 0.560806, 0.595069, 0.699523, 0.740977, 0.596267, 0.633761, 0.51225, 0.543102, 0.524615, 0.556313, 0.53684, 0.569381, 0.549255, 0.582804, 0.701678, 0.743394, 0.596344, 0.633959, 0.517793, 0.548812, 0.530018, 0.56188, 0.542433, 0.575302, 0.687134, 0.727631, 0.599314, 0.637021, 0.524247, 0.555639, 0.536663, 0.569062, 0.676277, 0.715867, 0.591747, 0.628918, 0.527781, 0.559449, 0.663795, 0.702324, 0.58076, 0.61712, 0.667951, 0.706806, 0.584516, 0.621174, 0.694255, 0.737113},
    {0.150245, 0.108021, 0.30697, 0.307189, 0.308062, 0.315611, 0.323161, 0.322376, 0.327999, 0.331347, 0.337305, 0.343955, 0.367437, 0.259096, 0.26774, 0.357229, 0.382319, 0.356413, 0.381428, 0.355596, 0.380538, 0.369541, 0.395338, 0.369547, 0.395445, 0.365678, 0.391343, 0.36897, 0.394773, 0.357676, 0.382715, 0.3585, 0.38364, 0.359323, 0.384583, 0.27131, 0.280826, 0.281123, 0.292751, 0.289782, 0.301836, 0.300969, 0.313684, 0.323941, 0.338325, 0.353329, 0.369888, 0.379071, 0.397452, 0.41395, 0.434932, 0.444424, 0.467685, 0.468614, 0.49386, 0.471702, 0.497203, 0.5, 0.525147, 0.55283, 0.579742, 0.549839, 0.576538, 0.563719, 0.59119, 0.5742, 0.602226, 0.582196, 0.610611, 0.582454, 0.61075, 0.585633, 0.614011, 0.589104, 0.617722, 0.592634, 0.621511, 0.720639, 0.763668, 0.53835, 0.564425, 0.552229, 0.579078, 0.56271, 0.590113, 0.570706, 0.598499, 0.582517, 0.610806, 0.582642, 0.610806, 0.586113, 0.614518, 0.589643, 0.618307, 0.717381, 0.760091, 0.540798, 0.567024, 0.551279, 0.57806, 0.559275, 0.586446, 0.571086, 0.598753, 0.582764, 0.610922, 0.583182, 0.611373, 0.586712, 0.615162, 0.714181, 0.756573, 0.544229, 0.57079, 0.549119, 0.57587, 0.56093, 0.588177, 0.572608, 0.600346, 0.584578, 0.612965, 0.585054, 0.613494, 0.711844, 0.754124, 0.54164, 0.568126, 0.553451, 0.580433, 0.565129, 0.592602, 0.577099, 0.605222, 0.589128, 0.617919, 0.712468, 0.754891, 0.538368, 0.564632, 0.55043, 0.577194, 0.5624, 0.589814, 0.574429, 0.602511, 0.710897, 0.753145, 0.546761, 0.573142, 0.558732, 0.585762, 0.570761, 0.598459, 0.700815, 0.742154, 0.550341, 0.576739, 0.562372, 0.589436, 0.689256, 0.729527, 0.565926, 0.593207, 0.693088, 0.733682, 0.69699, 0.737913},
    {0.107009, 0.053734, 0.269945, 0.270176, 0.271101, 0.279099, 0.287094, 0.286153, 0.292139, 0.295601, 0.301907, 0.308944, 0.328501, 0.215288, 0.222285, 0.32668, 0.343543, 0.325842, 0.342612, 0.325004, 0.341682, 0.339265, 0.357, 0.339283, 0.357158, 0.335178, 0.352712, 0.338671, 0.356398, 0.327152, 0.343928, 0.327997, 0.344893, 0.328842, 0.345876, 0.227812, 0.237923, 0.238613, 0.249466, 0.247733, 0.259027, 0.259616, 0.271589, 0.284094, 0.297764, 0.315511, 0.331412, 0.343081, 0.36089, 0.380765, 0.401277, 0.413733, 0.436613, 0.439866, 0.464803, 0.443151, 0.468331, 0.474853, 0.5, 0.524427, 0.556555, 0.521273, 0.553103, 0.535388, 0.568149, 0.546027, 0.579442, 0.554332, 0.588435, 0.554727, 0.588708, 0.558203, 0.592344, 0.561869, 0.596334, 0.565598, 0.600406, 0.710725, 0.753166, 0.509369, 0.540219, 0.523485, 0.555265, 0.534124, 0.566558, 0.542429, 0.575551, 0.554793, 0.588768, 0.555048, 0.588892, 0.558714, 0.592882, 0.562443, 0.596954, 0.707176, 0.749298, 0.511645, 0.542443, 0.522284, 0.553737, 0.530589, 0.56273, 0.542953, 0.575947, 0.555178, 0.589015, 0.555623, 0.589494, 0.559352, 0.593566, 0.70369, 0.745493, 0.514944, 0.545936, 0.519955, 0.551346, 0.53232, 0.564564, 0.544545, 0.577631, 0.556959, 0.591054, 0.557467, 0.591614, 0.701011, 0.742695, 0.512176, 0.543045, 0.524541, 0.556263, 0.536766, 0.56933, 0.549181, 0.582753, 0.561658, 0.596258, 0.701584, 0.743402, 0.508702, 0.539241, 0.521346, 0.552737, 0.53376, 0.56616, 0.546238, 0.579664, 0.699872, 0.741499, 0.517811, 0.548822, 0.530227, 0.562244, 0.542705, 0.575749, 0.689015, 0.729744, 0.521757, 0.553061, 0.534237, 0.566565, 0.676534, 0.716201, 0.53799, 0.570618, 0.680692, 0.720682, 0.684922, 0.725246},
    {0.191124, 0.177036, 0.158272, 0.369893, 0.469933, 0.480887, 0.490528, 0.503758, 0.505738, 0.508547, 0.513598, 0.519239, 0.52548, 0.364719, 0.389298, 0.300283, 0.311547, 0.301038, 0.31232, 0.419456, 0.446003, 0.435421, 0.462815, 0.43807, 0.465872, 0.445551, 0.474002, 0.445555, 0.474006, 0.439869, 0.467932, 0.440692, 0.468856, 0.441516, 0.469799, 0.442339, 0.470767, 0.291596, 0.301348, 0.292351, 0.302122, 0.412113, 0.438164, 0.428078, 0.454976, 0.440586, 0.468109, 0.446087, 0.474235, 0.445271, 0.473352, 0.444699, 0.472738, 0.445523, 0.473663, 0.446346, 0.474605, 0.44717, 0.475573, 0.5, 0.524921, 0.697977, 0.737873, 0.699738, 0.740241, 0.700432, 0.741321, 0.704109, 0.745655, 0.701582, 0.742828, 0.698849, 0.739778, 0.703029, 0.744319, 0.707239, 0.748906, 0.711477, 0.753545, 0.703004, 0.743069, 0.704006, 0.74461, 0.707623, 0.74887, 0.721789, 0.764558, 0.719408, 0.76188, 0.716847, 0.759009, 0.72123, 0.763758, 0.725671, 0.768584, 0.730169, 0.77349, 0.644729, 0.673524, 0.651776, 0.680959, 0.661013, 0.69065, 0.669458, 0.699597, 0.678391, 0.708945, 0.678749, 0.709337, 0.68222, 0.713067, 0.68575, 0.716881, 0.634301, 0.662926, 0.643537, 0.672617, 0.651598, 0.681152, 0.660043, 0.68998, 0.672558, 0.703162, 0.672975, 0.703632, 0.676505, 0.707445, 0.633156, 0.662033, 0.63883, 0.66802, 0.644658, 0.674063, 0.657173, 0.687245, 0.669747, 0.700505, 0.670224, 0.701059, 0.637358, 0.666778, 0.63436, 0.663565, 0.646875, 0.676748, 0.659449, 0.690008, 0.672083, 0.703352, 0.622508, 0.651075, 0.635025, 0.664257, 0.647599, 0.677517, 0.660233, 0.690861, 0.620468, 0.648873, 0.633044, 0.662133, 0.645678, 0.675477, 0.636539, 0.665845, 0.649176, 0.679189, 0.652742, 0.682978},
    {0.15071, 0.135622, 0.108205, 0.332652, 0.442441, 0.454452, 0.464984, 0.479254, 0.481369, 0.48437, 0.489725, 0.495694, 0.502284, 0.335552, 0.351663, 0.260023, 0.269401, 0.260778, 0.27263, 0.391824, 0.412509, 0.40823, 0.429982, 0.410877, 0.433356, 0.418463, 0.441942, 0.418473, 0.441944, 0.412664, 0.435649, 0.41351, 0.436611, 0.414355, 0.437585, 0.4152, 0.438575, 0.250763, 0.258633, 0.251519, 0.261861, 0.384296, 0.404398, 0.400703, 0.421871, 0.413566, 0.435522, 0.419131, 0.44208, 0.418299, 0.441155, 0.417722, 0.440519, 0.418567, 0.441481, 0.419413, 0.442455, 0.420258, 0.443445, 0.475079, 0.5, 0.686867, 0.727791, 0.688102, 0.729564, 0.688314, 0.730095, 0.691775, 0.734154, 0.689, 0.731049, 0.68599, 0.727698, 0.690495, 0.732558, 0.695033, 0.737461, 0.699601, 0.74241, 0.693601, 0.735555, 0.694003, 0.736431, 0.697391, 0.740413, 0.712207, 0.756728, 0.70962, 0.753783, 0.70679, 0.750619, 0.711525, 0.7557, 0.716323, 0.760855, 0.721184, 0.766088, 0.621386, 0.658804, 0.628547, 0.666416, 0.63796, 0.676366, 0.646534, 0.685492, 0.655869, 0.695527, 0.656251, 0.695939, 0.659923, 0.699939, 0.663658, 0.704019, 0.61008, 0.646979, 0.619493, 0.656929, 0.627673, 0.665627, 0.636487, 0.675092, 0.64949, 0.689095, 0.649935, 0.689583, 0.65367, 0.693662, 0.608504, 0.645469, 0.614235, 0.651524, 0.620283, 0.657977, 0.633285, 0.671979, 0.646351, 0.686058, 0.646859, 0.686625, 0.612492, 0.650082, 0.609382, 0.646608, 0.622385, 0.66061, 0.63545, 0.674689, 0.648579, 0.688846, 0.59709, 0.633335, 0.610094, 0.647338, 0.62316, 0.661416, 0.636289, 0.675574, 0.594943, 0.630948, 0.60801, 0.645026, 0.621139, 0.659184, 0.611698, 0.649014, 0.624829, 0.663172, 0.628589, 0.667234},
    {0.195167, 0.181079, 0.162258, 0.32752, 0.372761, 0.48012, 0.489761, 0.502567, 0.504547, 0.512722, 0.51681, 0.52245, 0.528692, 0.367769, 0.392522, 0.302954, 0.314495, 0.393525, 0.419526, 0.302489, 0.313902, 0.435783, 0.46309, 0.438432, 0.466148, 0.445529, 0.473859, 0.445533, 0.473864, 0.443679, 0.47198, 0.443683, 0.472011, 0.444507, 0.472954, 0.44533, 0.473921, 0.294347, 0.30438, 0.384132, 0.40958, 0.293802, 0.303704, 0.42844, 0.455251, 0.440948, 0.468385, 0.446066, 0.474093, 0.445249, 0.47321, 0.44851, 0.476786, 0.448514, 0.476817, 0.449337, 0.47776, 0.450161, 0.478727, 0.302023, 0.313133, 0.5, 0.524921, 0.690774, 0.73067, 0.692087, 0.732418, 0.693065, 0.733802, 0.690498, 0.730934, 0.691432, 0.732008, 0.692248, 0.732862, 0.696417, 0.737409, 0.700614, 0.742007, 0.701685, 0.741741, 0.629574, 0.658286, 0.638278, 0.667425, 0.647121, 0.676707, 0.655566, 0.685654, 0.653693, 0.683749, 0.654052, 0.684134, 0.657522, 0.687864, 0.661052, 0.691678, 0.692108, 0.731657, 0.695725, 0.735916, 0.709891, 0.751597, 0.70751, 0.748919, 0.718721, 0.761064, 0.719779, 0.762168, 0.724219, 0.766993, 0.728718, 0.7719, 0.635758, 0.664314, 0.644692, 0.673688, 0.652754, 0.682223, 0.663109, 0.69313, 0.675399, 0.706078, 0.675816, 0.706547, 0.679346, 0.710361, 0.631694, 0.660318, 0.637368, 0.666306, 0.647724, 0.677213, 0.659525, 0.68964, 0.672099, 0.7029, 0.672576, 0.703453, 0.62707, 0.655802, 0.637426, 0.666709, 0.64661, 0.676351, 0.659185, 0.689611, 0.671818, 0.702955, 0.625575, 0.654219, 0.63476, 0.663861, 0.647334, 0.677121, 0.659968, 0.690464, 0.624337, 0.652978, 0.636914, 0.666238, 0.649547, 0.679582, 0.637355, 0.666683, 0.649992, 0.680027, 0.653558, 0.683816},
    {0.155085, 0.139997, 0.112561, 0.291725, 0.335733, 0.45373, 0.464262, 0.478103, 0.480206, 0.488889, 0.493234, 0.499203, 0.505793, 0.338815, 0.355184, 0.263005, 0.272674, 0.365341, 0.383497, 0.262368, 0.274348, 0.408735, 0.430409, 0.411382, 0.433783, 0.418575, 0.44194, 0.418585, 0.441936, 0.41671, 0.440034, 0.416714, 0.440062, 0.417559, 0.441036, 0.418404, 0.442027, 0.253827, 0.261989, 0.355705, 0.3732, 0.253109, 0.263579, 0.401208, 0.422299, 0.414071, 0.43595, 0.419243, 0.442079, 0.418411, 0.441147, 0.421768, 0.444904, 0.421772, 0.444932, 0.422617, 0.445907, 0.423462, 0.446897, 0.262127, 0.272209, 0.475079, 0.5, 0.67876, 0.719609, 0.679642, 0.720862, 0.680161, 0.721726, 0.677345, 0.718574, 0.678225, 0.719567, 0.679076, 0.720445, 0.683572, 0.725306, 0.688099, 0.730214, 0.692247, 0.731743, 0.605014, 0.641886, 0.613884, 0.651266, 0.622899, 0.6608, 0.631479, 0.66992, 0.629484, 0.667856, 0.629872, 0.668263, 0.633538, 0.672263, 0.637267, 0.676342, 0.681171, 0.722563, 0.684559, 0.726545, 0.699374, 0.74286, 0.696788, 0.739907, 0.708829, 0.752836, 0.709943, 0.753974, 0.714741, 0.759129, 0.719602, 0.764362, 0.611948, 0.649032, 0.62105, 0.658659, 0.629231, 0.66735, 0.639758, 0.678495, 0.652644, 0.69241, 0.653089, 0.692898, 0.656824, 0.696977, 0.607294, 0.644185, 0.613026, 0.650235, 0.623553, 0.66138, 0.635918, 0.674725, 0.648984, 0.688803, 0.649492, 0.689371, 0.602124, 0.638866, 0.612652, 0.65001, 0.62225, 0.660343, 0.635316, 0.674421, 0.648445, 0.688579, 0.60036, 0.636732, 0.609953, 0.647064, 0.623019, 0.661143, 0.636148, 0.6753, 0.599048, 0.635391, 0.612115, 0.649469, 0.625244, 0.663627, 0.612582, 0.649938, 0.625713, 0.664096, 0.629473, 0.668159},
    {0.189168, 0.178031, 0.144611, 0.321343, 0.320326, 0.36032, 0.474164, 0.486969, 0.48895, 0.4967, 0.506155, 0.510831, 0.517073, 0.355496, 0.380003, 0.284642, 0.295296, 0.381645, 0.407405, 0.378502, 0.403947, 0.302718, 0.314749, 0.421924, 0.449153, 0.429021, 0.456865, 0.429025, 0.456869, 0.426788, 0.454567, 0.430624, 0.458789, 0.430627, 0.458838, 0.431451, 0.459806, 0.289944, 0.30027, 0.372332, 0.39754, 0.369189, 0.394081, 0.294031, 0.304551, 0.42444, 0.45139, 0.429558, 0.457098, 0.428741, 0.456215, 0.431618, 0.459374, 0.435454, 0.463595, 0.435458, 0.463644, 0.436281, 0.464612, 0.300262, 0.311898, 0.309226, 0.32124, 0.5, 0.524921, 0.672273, 0.711269, 0.673964, 0.713419, 0.671357, 0.710511, 0.669348, 0.708371, 0.673831, 0.713349, 0.674635, 0.71421, 0.678793, 0.718767, 0.570109, 0.596889, 0.701484, 0.742023, 0.626719, 0.655612, 0.635562, 0.664894, 0.644007, 0.67384, 0.639029, 0.668623, 0.643219, 0.673199, 0.643637, 0.673662, 0.647167, 0.677476, 0.68778, 0.727082, 0.615478, 0.643667, 0.624321, 0.652949, 0.632766, 0.661896, 0.641072, 0.67069, 0.642555, 0.672383, 0.642973, 0.672847, 0.646503, 0.67666, 0.682226, 0.721339, 0.696393, 0.737019, 0.694011, 0.734341, 0.705222, 0.746478, 0.720052, 0.762599, 0.721168, 0.763779, 0.725666, 0.768686, 0.627783, 0.656213, 0.633457, 0.6622, 0.64351, 0.67279, 0.657222, 0.687297, 0.669571, 0.700322, 0.670048, 0.700875, 0.620542, 0.648911, 0.630595, 0.659502, 0.644307, 0.674008, 0.656168, 0.686512, 0.668801, 0.699856, 0.618744, 0.647011, 0.632457, 0.661518, 0.644318, 0.674022, 0.656951, 0.687366, 0.621546, 0.650108, 0.630791, 0.659827, 0.643425, 0.673171, 0.635367, 0.664773, 0.648004, 0.678117, 0.648517, 0.678639},
    {0.148832, 0.136823, 0.093451, 0.285305, 0.284142, 0.32207, 0.447446, 0.461287, 0.463389, 0.471631, 0.481657, 0.486615, 0.493206, 0.325876, 0.341863, 0.242673, 0.251456, 0.352812, 0.370592, 0.349585, 0.366948, 0.262115, 0.274723, 0.394023, 0.415707, 0.401217, 0.423864, 0.401227, 0.42386, 0.398959, 0.421523, 0.402897, 0.425944, 0.4029, 0.425984, 0.403746, 0.426975, 0.248578, 0.257085, 0.343258, 0.360385, 0.340031, 0.35674, 0.252856, 0.263963, 0.396719, 0.41788, 0.401891, 0.424009, 0.401059, 0.423077, 0.404023, 0.4264, 0.407961, 0.430821, 0.407965, 0.430861, 0.40881, 0.431851, 0.259759, 0.270436, 0.26933, 0.280391, 0.475079, 0.5, 0.658524, 0.698398, 0.659809, 0.700085, 0.656952, 0.696892, 0.654626, 0.694401, 0.659369, 0.699623, 0.66021, 0.700503, 0.664696, 0.705369, 0.543625, 0.576099, 0.691433, 0.73139, 0.601716, 0.638725, 0.61073, 0.648259, 0.619311, 0.657378, 0.614028, 0.651726, 0.61835, 0.656526, 0.618802, 0.657008, 0.622531, 0.661087, 0.676634, 0.715364, 0.590194, 0.626352, 0.599208, 0.635886, 0.607789, 0.645005, 0.616215, 0.653958, 0.617764, 0.655775, 0.618215, 0.656257, 0.621944, 0.660337, 0.66991, 0.710858, 0.684725, 0.727173, 0.682139, 0.72422, 0.69418, 0.73714, 0.710165, 0.754371, 0.711342, 0.755584, 0.716202, 0.760817, 0.603404, 0.640264, 0.609135, 0.646314, 0.619351, 0.657129, 0.633429, 0.672154, 0.646379, 0.686145, 0.646887, 0.686712, 0.595467, 0.631932, 0.605684, 0.642747, 0.619762, 0.657772, 0.63219, 0.671193, 0.645319, 0.685351, 0.593386, 0.629468, 0.607465, 0.644493, 0.619893, 0.657914, 0.633022, 0.672072, 0.596038, 0.632244, 0.605695, 0.642652, 0.618824, 0.65681, 0.610407, 0.647838, 0.623538, 0.661995, 0.624077, 0.66254},
    {0.177264, 0.174142, 0.131435, 0.317277, 0.31626, 0.321879, 0.352434, 0.475093, 0.477073, 0.484823, 0.493853, 0.503897, 0.509174, 0.347169, 0.371555, 0.287059, 0.297925, 0.373318, 0.398951, 0.370175, 0.395493, 0.381793, 0.407724, 0.290338, 0.301278, 0.417636, 0.44485, 0.41764, 0.444855, 0.415402, 0.442553, 0.418855, 0.446356, 0.422691, 0.450596, 0.422694, 0.45067, 0.275794, 0.285476, 0.363548, 0.388588, 0.360405, 0.38513, 0.372023, 0.397361, 0.294407, 0.305426, 0.416448, 0.443581, 0.415631, 0.442698, 0.418508, 0.445856, 0.42196, 0.449659, 0.425796, 0.453899, 0.4258, 0.453973, 0.299568, 0.311686, 0.307913, 0.320358, 0.327727, 0.341476, 0.5, 0.524922, 0.649808, 0.687578, 0.64716, 0.684629, 0.644824, 0.68213, 0.646364, 0.683896, 0.650835, 0.68888, 0.651628, 0.689751, 0.557602, 0.584026, 0.57408, 0.601346, 0.701108, 0.741993, 0.627099, 0.65625, 0.635544, 0.665197, 0.630077, 0.659458, 0.631651, 0.661243, 0.635901, 0.665897, 0.636377, 0.666444, 0.564646, 0.591258, 0.687461, 0.727112, 0.615917, 0.644365, 0.624362, 0.653312, 0.632668, 0.662105, 0.631046, 0.660487, 0.635296, 0.66514, 0.635772, 0.665688, 0.67462, 0.71324, 0.605846, 0.633788, 0.613907, 0.642323, 0.622213, 0.651117, 0.633875, 0.663509, 0.635417, 0.665281, 0.635894, 0.665828, 0.683205, 0.72276, 0.680824, 0.720082, 0.692035, 0.732219, 0.706864, 0.748332, 0.721751, 0.764529, 0.722925, 0.765791, 0.617452, 0.64565, 0.627506, 0.65624, 0.640916, 0.670429, 0.654687, 0.685013, 0.667095, 0.698122, 0.615654, 0.64375, 0.629066, 0.657939, 0.642837, 0.672523, 0.655245, 0.685632, 0.615537, 0.643744, 0.629311, 0.658328, 0.64123, 0.670916, 0.633887, 0.663268, 0.643192, 0.673071, 0.64784, 0.678095},
    {0.136091, 0.132837, 0.079212, 0.281152, 0.279988, 0.285856, 0.313369, 0.448522, 0.450624, 0.458866, 0.468451, 0.479091, 0.484671, 0.317055, 0.332868, 0.245394, 0.254455, 0.34399, 0.361603, 0.340763, 0.357959, 0.352636, 0.370563, 0.248706, 0.260209, 0.389351, 0.410979, 0.389361, 0.410975, 0.387093, 0.408638, 0.390638, 0.412624, 0.394576, 0.417057, 0.39458, 0.417114, 0.23291, 0.240793, 0.334037, 0.350915, 0.33081, 0.347271, 0.342683, 0.359875, 0.252885, 0.2645, 0.388156, 0.409691, 0.387324, 0.408759, 0.390288, 0.412081, 0.393832, 0.416068, 0.39777, 0.420501, 0.397774, 0.420558, 0.258679, 0.269905, 0.267582, 0.279138, 0.288731, 0.301602, 0.475078, 0.5, 0.634025, 0.672586, 0.631126, 0.66935, 0.628441, 0.666468, 0.629978, 0.668208, 0.634711, 0.673431, 0.635543, 0.674315, 0.530492, 0.562448, 0.547457, 0.580486, 0.690558, 0.730845, 0.60187, 0.639152, 0.61045, 0.648272, 0.604646, 0.642051, 0.606202, 0.643831, 0.610588, 0.648706, 0.611102, 0.649267, 0.537795, 0.570039, 0.675822, 0.714882, 0.590411, 0.626843, 0.598992, 0.635962, 0.607417, 0.644915, 0.605679, 0.643144, 0.610064, 0.648018, 0.610579, 0.64858, 0.661829, 0.699862, 0.579968, 0.615766, 0.588155, 0.624457, 0.596581, 0.63341, 0.608551, 0.646243, 0.610163, 0.648136, 0.610678, 0.648697, 0.670426, 0.711833, 0.667832, 0.708881, 0.679873, 0.721801, 0.695858, 0.739024, 0.711906, 0.756329, 0.713146, 0.75762, 0.592457, 0.628928, 0.602673, 0.639743, 0.61644, 0.654439, 0.630581, 0.669539, 0.643594, 0.683609, 0.590375, 0.626464, 0.604143, 0.64116, 0.618284, 0.656261, 0.631297, 0.670331, 0.589944, 0.625898, 0.604086, 0.640998, 0.616577, 0.654499, 0.608799, 0.646178, 0.618519, 0.656665, 0.623303, 0.661926},
    {0.164863, 0.162238, 0.118258, 0.31321, 0.312193, 0.317813, 0.323381, 0.345381, 0.465235, 0.472986, 0.482016, 0.491635, 0.502279, 0.33811, 0.362085, 0.275646, 0.285668, 0.364887, 0.390391, 0.361743, 0.386933, 0.373361, 0.399164, 0.371041, 0.396697, 0.279891, 0.290032, 0.406272, 0.432971, 0.404034, 0.430669, 0.407487, 0.434473, 0.410939, 0.438294, 0.414775, 0.442559, 0.278194, 0.288084, 0.355162, 0.380071, 0.352019, 0.376613, 0.363637, 0.388844, 0.3721, 0.397704, 0.282027, 0.291958, 0.404187, 0.43062, 0.407064, 0.433778, 0.410516, 0.437582, 0.413968, 0.441404, 0.417804, 0.445668, 0.295891, 0.308225, 0.306935, 0.319839, 0.326036, 0.340191, 0.350192, 0.365975, 0.5, 0.524926, 0.61344, 0.648387, 0.611855, 0.646707, 0.613067, 0.648114, 0.614596, 0.649885, 0.619056, 0.65488, 0.545094, 0.571163, 0.561573, 0.588483, 0.574682, 0.602212, 0.700732, 0.741967, 0.627081, 0.656553, 0.621614, 0.650815, 0.622699, 0.652079, 0.624332, 0.653941, 0.628641, 0.658679, 0.552138, 0.578395, 0.565248, 0.592124, 0.687085, 0.727086, 0.615899, 0.644668, 0.624205, 0.653462, 0.622094, 0.651322, 0.623727, 0.653185, 0.628036, 0.657922, 0.556983, 0.583403, 0.674301, 0.713273, 0.605503, 0.633739, 0.613809, 0.642532, 0.625471, 0.654925, 0.623908, 0.653384, 0.628217, 0.658122, 0.664478, 0.702668, 0.595551, 0.623263, 0.603856, 0.632056, 0.615518, 0.644449, 0.62724, 0.656919, 0.628841, 0.658774, 0.66778, 0.705973, 0.678992, 0.71811, 0.693821, 0.734223, 0.708708, 0.750412, 0.723653, 0.76669, 0.613091, 0.641049, 0.626502, 0.655238, 0.639971, 0.669505, 0.653801, 0.684172, 0.612485, 0.640522, 0.625956, 0.654789, 0.639787, 0.669456, 0.627915, 0.656944, 0.641749, 0.671612, 0.646396, 0.676629},
    {0.122924, 0.120094, 0.064955, 0.276996, 0.275833, 0.281701, 0.287512, 0.305569, 0.437898, 0.44614, 0.455725, 0.465924, 0.477185, 0.307576, 0.322683, 0.233037, 0.241292, 0.335066, 0.3525, 0.331839, 0.348855, 0.343712, 0.36146, 0.341341, 0.358898, 0.237338, 0.248059, 0.377511, 0.39826, 0.375243, 0.395923, 0.378787, 0.399909, 0.382332, 0.403907, 0.38627, 0.408357, 0.235611, 0.243761, 0.325154, 0.341862, 0.321928, 0.338218, 0.3338, 0.350822, 0.342444, 0.359928, 0.239473, 0.249994, 0.375397, 0.395809, 0.378361, 0.399131, 0.381906, 0.403117, 0.38545, 0.407115, 0.389389, 0.411565, 0.254345, 0.265846, 0.266198, 0.278274, 0.286581, 0.299915, 0.312422, 0.327414, 0.475074, 0.5, 0.594931, 0.630563, 0.593065, 0.62857, 0.594243, 0.629918, 0.59577, 0.631658, 0.600493, 0.636885, 0.517356, 0.548795, 0.534322, 0.566833, 0.547839, 0.581145, 0.68968, 0.730308, 0.601588, 0.639163, 0.595783, 0.632942, 0.596818, 0.634153, 0.598437, 0.636009, 0.602886, 0.640963, 0.524659, 0.556386, 0.538177, 0.570698, 0.674944, 0.714345, 0.590129, 0.626854, 0.598555, 0.635806, 0.596295, 0.633466, 0.597914, 0.635321, 0.602363, 0.640276, 0.529594, 0.561548, 0.661015, 0.699388, 0.579356, 0.615412, 0.587781, 0.624365, 0.599752, 0.637198, 0.598076, 0.635502, 0.602525, 0.640456, 0.650337, 0.687931, 0.569058, 0.604463, 0.577483, 0.613415, 0.589454, 0.626248, 0.601487, 0.639157, 0.603162, 0.641129, 0.653678, 0.693701, 0.66572, 0.706621, 0.681705, 0.723844, 0.697753, 0.741141, 0.713864, 0.758524, 0.587922, 0.624069, 0.60169, 0.638765, 0.61552, 0.653536, 0.629725, 0.668716, 0.586969, 0.622933, 0.600801, 0.637704, 0.615005, 0.652884, 0.602741, 0.639871, 0.616947, 0.655051, 0.621731, 0.660305},
    {0.169035, 0.166282, 0.122244, 0.312989, 0.315387, 0.321528, 0.327097, 0.333297, 0.350949, 0.472219, 0.481249, 0.490867, 0.501088, 0.341744, 0.365944, 0.278369, 0.288692, 0.367395, 0.393076, 0.367357, 0.392906, 0.379464, 0.405658, 0.37676, 0.40278, 0.377147, 0.403205, 0.281765, 0.292097, 0.406805, 0.433504, 0.410257, 0.437308, 0.41371, 0.44113, 0.417546, 0.445388, 0.280535, 0.290676, 0.35685, 0.381869, 0.356813, 0.381698, 0.368919, 0.394451, 0.377382, 0.403312, 0.375062, 0.400853, 0.283479, 0.29355, 0.407189, 0.433801, 0.410641, 0.437605, 0.414094, 0.441427, 0.417546, 0.445273, 0.298418, 0.311, 0.309502, 0.322655, 0.328643, 0.343048, 0.35284, 0.368874, 0.38656, 0.405069, 0.5, 0.524936, 0.581131, 0.613547, 0.583332, 0.616033, 0.584533, 0.617445, 0.58605, 0.619227, 0.539592, 0.565598, 0.556454, 0.583312, 0.569564, 0.59704, 0.582734, 0.610837, 0.713113, 0.755385, 0.623934, 0.653185, 0.625019, 0.654449, 0.626164, 0.65579, 0.627856, 0.657737, 0.549489, 0.575749, 0.562599, 0.589477, 0.575768, 0.603274, 0.699466, 0.740504, 0.626525, 0.655832, 0.624798, 0.654086, 0.625942, 0.655427, 0.627634, 0.657374, 0.554823, 0.581259, 0.567992, 0.595056, 0.686209, 0.726172, 0.616513, 0.645296, 0.628175, 0.657689, 0.626123, 0.655626, 0.627815, 0.657573, 0.562509, 0.589271, 0.673484, 0.712403, 0.606665, 0.63493, 0.618327, 0.647322, 0.630048, 0.659792, 0.628544, 0.658335, 0.663721, 0.701868, 0.599496, 0.627416, 0.611158, 0.639808, 0.622879, 0.652278, 0.634659, 0.664832, 0.667102, 0.705167, 0.681933, 0.721279, 0.69682, 0.737468, 0.711765, 0.753739, 0.614431, 0.642431, 0.627903, 0.656697, 0.641431, 0.671048, 0.629373, 0.658331, 0.642904, 0.672682, 0.644935, 0.674915},
    {0.127422, 0.124451, 0.069309, 0.276739, 0.279312, 0.285749, 0.29156, 0.29804, 0.311512, 0.445409, 0.454994, 0.465193, 0.476013, 0.311431, 0.326862, 0.236082, 0.244655, 0.337619, 0.355274, 0.337705, 0.355218, 0.350098, 0.368392, 0.347334, 0.365402, 0.347731, 0.365831, 0.239368, 0.250267, 0.378204, 0.398997, 0.381748, 0.402983, 0.385293, 0.406981, 0.389231, 0.411425, 0.238248, 0.246667, 0.326866, 0.343708, 0.326951, 0.343653, 0.339345, 0.356827, 0.347989, 0.365933, 0.345618, 0.36338, 0.241053, 0.251704, 0.378616, 0.399292, 0.38216, 0.403279, 0.385705, 0.407277, 0.38925, 0.411292, 0.257172, 0.268951, 0.269066, 0.281426, 0.289489, 0.303108, 0.315371, 0.33065, 0.351613, 0.369437, 0.475064, 0.5, 0.560135, 0.593109, 0.562391, 0.59563, 0.563559, 0.596978, 0.565076, 0.598723, 0.511226, 0.542235, 0.528609, 0.560702, 0.542127, 0.575014, 0.555707, 0.589397, 0.703142, 0.744814, 0.598237, 0.635491, 0.599272, 0.636702, 0.60037, 0.637988, 0.602052, 0.639923, 0.521595, 0.553008, 0.535113, 0.56732, 0.548693, 0.581703, 0.688406, 0.728859, 0.601015, 0.638362, 0.599167, 0.636449, 0.600265, 0.637736, 0.601947, 0.639671, 0.527069, 0.558739, 0.54065, 0.573122, 0.673957, 0.713334, 0.590653, 0.627348, 0.602623, 0.640182, 0.600427, 0.637916, 0.602109, 0.639851, 0.535049, 0.567189, 0.660108, 0.698441, 0.580483, 0.61654, 0.592454, 0.629373, 0.604487, 0.642281, 0.602874, 0.640665, 0.649495, 0.687055, 0.573151, 0.608816, 0.585121, 0.621649, 0.597155, 0.634557, 0.609251, 0.647545, 0.652883, 0.69275, 0.668869, 0.709973, 0.684917, 0.72727, 0.701028, 0.744644, 0.589349, 0.625545, 0.60318, 0.640316, 0.617073, 0.655167, 0.604599, 0.641913, 0.618494, 0.656764, 0.620506, 0.659006},
    {0.166462, 0.166535, 0.122495, 0.316869, 0.314076, 0.323111, 0.329201, 0.335401, 0.336858, 0.355866, 0.476988, 0.486607, 0.496827, 0.338844, 0.362729, 0.27411, 0.283964, 0.367549, 0.393076, 0.363679, 0.388971, 0.378402, 0.40449, 0.376187, 0.402133, 0.376574, 0.402557, 0.375837, 0.401678, 0.278979, 0.288994, 0.398243, 0.424467, 0.401696, 0.428289, 0.405148, 0.432135, 0.279731, 0.289843, 0.359848, 0.385025, 0.355979, 0.38092, 0.370702, 0.396439, 0.379654, 0.405821, 0.377333, 0.403363, 0.374191, 0.399912, 0.283715, 0.29383, 0.407462, 0.434129, 0.410914, 0.437951, 0.414367, 0.441797, 0.301151, 0.31401, 0.308568, 0.321775, 0.330652, 0.345374, 0.355176, 0.371559, 0.388145, 0.406935, 0.418869, 0.439865, 0.5, 0.524956, 0.55196, 0.582085, 0.554387, 0.584836, 0.555576, 0.586259, 0.540164, 0.566169, 0.557026, 0.583882, 0.570136, 0.597611, 0.583305, 0.611408, 0.594809, 0.623398, 0.711424, 0.753555, 0.628459, 0.657982, 0.629603, 0.659323, 0.630806, 0.660748, 0.541763, 0.567901, 0.555257, 0.582023, 0.568426, 0.59582, 0.57993, 0.60781, 0.709676, 0.751627, 0.624707, 0.653995, 0.625852, 0.655336, 0.627055, 0.656762, 0.549566, 0.575937, 0.562735, 0.589734, 0.57375, 0.601203, 0.696419, 0.737295, 0.628084, 0.657598, 0.626416, 0.655929, 0.62762, 0.657354, 0.557636, 0.584342, 0.566034, 0.593026, 0.683694, 0.723527, 0.61862, 0.647625, 0.630341, 0.660095, 0.628349, 0.658116, 0.560612, 0.587309, 0.673932, 0.712992, 0.611451, 0.640111, 0.623172, 0.652581, 0.634952, 0.665134, 0.660524, 0.698356, 0.600513, 0.628469, 0.612234, 0.640939, 0.624014, 0.653493, 0.668084, 0.706186, 0.682974, 0.722375, 0.697919, 0.738645, 0.630835, 0.659748, 0.644366, 0.674099, 0.645908, 0.67581},
    {0.124646, 0.124719, 0.069579, 0.28096, 0.27789, 0.287493, 0.293874, 0.300353, 0.301812, 0.316719, 0.450457, 0.460655, 0.471475, 0.308458, 0.323499, 0.231605, 0.23973, 0.337913, 0.35543, 0.333808, 0.350981, 0.348993, 0.367174, 0.34675, 0.364753, 0.347147, 0.365182, 0.346377, 0.364204, 0.236409, 0.247008, 0.369454, 0.389662, 0.372999, 0.39366, 0.376544, 0.397675, 0.237434, 0.245847, 0.330079, 0.347182, 0.325974, 0.342734, 0.341159, 0.358927, 0.350323, 0.368603, 0.347953, 0.366049, 0.344726, 0.362412, 0.241293, 0.251988, 0.3789, 0.399643, 0.382445, 0.403642, 0.385989, 0.407656, 0.260222, 0.272302, 0.267992, 0.280433, 0.291629, 0.305599, 0.31787, 0.333532, 0.353293, 0.37143, 0.386453, 0.406891, 0.475044, 0.5, 0.528659, 0.559228, 0.531165, 0.562034, 0.532323, 0.563387, 0.51184, 0.54287, 0.529223, 0.561343, 0.542741, 0.575656, 0.556322, 0.590039, 0.568463, 0.603057, 0.70128, 0.74282, 0.603049, 0.640686, 0.604147, 0.641972, 0.605308, 0.643338, 0.513193, 0.544129, 0.527128, 0.55887, 0.540709, 0.573253, 0.55285, 0.586271, 0.699376, 0.740725, 0.599064, 0.636364, 0.600162, 0.63765, 0.601323, 0.639016, 0.521321, 0.552614, 0.534902, 0.566997, 0.546521, 0.579446, 0.684927, 0.725208, 0.602527, 0.640102, 0.600742, 0.638265, 0.601903, 0.639631, 0.529713, 0.561493, 0.53856, 0.570929, 0.671078, 0.710315, 0.592769, 0.629722, 0.604802, 0.64263, 0.602668, 0.640445, 0.533024, 0.565067, 0.660466, 0.698929, 0.585436, 0.621998, 0.59747, 0.634906, 0.609566, 0.647894, 0.645987, 0.683226, 0.574237, 0.609948, 0.586271, 0.622856, 0.598367, 0.635844, 0.653876, 0.693758, 0.669926, 0.711055, 0.686037, 0.72843, 0.606569, 0.644142, 0.620465, 0.658993, 0.621955, 0.660665},
    {0.162404, 0.162478, 0.118496, 0.313235, 0.314068, 0.317912, 0.326896, 0.333618, 0.335075, 0.337666, 0.359625, 0.483388, 0.493608, 0.335433, 0.359119, 0.269647, 0.279146, 0.364137, 0.389473, 0.36332, 0.388583, 0.374212, 0.400167, 0.374613, 0.400577, 0.375489, 0.401522, 0.374751, 0.400643, 0.363015, 0.388129, 0.277528, 0.287448, 0.398225, 0.424623, 0.401677, 0.428469, 0.275308, 0.285067, 0.356437, 0.381422, 0.35562, 0.380532, 0.366511, 0.392117, 0.37808, 0.404265, 0.376248, 0.402328, 0.373105, 0.398877, 0.370486, 0.395994, 0.282264, 0.292284, 0.407444, 0.434285, 0.410896, 0.438131, 0.296971, 0.309505, 0.307752, 0.320924, 0.326169, 0.340631, 0.353636, 0.370022, 0.386933, 0.405757, 0.416668, 0.437609, 0.44804, 0.471341, 0.5, 0.524992, 0.528734, 0.557104, 0.531386, 0.560126, 0.54016, 0.566165, 0.55319, 0.579944, 0.566684, 0.594067, 0.579853, 0.607863, 0.591357, 0.619853, 0.591483, 0.619853, 0.712876, 0.755181, 0.628779, 0.658478, 0.629983, 0.659903, 0.54176, 0.567891, 0.555253, 0.582013, 0.568422, 0.59581, 0.579926, 0.6078, 0.591604, 0.619968, 0.709676, 0.751664, 0.625848, 0.655333, 0.627051, 0.656758, 0.541265, 0.567509, 0.554818, 0.581699, 0.565833, 0.593168, 0.577511, 0.605336, 0.708317, 0.750285, 0.622882, 0.652302, 0.624086, 0.653727, 0.551804, 0.578439, 0.560202, 0.587123, 0.57188, 0.599292, 0.695592, 0.736516, 0.626808, 0.656468, 0.625199, 0.654883, 0.555163, 0.581799, 0.566842, 0.593968, 0.68583, 0.725981, 0.620022, 0.649347, 0.631802, 0.661901, 0.55765, 0.584123, 0.672424, 0.711345, 0.609084, 0.637706, 0.620864, 0.650259, 0.660862, 0.698718, 0.598262, 0.626182, 0.610042, 0.638736, 0.684457, 0.724001, 0.699407, 0.740271, 0.645085, 0.674965},
    {0.120239, 0.120312, 0.065196, 0.276982, 0.277864, 0.281825, 0.291372, 0.298421, 0.299879, 0.302519, 0.320626, 0.457103, 0.467923, 0.304806, 0.319575, 0.226774, 0.234566, 0.334261, 0.351505, 0.333422, 0.350575, 0.344417, 0.362374, 0.344965, 0.362973, 0.345883, 0.363971, 0.345113, 0.362994, 0.333123, 0.350032, 0.234783, 0.24529, 0.369288, 0.389669, 0.372832, 0.393684, 0.232643, 0.240725, 0.326426, 0.343258, 0.325588, 0.342327, 0.336582, 0.354127, 0.348538, 0.366822, 0.346689, 0.364838, 0.343463, 0.361201, 0.340771, 0.358151, 0.239667, 0.25027, 0.378733, 0.399651, 0.382278, 0.403666, 0.255681, 0.267442, 0.267138, 0.279555, 0.286651, 0.300377, 0.316104, 0.331792, 0.351886, 0.370082, 0.383967, 0.40437, 0.417915, 0.440772, 0.475008, 0.5, 0.503392, 0.532102, 0.506148, 0.535197, 0.51181, 0.542842, 0.525002, 0.556922, 0.538938, 0.571669, 0.552518, 0.586053, 0.564659, 0.599071, 0.564914, 0.599194, 0.702826, 0.744538, 0.603222, 0.641008, 0.604383, 0.642373, 0.513162, 0.544101, 0.527097, 0.558848, 0.540678, 0.573232, 0.552819, 0.58625, 0.565044, 0.599317, 0.69934, 0.740733, 0.600131, 0.637619, 0.601292, 0.638985, 0.512274, 0.543071, 0.526272, 0.557884, 0.537892, 0.570332, 0.550116, 0.5834, 0.697723, 0.739076, 0.596831, 0.634164, 0.597992, 0.63553, 0.523319, 0.554704, 0.532167, 0.56414, 0.544391, 0.577207, 0.683874, 0.724192, 0.600898, 0.638536, 0.599176, 0.636778, 0.527042, 0.558707, 0.539267, 0.571774, 0.673262, 0.712806, 0.593977, 0.63124, 0.606074, 0.644228, 0.529864, 0.561587, 0.658784, 0.697102, 0.582778, 0.61919, 0.594875, 0.632178, 0.6463, 0.683559, 0.571791, 0.607392, 0.583888, 0.62038, 0.671493, 0.712769, 0.687607, 0.730144, 0.621027, 0.659698},
    {0.158346, 0.15842, 0.114496, 0.309601, 0.310435, 0.317905, 0.321698, 0.331314, 0.333292, 0.335883, 0.341565, 0.364065, 0.49039, 0.331962, 0.355447, 0.265126, 0.274266, 0.360666, 0.385807, 0.35985, 0.384917, 0.373794, 0.399716, 0.370363, 0.396191, 0.373856, 0.399903, 0.373607, 0.399545, 0.361871, 0.387031, 0.362694, 0.387955, 0.276077, 0.285927, 0.398206, 0.424803, 0.270827, 0.280228, 0.352966, 0.377756, 0.352149, 0.376866, 0.366094, 0.391665, 0.37383, 0.399879, 0.374616, 0.400709, 0.371961, 0.397779, 0.369342, 0.394896, 0.370165, 0.395821, 0.280813, 0.290763, 0.407366, 0.434402, 0.292761, 0.304967, 0.303583, 0.316428, 0.325365, 0.33979, 0.349165, 0.365289, 0.385404, 0.40423, 0.415467, 0.436441, 0.445613, 0.468835, 0.471266, 0.496608, 0.5, 0.525053, 0.528298, 0.556841, 0.539337, 0.56532, 0.553187, 0.579941, 0.562848, 0.590129, 0.576401, 0.604318, 0.587905, 0.616308, 0.58803, 0.616308, 0.591501, 0.62002, 0.714327, 0.756832, 0.629159, 0.659058, 0.541756, 0.567887, 0.551417, 0.578075, 0.56497, 0.592265, 0.576474, 0.604255, 0.588152, 0.616424, 0.588569, 0.616875, 0.711127, 0.753314, 0.626228, 0.655913, 0.541261, 0.567499, 0.554814, 0.581689, 0.565829, 0.593158, 0.577507, 0.605326, 0.589477, 0.617946, 0.708317, 0.750346, 0.624082, 0.653724, 0.543502, 0.570011, 0.552284, 0.579088, 0.563962, 0.591257, 0.575932, 0.603877, 0.70749, 0.74953, 0.621665, 0.651256, 0.549331, 0.575896, 0.56101, 0.588065, 0.57298, 0.600685, 0.697728, 0.738995, 0.628268, 0.658274, 0.552202, 0.578614, 0.564173, 0.591233, 0.684322, 0.724359, 0.617714, 0.647026, 0.555399, 0.581817, 0.672763, 0.711732, 0.606892, 0.635502, 0.67659, 0.715887, 0.610449, 0.639273, 0.700906, 0.741922},
    {0.115819, 0.115893, 0.060805, 0.272991, 0.273874, 0.281788, 0.285692, 0.295907, 0.297935, 0.300575, 0.306586, 0.325213, 0.464347, 0.301076, 0.315575, 0.221867, 0.229327, 0.330531, 0.347505, 0.329693, 0.346575, 0.343954, 0.361893, 0.340311, 0.358098, 0.344021, 0.362115, 0.343772, 0.361707, 0.331781, 0.348746, 0.332626, 0.349711, 0.233132, 0.243572, 0.369102, 0.389675, 0.227777, 0.235528, 0.322696, 0.339258, 0.321858, 0.338327, 0.336119, 0.353645, 0.343884, 0.361947, 0.344826, 0.362983, 0.342121, 0.359915, 0.33943, 0.356865, 0.340275, 0.35783, 0.238016, 0.248552, 0.378489, 0.399594, 0.251094, 0.262539, 0.262591, 0.274694, 0.28579, 0.299497, 0.31112, 0.326569, 0.350115, 0.368342, 0.382555, 0.403022, 0.415164, 0.437966, 0.442896, 0.467898, 0.474947, 0.5, 0.502805, 0.531669, 0.510867, 0.541868, 0.524953, 0.556882, 0.534698, 0.567236, 0.548696, 0.582054, 0.560837, 0.595072, 0.561092, 0.595196, 0.564758, 0.599186, 0.704347, 0.746256, 0.60344, 0.64139, 0.513113, 0.544061, 0.522858, 0.554415, 0.536856, 0.569233, 0.548997, 0.582251, 0.561222, 0.595319, 0.561667, 0.595798, 0.700861, 0.742451, 0.600349, 0.638002, 0.512224, 0.543031, 0.526223, 0.557849, 0.537842, 0.570298, 0.550067, 0.583366, 0.562482, 0.596789, 0.697662, 0.739084, 0.597943, 0.635481, 0.514253, 0.545149, 0.523518, 0.555014, 0.535743, 0.568081, 0.548158, 0.581504, 0.696645, 0.73806, 0.595247, 0.632659, 0.520631, 0.551906, 0.532856, 0.564973, 0.545271, 0.578396, 0.686033, 0.726682, 0.602151, 0.640115, 0.523864, 0.555215, 0.53628, 0.568638, 0.671556, 0.710979, 0.591364, 0.628494, 0.527398, 0.559025, 0.659074, 0.697436, 0.580377, 0.616695, 0.663229, 0.701917, 0.584133, 0.620749, 0.689161, 0.73185},
    {0.154289, 0.154362, 0.110496, 0.305968, 0.306801, 0.314271, 0.321691, 0.326115, 0.330988, 0.3341, 0.339782, 0.346116, 0.369201, 0.328432, 0.351712, 0.260547, 0.269322, 0.357136, 0.382078, 0.35632, 0.381187, 0.370264, 0.395987, 0.369887, 0.395677, 0.369547, 0.395454, 0.37202, 0.397991, 0.360726, 0.385933, 0.36155, 0.386857, 0.362373, 0.3878, 0.274626, 0.284439, 0.266289, 0.275326, 0.349436, 0.374027, 0.348619, 0.373137, 0.362564, 0.387936, 0.373353, 0.399365, 0.370306, 0.39626, 0.370269, 0.396097, 0.368138, 0.393735, 0.368962, 0.394659, 0.369785, 0.395602, 0.279361, 0.289275, 0.288523, 0.300399, 0.299386, 0.311901, 0.321207, 0.335304, 0.348372, 0.364457, 0.380944, 0.399507, 0.41395, 0.434924, 0.444424, 0.467677, 0.468614, 0.493852, 0.471702, 0.497195, 0.5, 0.525147, 0.538513, 0.564475, 0.552363, 0.579095, 0.562844, 0.590125, 0.572565, 0.60038, 0.584452, 0.612764, 0.584578, 0.612764, 0.588049, 0.616475, 0.591579, 0.620264, 0.715778, 0.758516, 0.540932, 0.567042, 0.551414, 0.578071, 0.561134, 0.588327, 0.573022, 0.60071, 0.5847, 0.612879, 0.585117, 0.61333, 0.588647, 0.617119, 0.712578, 0.754998, 0.541257, 0.567495, 0.550978, 0.577751, 0.562377, 0.589613, 0.574055, 0.601782, 0.586025, 0.614401, 0.586501, 0.61493, 0.709768, 0.752029, 0.543499, 0.570001, 0.552281, 0.579078, 0.563959, 0.591247, 0.575929, 0.603867, 0.587958, 0.616564, 0.707489, 0.749624, 0.54103, 0.567468, 0.553092, 0.58003, 0.565062, 0.59265, 0.577091, 0.605347, 0.709626, 0.752042, 0.546369, 0.572711, 0.558341, 0.58533, 0.57037, 0.598028, 0.69622, 0.737406, 0.54995, 0.576308, 0.561981, 0.589005, 0.684661, 0.724779, 0.565535, 0.592776, 0.688493, 0.728934, 0.692395, 0.733165},
    {0.111384, 0.111457, 0.056403, 0.268984, 0.269867, 0.277781, 0.285638, 0.29021, 0.295404, 0.298614, 0.304625, 0.311326, 0.330484, 0.297262, 0.311495, 0.216878, 0.224011, 0.326717, 0.343426, 0.325879, 0.342495, 0.34014, 0.357813, 0.339764, 0.357537, 0.339283, 0.357161, 0.341935, 0.359913, 0.330415, 0.347443, 0.33126, 0.348408, 0.332105, 0.349391, 0.231448, 0.241854, 0.222829, 0.230254, 0.318883, 0.335179, 0.318044, 0.334248, 0.332305, 0.349566, 0.343337, 0.361386, 0.340089, 0.358028, 0.340174, 0.35798, 0.338005, 0.355499, 0.33885, 0.356464, 0.339695, 0.357447, 0.236332, 0.246834, 0.246455, 0.25759, 0.257993, 0.269786, 0.281233, 0.294631, 0.310249, 0.325685, 0.34512, 0.363115, 0.380773, 0.401277, 0.413741, 0.436613, 0.439874, 0.464803, 0.443159, 0.468331, 0.474853, 0.5, 0.509899, 0.540878, 0.523985, 0.555892, 0.534624, 0.567179, 0.544432, 0.577605, 0.556991, 0.591057, 0.557246, 0.591181, 0.560912, 0.595171, 0.564641, 0.599243, 0.705835, 0.747974, 0.512145, 0.543071, 0.522784, 0.554358, 0.532592, 0.564783, 0.54515, 0.578236, 0.557375, 0.591304, 0.55782, 0.591783, 0.561549, 0.595855, 0.702349, 0.744169, 0.51215, 0.542974, 0.521958, 0.5534, 0.533996, 0.566283, 0.54622, 0.579351, 0.558635, 0.592774, 0.559143, 0.593334, 0.69915, 0.740802, 0.514179, 0.545093, 0.523444, 0.554963, 0.535669, 0.568031, 0.548084, 0.581454, 0.560562, 0.594958, 0.696551, 0.738068, 0.51154, 0.542334, 0.524183, 0.555831, 0.536598, 0.569254, 0.549076, 0.582758, 0.698771, 0.74055, 0.517428, 0.548397, 0.529844, 0.56182, 0.542322, 0.575324, 0.684294, 0.724855, 0.521374, 0.552636, 0.533854, 0.56614, 0.671812, 0.711312, 0.537607, 0.570194, 0.675971, 0.715794, 0.6802, 0.720357},
    {0.211605, 0.197517, 0.183301, 0.17817, 0.386921, 0.487729, 0.496919, 0.506998, 0.520631, 0.523242, 0.527093, 0.532458, 0.538384, 0.379922, 0.405139, 0.377976, 0.40275, 0.314852, 0.327327, 0.316251, 0.328764, 0.445277, 0.472815, 0.447542, 0.475461, 0.452554, 0.480936, 0.460855, 0.489958, 0.455169, 0.483883, 0.455173, 0.483914, 0.455996, 0.484857, 0.45682, 0.485824, 0.366624, 0.390789, 0.306245, 0.317212, 0.307564, 0.318566, 0.437934, 0.464976, 0.450441, 0.47811, 0.45309, 0.48117, 0.460571, 0.489304, 0.46, 0.488689, 0.460003, 0.48872, 0.460827, 0.489663, 0.46165, 0.490631, 0.296996, 0.306399, 0.298315, 0.307753, 0.429891, 0.456375, 0.442398, 0.469508, 0.454906, 0.482644, 0.460408, 0.488774, 0.459836, 0.48816, 0.45984, 0.48819, 0.460663, 0.489133, 0.461487, 0.490101, 0.5, 0.524921, 0.689698, 0.72911, 0.690931, 0.730776, 0.6918, 0.732049, 0.695465, 0.736376, 0.692691, 0.733285, 0.693507, 0.73414, 0.697676, 0.738686, 0.701874, 0.743284, 0.701062, 0.741168, 0.701751, 0.742239, 0.705384, 0.74652, 0.719569, 0.76223, 0.716968, 0.759318, 0.717986, 0.760381, 0.722386, 0.765166, 0.726844, 0.770032, 0.647017, 0.675846, 0.654123, 0.683342, 0.663418, 0.693097, 0.671679, 0.70185, 0.683968, 0.714798, 0.684386, 0.715267, 0.687916, 0.719081, 0.638792, 0.667482, 0.648088, 0.677237, 0.655964, 0.685578, 0.667765, 0.698005, 0.68034, 0.711265, 0.680816, 0.711818, 0.637768, 0.666714, 0.643257, 0.672507, 0.652441, 0.682149, 0.665016, 0.695409, 0.677649, 0.708753, 0.641848, 0.671329, 0.642207, 0.671715, 0.654782, 0.684975, 0.667415, 0.698319, 0.62765, 0.656331, 0.640227, 0.669591, 0.65286, 0.682935, 0.640668, 0.670036, 0.653305, 0.683379, 0.656871, 0.687169},
    {0.172618, 0.15753, 0.142301, 0.129745, 0.351219, 0.461765, 0.471826, 0.482824, 0.49752, 0.500308, 0.504401, 0.510075, 0.516329, 0.351609, 0.368784, 0.349699, 0.366161, 0.275959, 0.286542, 0.277368, 0.290437, 0.418883, 0.440919, 0.421136, 0.443864, 0.426197, 0.449697, 0.434625, 0.459214, 0.428823, 0.452918, 0.428826, 0.452946, 0.429672, 0.453921, 0.430517, 0.454911, 0.338048, 0.353773, 0.266781, 0.275857, 0.268109, 0.279669, 0.411355, 0.432809, 0.424218, 0.44646, 0.426865, 0.449835, 0.434451, 0.458424, 0.433881, 0.457789, 0.433884, 0.457816, 0.434729, 0.458791, 0.435575, 0.459781, 0.256931, 0.264445, 0.258259, 0.268257, 0.403111, 0.423901, 0.415974, 0.437552, 0.428837, 0.451205, 0.434402, 0.457765, 0.433831, 0.45713, 0.433835, 0.457158, 0.43468, 0.458132, 0.435525, 0.459122, 0.475079, 0.5, 0.678053, 0.718436, 0.678852, 0.719606, 0.679255, 0.720346, 0.682706, 0.724398, 0.679662, 0.721003, 0.680514, 0.721882, 0.68501, 0.726743, 0.689537, 0.73165, 0.691646, 0.733593, 0.691846, 0.734116, 0.695256, 0.738121, 0.710093, 0.75446, 0.707268, 0.751257, 0.708341, 0.752354, 0.713097, 0.757467, 0.717916, 0.762658, 0.623859, 0.661351, 0.631083, 0.669027, 0.640559, 0.679043, 0.648935, 0.687953, 0.661821, 0.701868, 0.662266, 0.702356, 0.666001, 0.706435, 0.614935, 0.651972, 0.624411, 0.661989, 0.632394, 0.670469, 0.644759, 0.683815, 0.657825, 0.697893, 0.658333, 0.698461, 0.613486, 0.650592, 0.61902, 0.656432, 0.628619, 0.666764, 0.641684, 0.680843, 0.654813, 0.695, 0.617342, 0.655055, 0.617784, 0.655461, 0.63085, 0.669539, 0.643979, 0.683697, 0.602633, 0.639072, 0.6157, 0.65315, 0.628829, 0.667308, 0.616167, 0.653619, 0.629298, 0.667777, 0.633058, 0.67184},
    {0.205605, 0.194469, 0.180664, 0.160603, 0.324945, 0.374401, 0.481282, 0.491361, 0.50457, 0.507181, 0.516399, 0.520799, 0.526726, 0.36765, 0.39262, 0.366006, 0.390542, 0.29654, 0.308128, 0.389802, 0.415532, 0.316423, 0.329549, 0.431034, 0.458467, 0.436046, 0.463942, 0.443964, 0.472545, 0.438278, 0.46647, 0.442114, 0.470692, 0.442117, 0.470741, 0.442941, 0.471709, 0.356784, 0.380769, 0.301842, 0.313102, 0.380489, 0.405666, 0.307736, 0.319351, 0.433933, 0.461115, 0.436582, 0.464175, 0.44368, 0.471891, 0.443108, 0.471277, 0.446944, 0.475498, 0.446948, 0.475547, 0.447771, 0.476515, 0.295994, 0.305997, 0.370426, 0.394986, 0.298516, 0.308567, 0.42592, 0.452543, 0.438427, 0.465678, 0.443546, 0.471391, 0.442974, 0.470777, 0.44681, 0.474998, 0.446813, 0.475047, 0.447637, 0.476015, 0.310302, 0.321947, 0.5, 0.524921, 0.671158, 0.709669, 0.672779, 0.711749, 0.673932, 0.713328, 0.671117, 0.710196, 0.6756, 0.715174, 0.676405, 0.716034, 0.680562, 0.720591, 0.69559, 0.735404, 0.62482, 0.653225, 0.633583, 0.662425, 0.642485, 0.671771, 0.650746, 0.680524, 0.652229, 0.682217, 0.652647, 0.682681, 0.656176, 0.686494, 0.686822, 0.726151, 0.690456, 0.730431, 0.70464, 0.746134, 0.70204, 0.743222, 0.716829, 0.759302, 0.717905, 0.760441, 0.722363, 0.765307, 0.634333, 0.662795, 0.643326, 0.672233, 0.651202, 0.680574, 0.664914, 0.695081, 0.677263, 0.708106, 0.67774, 0.708659, 0.630389, 0.658925, 0.635878, 0.664719, 0.64959, 0.679225, 0.661451, 0.691729, 0.674084, 0.705073, 0.625643, 0.654278, 0.639356, 0.668785, 0.6486, 0.678504, 0.661233, 0.691848, 0.624311, 0.652879, 0.633556, 0.662599, 0.64619, 0.675943, 0.638132, 0.667545, 0.650769, 0.680889, 0.651282, 0.681411},
    {0.166365, 0.154356, 0.139556, 0.110719, 0.289068, 0.337472, 0.454967, 0.465965, 0.480232, 0.483008, 0.492782, 0.497446, 0.5037, 0.33867, 0.355462, 0.337078, 0.353163, 0.255626, 0.265324, 0.361588, 0.379383, 0.277055, 0.29075, 0.403778, 0.425788, 0.408839, 0.431621, 0.416874, 0.440708, 0.411071, 0.434407, 0.415009, 0.438828, 0.415013, 0.438869, 0.415858, 0.439859, 0.327617, 0.343049, 0.261532, 0.270954, 0.352035, 0.369176, 0.267796, 0.279989, 0.406867, 0.42839, 0.409513, 0.431765, 0.416706, 0.439925, 0.416135, 0.439284, 0.420073, 0.443705, 0.420077, 0.443745, 0.420922, 0.444735, 0.25539, 0.263569, 0.341714, 0.358114, 0.257977, 0.26861, 0.398654, 0.419514, 0.411517, 0.433167, 0.416688, 0.439298, 0.416118, 0.438657, 0.420056, 0.443078, 0.420059, 0.443118, 0.420905, 0.444108, 0.27089, 0.281564, 0.475079, 0.5, 0.657774, 0.697183, 0.658986, 0.698789, 0.659697, 0.699865, 0.656611, 0.696423, 0.661354, 0.701645, 0.662195, 0.702525, 0.666681, 0.70739, 0.685921, 0.725154, 0.600113, 0.636595, 0.609046, 0.646039, 0.618124, 0.655639, 0.626507, 0.664542, 0.628056, 0.66636, 0.628507, 0.666841, 0.632236, 0.670921, 0.675686, 0.716832, 0.679096, 0.720837, 0.693933, 0.737176, 0.691108, 0.733965, 0.707052, 0.751154, 0.708187, 0.752325, 0.713007, 0.757516, 0.610464, 0.647424, 0.619628, 0.657118, 0.627612, 0.665592, 0.64169, 0.680617, 0.654639, 0.694608, 0.655147, 0.695175, 0.605937, 0.642708, 0.611471, 0.648542, 0.625549, 0.663567, 0.637977, 0.676988, 0.651106, 0.691145, 0.600636, 0.637238, 0.614715, 0.652263, 0.624376, 0.662671, 0.637505, 0.676829, 0.599042, 0.635298, 0.608699, 0.645706, 0.621828, 0.659864, 0.613411, 0.650892, 0.626543, 0.665049, 0.627081, 0.665594},
    {0.193701, 0.190579, 0.179314, 0.147466, 0.320878, 0.326419, 0.366318, 0.479445, 0.492653, 0.495264, 0.504058, 0.513825, 0.518788, 0.359323, 0.384172, 0.357679, 0.382094, 0.298957, 0.310758, 0.381475, 0.407078, 0.393034, 0.419246, 0.304043, 0.316078, 0.424661, 0.451927, 0.432578, 0.46053, 0.426892, 0.454456, 0.430344, 0.458259, 0.43418, 0.462499, 0.434184, 0.462573, 0.347607, 0.37142, 0.287692, 0.298308, 0.371705, 0.396715, 0.383264, 0.408883, 0.308112, 0.320226, 0.423472, 0.450657, 0.43057, 0.458373, 0.429998, 0.457759, 0.43345, 0.461562, 0.437286, 0.465802, 0.43729, 0.465876, 0.292377, 0.302609, 0.361722, 0.386116, 0.373281, 0.398284, 0.298892, 0.309442, 0.425318, 0.452161, 0.430436, 0.457873, 0.429864, 0.457259, 0.433316, 0.461062, 0.437152, 0.465302, 0.437156, 0.465376, 0.309069, 0.321148, 0.328842, 0.342226, 0.5, 0.524922, 0.648733, 0.686022, 0.650968, 0.688765, 0.648113, 0.685592, 0.649653, 0.687357, 0.654125, 0.692341, 0.654918, 0.693212, 0.571967, 0.598739, 0.695243, 0.735403, 0.625179, 0.653841, 0.634081, 0.663186, 0.642342, 0.671939, 0.640719, 0.670321, 0.644969, 0.674974, 0.645446, 0.675522, 0.682155, 0.72125, 0.614819, 0.642953, 0.623721, 0.652299, 0.631982, 0.661052, 0.643644, 0.673445, 0.645186, 0.675216, 0.645663, 0.675763, 0.677143, 0.716043, 0.691328, 0.731746, 0.688728, 0.728833, 0.703517, 0.744905, 0.718364, 0.761062, 0.719497, 0.762282, 0.627245, 0.655606, 0.632734, 0.6614, 0.646144, 0.675589, 0.659915, 0.690173, 0.672323, 0.703282, 0.619882, 0.648174, 0.633293, 0.662364, 0.647064, 0.676948, 0.658984, 0.689535, 0.618247, 0.646458, 0.632021, 0.661042, 0.64394, 0.67363, 0.636597, 0.665983, 0.645902, 0.675786, 0.65055, 0.680809},
    {0.153624, 0.15037, 0.138219, 0.096522, 0.284915, 0.290698, 0.32856, 0.453158, 0.467425, 0.470201, 0.479534, 0.489879, 0.495123, 0.329848, 0.346467, 0.328257, 0.344174, 0.258348, 0.268324, 0.352767, 0.370394, 0.36458, 0.382936, 0.263646, 0.276236, 0.396973, 0.418736, 0.405009, 0.427823, 0.399206, 0.421522, 0.40275, 0.425508, 0.406688, 0.429941, 0.406692, 0.429998, 0.317987, 0.333164, 0.245872, 0.254661, 0.342814, 0.359707, 0.354627, 0.372248, 0.267825, 0.280526, 0.395778, 0.417447, 0.402971, 0.425607, 0.4024, 0.424965, 0.405945, 0.428952, 0.409883, 0.433385, 0.409887, 0.433442, 0.25113, 0.259587, 0.332575, 0.348734, 0.344388, 0.361275, 0.258007, 0.269155, 0.397788, 0.418855, 0.40296, 0.424986, 0.402389, 0.424344, 0.405933, 0.428331, 0.409871, 0.432764, 0.409875, 0.432821, 0.269224, 0.280394, 0.290331, 0.302817, 0.475078, 0.5, 0.633314, 0.671405, 0.63519, 0.673731, 0.632063, 0.670248, 0.6336, 0.671987, 0.638332, 0.67721, 0.639164, 0.678094, 0.545635, 0.578128, 0.685079, 0.72464, 0.600249, 0.636996, 0.609326, 0.646596, 0.617709, 0.655499, 0.615971, 0.653728, 0.620357, 0.658603, 0.620871, 0.659164, 0.670806, 0.709305, 0.589514, 0.625601, 0.598591, 0.635201, 0.606974, 0.644104, 0.618944, 0.656937, 0.620557, 0.658829, 0.621071, 0.659391, 0.664659, 0.705363, 0.679497, 0.721702, 0.676672, 0.718491, 0.692616, 0.735673, 0.708622, 0.752936, 0.70982, 0.754185, 0.602869, 0.639644, 0.608403, 0.645477, 0.62217, 0.660173, 0.636312, 0.675273, 0.649324, 0.689343, 0.594801, 0.631161, 0.608569, 0.645857, 0.62271, 0.660957, 0.635201, 0.674458, 0.592891, 0.628891, 0.607033, 0.643992, 0.619524, 0.657492, 0.611746, 0.649171, 0.621466, 0.659659, 0.62625, 0.66492},
    {0.181301, 0.178675, 0.175424, 0.13429, 0.316811, 0.322352, 0.327802, 0.358911, 0.480776, 0.483388, 0.492181, 0.501524, 0.511853, 0.350264, 0.374702, 0.347198, 0.371432, 0.287544, 0.2985, 0.373044, 0.398518, 0.384603, 0.410686, 0.381899, 0.407808, 0.293596, 0.304831, 0.42121, 0.448647, 0.415524, 0.442572, 0.418977, 0.446376, 0.422429, 0.450198, 0.426265, 0.454462, 0.339221, 0.362909, 0.290092, 0.300916, 0.363319, 0.388198, 0.374878, 0.400366, 0.383341, 0.409226, 0.295732, 0.306757, 0.419125, 0.446296, 0.418553, 0.445681, 0.422006, 0.449485, 0.425458, 0.453307, 0.429294, 0.457571, 0.278211, 0.287793, 0.352879, 0.377101, 0.364438, 0.38927, 0.372901, 0.39813, 0.299268, 0.31032, 0.417266, 0.444293, 0.416695, 0.443678, 0.420147, 0.447482, 0.423599, 0.451304, 0.427435, 0.455568, 0.3082, 0.320745, 0.327221, 0.341014, 0.351267, 0.366686, 0.5, 0.524926, 0.620417, 0.655963, 0.617522, 0.652749, 0.618734, 0.654156, 0.620263, 0.655926, 0.624723, 0.660921, 0.55946, 0.585876, 0.57254, 0.599573, 0.694867, 0.735376, 0.625618, 0.654543, 0.633879, 0.663296, 0.631768, 0.661156, 0.633401, 0.663019, 0.63771, 0.667756, 0.563987, 0.590542, 0.681837, 0.721283, 0.615318, 0.643715, 0.623578, 0.652468, 0.63524, 0.66486, 0.633677, 0.663319, 0.637986, 0.668057, 0.669053, 0.707455, 0.605306, 0.63318, 0.613182, 0.641521, 0.624845, 0.653913, 0.636566, 0.666383, 0.638167, 0.668238, 0.678142, 0.71749, 0.675543, 0.714578, 0.690332, 0.730649, 0.705179, 0.746797, 0.720084, 0.763035, 0.616792, 0.644913, 0.630204, 0.659102, 0.643672, 0.673369, 0.657503, 0.688037, 0.615158, 0.643197, 0.628629, 0.657464, 0.642459, 0.672131, 0.630588, 0.659619, 0.644421, 0.674287, 0.649069, 0.679304},
    {0.140457, 0.137627, 0.134232, 0.082282, 0.28076, 0.286543, 0.292228, 0.320365, 0.454657, 0.457433, 0.466766, 0.47667, 0.487595, 0.320369, 0.336282, 0.317219, 0.332879, 0.245999, 0.255169, 0.343843, 0.361291, 0.355656, 0.373833, 0.352892, 0.370842, 0.252279, 0.264077, 0.393158, 0.415108, 0.387355, 0.408807, 0.3909, 0.412793, 0.394445, 0.416791, 0.398383, 0.421241, 0.309104, 0.324104, 0.248573, 0.257638, 0.333931, 0.350653, 0.345744, 0.363195, 0.354388, 0.372301, 0.254413, 0.266012, 0.391044, 0.412657, 0.390474, 0.412015, 0.394018, 0.416001, 0.397563, 0.42, 0.401501, 0.424449, 0.235442, 0.243272, 0.323293, 0.3392, 0.335106, 0.351741, 0.34375, 0.360848, 0.258033, 0.269692, 0.389163, 0.410603, 0.388592, 0.409961, 0.392137, 0.413947, 0.395682, 0.417946, 0.39962, 0.422395, 0.267951, 0.279654, 0.288251, 0.301211, 0.313978, 0.328595, 0.475074, 0.5, 0.602444, 0.638675, 0.599275, 0.63515, 0.600453, 0.636498, 0.60198, 0.638238, 0.606703, 0.643465, 0.5325, 0.564475, 0.545988, 0.578755, 0.684201, 0.724095, 0.600464, 0.637488, 0.608847, 0.646391, 0.606587, 0.64405, 0.608206, 0.645906, 0.612655, 0.65086, 0.537112, 0.569286, 0.669991, 0.708823, 0.589792, 0.626155, 0.598175, 0.635058, 0.610145, 0.647891, 0.608469, 0.646195, 0.612918, 0.65115, 0.656078, 0.693867, 0.579431, 0.615143, 0.58742, 0.623617, 0.59939, 0.63645, 0.611424, 0.649359, 0.613099, 0.651331, 0.665196, 0.706362, 0.662364, 0.703151, 0.678308, 0.720332, 0.694314, 0.737588, 0.710384, 0.754929, 0.591787, 0.628154, 0.605555, 0.64285, 0.619385, 0.657621, 0.63359, 0.672801, 0.589877, 0.625884, 0.603708, 0.640656, 0.617913, 0.655836, 0.605648, 0.642822, 0.619855, 0.658002, 0.624639, 0.663257},
    {0.169028, 0.166275, 0.163521, 0.121113, 0.312745, 0.318286, 0.323736, 0.329766, 0.352303, 0.47155, 0.480344, 0.489687, 0.499592, 0.34174, 0.36594, 0.338899, 0.362787, 0.276496, 0.286652, 0.365373, 0.390782, 0.376932, 0.40295, 0.374228, 0.400072, 0.374615, 0.40049, 0.283571, 0.294064, 0.406742, 0.433438, 0.410195, 0.437241, 0.413647, 0.441063, 0.417483, 0.445321, 0.330103, 0.353376, 0.278662, 0.288637, 0.354829, 0.379574, 0.366388, 0.391743, 0.374851, 0.400603, 0.37253, 0.398139, 0.285285, 0.295517, 0.407126, 0.433735, 0.410579, 0.437538, 0.414031, 0.44136, 0.417483, 0.445207, 0.280592, 0.29038, 0.344434, 0.368521, 0.355993, 0.380689, 0.364456, 0.38955, 0.372919, 0.398412, 0.286887, 0.296858, 0.405191, 0.431537, 0.408643, 0.435341, 0.412095, 0.439163, 0.415548, 0.443009, 0.304535, 0.317294, 0.326068, 0.340303, 0.349032, 0.36481, 0.379583, 0.397556, 0.5, 0.524936, 0.579258, 0.611508, 0.581459, 0.613994, 0.58266, 0.615406, 0.584177, 0.617188, 0.546952, 0.573013, 0.560032, 0.58671, 0.573202, 0.6005, 0.694491, 0.735356, 0.625416, 0.654652, 0.623305, 0.652512, 0.624449, 0.653854, 0.626141, 0.6558, 0.551479, 0.577679, 0.564648, 0.591469, 0.68146, 0.721263, 0.615115, 0.643824, 0.626777, 0.656217, 0.624725, 0.654154, 0.626417, 0.656101, 0.556443, 0.58279, 0.668735, 0.707494, 0.604778, 0.632936, 0.616441, 0.645329, 0.628162, 0.657799, 0.626658, 0.656342, 0.658972, 0.696951, 0.594887, 0.622521, 0.606549, 0.634914, 0.618271, 0.647384, 0.630051, 0.659938, 0.662504, 0.700474, 0.677295, 0.716546, 0.692142, 0.732694, 0.707046, 0.748924, 0.612594, 0.640496, 0.626065, 0.654763, 0.639593, 0.669113, 0.627536, 0.656397, 0.641067, 0.670747, 0.643098, 0.67298},
    {0.127427, 0.124457, 0.121486, 0.068024, 0.276602, 0.282386, 0.28807, 0.294369, 0.313029, 0.444702, 0.454034, 0.463939, 0.474422, 0.311433, 0.326871, 0.308518, 0.323555, 0.234027, 0.242438, 0.335697, 0.35305, 0.34751, 0.365591, 0.344747, 0.362601, 0.345143, 0.363023, 0.241355, 0.252426, 0.378148, 0.398936, 0.381692, 0.402922, 0.385237, 0.406921, 0.389175, 0.411364, 0.299561, 0.313852, 0.236193, 0.244451, 0.324944, 0.341484, 0.336757, 0.354025, 0.345401, 0.363132, 0.34303, 0.360572, 0.24304, 0.253862, 0.378559, 0.399232, 0.382104, 0.403218, 0.385649, 0.407217, 0.389194, 0.411232, 0.23812, 0.246217, 0.314346, 0.33008, 0.32616, 0.342622, 0.334803, 0.351728, 0.343447, 0.360837, 0.244615, 0.255186, 0.376602, 0.396943, 0.380147, 0.400929, 0.383692, 0.404928, 0.387236, 0.408943, 0.263624, 0.275602, 0.286672, 0.300135, 0.311235, 0.326269, 0.344037, 0.361325, 0.475064, 0.5, 0.55808, 0.590884, 0.560336, 0.593405, 0.561504, 0.594754, 0.563021, 0.596498, 0.51936, 0.550819, 0.532848, 0.565099, 0.546429, 0.579477, 0.683317, 0.723558, 0.59998, 0.637278, 0.59772, 0.634937, 0.598818, 0.636223, 0.6005, 0.638158, 0.523972, 0.55563, 0.537553, 0.570007, 0.669107, 0.708286, 0.589308, 0.625945, 0.601278, 0.638779, 0.599081, 0.636513, 0.600764, 0.638448, 0.529052, 0.56092, 0.655258, 0.693393, 0.578616, 0.614567, 0.590587, 0.6274, 0.60262, 0.640309, 0.601008, 0.638692, 0.644645, 0.682002, 0.568384, 0.603683, 0.580354, 0.616516, 0.592387, 0.629425, 0.604484, 0.642413, 0.648208, 0.687969, 0.664153, 0.705151, 0.680159, 0.722406, 0.696229, 0.739739, 0.587418, 0.623483, 0.60125, 0.638254, 0.615143, 0.653105, 0.602668, 0.639851, 0.616564, 0.654702, 0.618575, 0.656944},
    {0.170505, 0.170579, 0.167825, 0.125357, 0.312784, 0.32174, 0.327711, 0.333742, 0.340369, 0.358545, 0.479298, 0.488641, 0.498545, 0.341894, 0.365952, 0.339053, 0.362799, 0.275562, 0.285546, 0.364402, 0.38962, 0.379067, 0.405076, 0.376851, 0.402719, 0.376855, 0.402726, 0.379647, 0.405726, 0.282237, 0.292543, 0.401234, 0.427621, 0.404687, 0.431443, 0.408139, 0.43529, 0.333101, 0.356545, 0.281182, 0.291425, 0.356702, 0.38157, 0.371366, 0.397026, 0.380318, 0.406407, 0.377614, 0.403531, 0.378001, 0.40396, 0.286973, 0.297379, 0.410453, 0.437283, 0.413905, 0.441105, 0.417358, 0.444952, 0.283153, 0.29321, 0.346307, 0.370516, 0.360971, 0.385972, 0.369923, 0.395354, 0.378386, 0.404217, 0.376066, 0.401763, 0.288576, 0.29872, 0.408517, 0.435086, 0.41197, 0.438908, 0.415422, 0.442754, 0.307309, 0.320338, 0.328883, 0.343389, 0.351887, 0.367937, 0.382478, 0.400725, 0.420742, 0.44192, 0.5, 0.524956, 0.55196, 0.582077, 0.554387, 0.584828, 0.555576, 0.58625, 0.541206, 0.567187, 0.55467, 0.581278, 0.567839, 0.595068, 0.581067, 0.608928, 0.706635, 0.748524, 0.625921, 0.655189, 0.627066, 0.65653, 0.628269, 0.657956, 0.548586, 0.574772, 0.561755, 0.588562, 0.574983, 0.602422, 0.693604, 0.734431, 0.629394, 0.658893, 0.627726, 0.657224, 0.628929, 0.65865, 0.554038, 0.580385, 0.567267, 0.594245, 0.680406, 0.720143, 0.619441, 0.648399, 0.631162, 0.660869, 0.62917, 0.65889, 0.561844, 0.588522, 0.667742, 0.706436, 0.609655, 0.638094, 0.621376, 0.650564, 0.633156, 0.663117, 0.658041, 0.695964, 0.602549, 0.630643, 0.61427, 0.643113, 0.62605, 0.655667, 0.661995, 0.699863, 0.676845, 0.716011, 0.69175, 0.732241, 0.629818, 0.658655, 0.643349, 0.673005, 0.644891, 0.674717},
    {0.12902, 0.129094, 0.126123, 0.072657, 0.276624, 0.286144, 0.292398, 0.298697, 0.305627, 0.31968, 0.453009, 0.462913, 0.473396, 0.311721, 0.32702, 0.308806, 0.323705, 0.233195, 0.241456, 0.334683, 0.351794, 0.349809, 0.367924, 0.347566, 0.365503, 0.34757, 0.365498, 0.350423, 0.36859, 0.239986, 0.250877, 0.372659, 0.393113, 0.376203, 0.397112, 0.379748, 0.401126, 0.302768, 0.31732, 0.239024, 0.247573, 0.326849, 0.343547, 0.341974, 0.359677, 0.351139, 0.369353, 0.348375, 0.366365, 0.348772, 0.366798, 0.24487, 0.255856, 0.382104, 0.403095, 0.385649, 0.407093, 0.389194, 0.411108, 0.240991, 0.249381, 0.316251, 0.332144, 0.331377, 0.348274, 0.340542, 0.357949, 0.349185, 0.367058, 0.346815, 0.364509, 0.246445, 0.25718, 0.380147, 0.400806, 0.383692, 0.404804, 0.387236, 0.408819, 0.266715, 0.278997, 0.289804, 0.303577, 0.314408, 0.329752, 0.347251, 0.36485, 0.388492, 0.409116, 0.475044, 0.5, 0.528667, 0.559228, 0.531173, 0.562034, 0.532331, 0.563387, 0.512961, 0.543969, 0.526867, 0.558678, 0.540448, 0.573055, 0.554092, 0.587506, 0.696509, 0.73778, 0.6005, 0.637833, 0.601598, 0.63912, 0.602759, 0.640485, 0.52064, 0.551962, 0.53422, 0.566339, 0.547864, 0.58079, 0.682299, 0.722516, 0.604064, 0.641681, 0.602279, 0.639844, 0.60344, 0.64121, 0.526259, 0.557822, 0.539903, 0.572272, 0.66793, 0.707055, 0.593784, 0.630732, 0.605818, 0.64364, 0.603684, 0.641454, 0.534366, 0.566405, 0.654146, 0.692227, 0.58368, 0.619988, 0.595713, 0.632897, 0.607809, 0.645885, 0.643599, 0.680909, 0.576415, 0.612332, 0.588448, 0.62524, 0.600545, 0.638228, 0.647578, 0.68721, 0.663586, 0.704465, 0.679656, 0.721798, 0.605526, 0.643008, 0.619421, 0.657859, 0.620911, 0.659531},
    {0.166448, 0.166521, 0.163767, 0.121357, 0.312777, 0.316541, 0.325407, 0.331959, 0.338586, 0.340387, 0.362029, 0.485422, 0.495327, 0.338483, 0.362343, 0.335642, 0.35919, 0.271098, 0.280728, 0.364044, 0.389232, 0.374876, 0.400754, 0.375278, 0.401163, 0.37577, 0.401691, 0.378562, 0.404691, 0.366006, 0.391283, 0.280786, 0.290997, 0.401216, 0.427777, 0.404668, 0.431624, 0.329689, 0.352936, 0.276759, 0.286649, 0.356343, 0.381181, 0.367176, 0.392703, 0.378744, 0.404851, 0.376529, 0.402496, 0.376916, 0.402925, 0.373477, 0.399148, 0.285522, 0.295833, 0.410434, 0.437439, 0.413887, 0.441286, 0.27877, 0.288475, 0.345948, 0.370128, 0.356781, 0.38165, 0.368349, 0.393798, 0.377301, 0.403182, 0.374981, 0.400728, 0.371541, 0.396951, 0.287124, 0.297174, 0.408499, 0.435242, 0.411951, 0.439088, 0.306493, 0.319486, 0.3244, 0.338646, 0.350347, 0.3664, 0.381266, 0.399547, 0.418541, 0.439664, 0.44804, 0.471333, 0.5, 0.524992, 0.528734, 0.557096, 0.531386, 0.560118, 0.541202, 0.567177, 0.554666, 0.581268, 0.567835, 0.595058, 0.581064, 0.608918, 0.592819, 0.621162, 0.706634, 0.748561, 0.627062, 0.656527, 0.628265, 0.657952, 0.540285, 0.566343, 0.553837, 0.580527, 0.567066, 0.594387, 0.578821, 0.606631, 0.705502, 0.747421, 0.624192, 0.653597, 0.625395, 0.655022, 0.548206, 0.574482, 0.561435, 0.588342, 0.572701, 0.600066, 0.692304, 0.733132, 0.627628, 0.657242, 0.62602, 0.655657, 0.556396, 0.583012, 0.565046, 0.591951, 0.67964, 0.719425, 0.618226, 0.64733, 0.630006, 0.659884, 0.559686, 0.586297, 0.669941, 0.708954, 0.61112, 0.639879, 0.6229, 0.652433, 0.655055, 0.692681, 0.597245, 0.625089, 0.609025, 0.637642, 0.678328, 0.717637, 0.693237, 0.733867, 0.644068, 0.673872},
    {0.124613, 0.124687, 0.121716, 0.068274, 0.276599, 0.280476, 0.289896, 0.29676399999999997, 0.303694, 0.3055, 0.323292, 0.459361, 0.469844, 0.308069, 0.323096, 0.305153, 0.31978, 0.228364, 0.236292, 0.334297, 0.351388, 0.345233, 0.363125, 0.345781, 0.363723, 0.346306, 0.364287, 0.349159, 0.367379, 0.336327, 0.353484, 0.23836, 0.249159, 0.372492, 0.393121, 0.376037, 0.397136, 0.299116, 0.313396, 0.234233, 0.242451, 0.326463, 0.343141, 0.337398, 0.354878, 0.349354, 0.367573, 0.347111, 0.365154, 0.347508, 0.365587, 0.343976, 0.361603, 0.243244, 0.254138, 0.381938, 0.403103, 0.385482, 0.407118, 0.236242, 0.2443, 0.315866, 0.331737, 0.326801, 0.343474, 0.338757, 0.356169, 0.347921, 0.365847, 0.345551, 0.363298, 0.342018, 0.359314, 0.244819, 0.255462, 0.37998, 0.400814, 0.383525, 0.404829, 0.26586, 0.278118, 0.284826, 0.298355, 0.312643, 0.328013, 0.345844, 0.363502, 0.386006, 0.406595, 0.417923, 0.440772, 0.475008, 0.5, 0.5034, 0.532102, 0.506156, 0.535197, 0.51293, 0.543941, 0.526836, 0.558656, 0.540417, 0.573033, 0.554061, 0.587484, 0.56648, 0.600787, 0.696473, 0.737788, 0.601567, 0.639089, 0.602728, 0.640454, 0.511592, 0.542419, 0.525591, 0.557225, 0.539235, 0.571676, 0.551653, 0.584979, 0.695095, 0.736384, 0.598368, 0.635743, 0.599529, 0.637109, 0.519865, 0.551033, 0.533509, 0.565483, 0.545407, 0.578217, 0.680726, 0.720931, 0.601914, 0.639545, 0.600191, 0.637788, 0.528385, 0.560044, 0.537511, 0.569765, 0.666942, 0.706104, 0.592221, 0.629231, 0.604317, 0.642219, 0.532041, 0.563971, 0.656396, 0.694785, 0.584956, 0.621574, 0.597052, 0.634562, 0.640292, 0.677303, 0.570748, 0.606257, 0.582844, 0.619245, 0.665153, 0.706179, 0.681226, 0.723512, 0.619984, 0.658563},
    {0.16239, 0.162464, 0.15971, 0.117357, 0.309143, 0.316534, 0.320209, 0.329655, 0.336803, 0.338604, 0.344011, 0.366153, 0.492109, 0.335012, 0.358671, 0.332171, 0.355517, 0.266577, 0.275847, 0.360573, 0.385566, 0.374458, 0.400302, 0.371028, 0.396777, 0.374137, 0.400072, 0.377418, 0.403593, 0.364861, 0.390185, 0.365685, 0.39111, 0.279335, 0.289476, 0.401197, 0.427958, 0.326218, 0.349264, 0.272278, 0.28181, 0.352873, 0.377515, 0.366758, 0.392252, 0.374494, 0.400466, 0.374896, 0.400877, 0.375772, 0.401827, 0.372332, 0.39805, 0.373156, 0.398975, 0.28407, 0.294312, 0.410357, 0.437557, 0.274329, 0.283677, 0.342478, 0.366462, 0.356363, 0.381198, 0.364099, 0.389412, 0.375668, 0.401563, 0.373836, 0.39963, 0.370397, 0.395853, 0.371221, 0.396778, 0.285673, 0.295653, 0.408421, 0.435359, 0.302324, 0.31499, 0.323595, 0.337805, 0.345875, 0.361668, 0.379737, 0.39802, 0.41734, 0.438496, 0.445613, 0.468827, 0.471266, 0.4966, 0.5, 0.525053, 0.528298, 0.556833, 0.541198, 0.567173, 0.55083, 0.57733, 0.564383, 0.591513, 0.577611, 0.605373, 0.589366, 0.617618, 0.589784, 0.618069, 0.708086, 0.750211, 0.627442, 0.657107, 0.540281, 0.566333, 0.553834, 0.580517, 0.567062, 0.594377, 0.578817, 0.606622, 0.590787, 0.619241, 0.705502, 0.747482, 0.625392, 0.655019, 0.539905, 0.566054, 0.553517, 0.580307, 0.564783, 0.592031, 0.576753, 0.60465, 0.704202, 0.746147, 0.622486, 0.652029, 0.550564, 0.577109, 0.559214, 0.586048, 0.571183, 0.598667, 0.691538, 0.73244, 0.626472, 0.656257, 0.554238, 0.580787, 0.566209, 0.593407, 0.681839, 0.721968, 0.61975, 0.649199, 0.554381, 0.580724, 0.666956, 0.705695, 0.605875, 0.634409, 0.670783, 0.70985, 0.609432, 0.638179, 0.694737, 0.735518},
    {0.120194, 0.120268, 0.117297, 0.063883, 0.272608, 0.280438, 0.284216, 0.29425, 0.30175, 0.303555, 0.309273, 0.327543, 0.466268, 0.304339, 0.319096, 0.301423, 0.31578, 0.223457, 0.231054, 0.330567, 0.347388, 0.344769, 0.362643, 0.341127, 0.358848, 0.344443, 0.362431, 0.347818, 0.366093, 0.334985, 0.352198, 0.335831, 0.353162, 0.236709, 0.24744, 0.372307, 0.393127, 0.295386, 0.309396, 0.229367, 0.237254, 0.322733, 0.339141, 0.336935, 0.354396, 0.3447, 0.362698, 0.345249, 0.363298, 0.346167, 0.364301, 0.342634, 0.360317, 0.34348, 0.361281, 0.241593, 0.25242, 0.381693, 0.403046, 0.231416, 0.239145, 0.312136, 0.327737, 0.326338, 0.342992, 0.334103, 0.351294, 0.346059, 0.363991, 0.34421, 0.362012, 0.340677, 0.358028, 0.341522, 0.358992, 0.243168, 0.253744, 0.379736, 0.400757, 0.261314, 0.273257, 0.283966, 0.297475, 0.307659, 0.32279, 0.344074, 0.361762, 0.384594, 0.405246, 0.415172, 0.437966, 0.442904, 0.467898, 0.474947, 0.5, 0.502813, 0.531669, 0.512881, 0.543901, 0.522596, 0.554223, 0.536595, 0.569035, 0.550239, 0.583486, 0.562658, 0.596789, 0.563103, 0.597267, 0.697994, 0.739506, 0.601785, 0.639471, 0.511543, 0.542379, 0.525541, 0.557191, 0.539185, 0.571642, 0.551604, 0.584945, 0.564019, 0.598368, 0.695034, 0.736392, 0.59948, 0.63706, 0.510799, 0.541478, 0.524861, 0.556358, 0.536759, 0.569091, 0.549174, 0.582514, 0.693497, 0.734799, 0.596263, 0.633669, 0.521973, 0.553243, 0.531099, 0.562964, 0.543514, 0.576387, 0.679713, 0.71998, 0.600394, 0.638106, 0.526041, 0.557598, 0.538457, 0.571021, 0.669168, 0.708662, 0.593542, 0.630877, 0.526355, 0.55789, 0.653065, 0.691179, 0.579333, 0.615561, 0.657221, 0.695661, 0.58309, 0.619614, 0.682779, 0.725218},
    {0.158332, 0.158406, 0.155652, 0.113357, 0.305509, 0.312901, 0.320201, 0.324456, 0.334498, 0.336821, 0.342228, 0.348247, 0.370934, 0.331482, 0.354936, 0.328641, 0.351782, 0.261998, 0.270904, 0.357043, 0.381837, 0.370928, 0.396573, 0.370551, 0.396263, 0.369828, 0.395623, 0.375831, 0.402039, 0.363717, 0.389087, 0.364541, 0.390012, 0.365364, 0.390955, 0.277883, 0.287988, 0.322688, 0.345528, 0.26774, 0.276908, 0.349343, 0.373786, 0.363228, 0.388523, 0.374018, 0.399951, 0.370587, 0.396428, 0.37408, 0.400145, 0.371129, 0.396889, 0.371953, 0.397814, 0.372776, 0.398757, 0.282619, 0.292824, 0.269831, 0.278816, 0.338948, 0.362733, 0.352833, 0.377469, 0.363623, 0.388898, 0.371359, 0.397114, 0.372144, 0.397948, 0.369194, 0.394692, 0.370017, 0.395617, 0.370841, 0.39656, 0.284222, 0.294165, 0.298126, 0.310463, 0.319438, 0.333319, 0.345082, 0.360836, 0.375277, 0.393297, 0.415823, 0.436979, 0.444424, 0.467669, 0.468614, 0.493844, 0.471702, 0.497187, 0.5, 0.525147, 0.540375, 0.566328, 0.550827, 0.577326, 0.560547, 0.587575, 0.574159, 0.601828, 0.585914, 0.614073, 0.586331, 0.614524, 0.589861, 0.618313, 0.709537, 0.751895, 0.540277, 0.56633, 0.549998, 0.576579, 0.56361, 0.590832, 0.575365, 0.603077, 0.587334, 0.615697, 0.587811, 0.616225, 0.706953, 0.749165, 0.539901, 0.566044, 0.553513, 0.580297, 0.56478, 0.592021, 0.57675, 0.604641, 0.588778, 0.617338, 0.704202, 0.74624, 0.542262, 0.568681, 0.551296, 0.578013, 0.563266, 0.590632, 0.575295, 0.60333, 0.703436, 0.745487, 0.548406, 0.574884, 0.560377, 0.587504, 0.572406, 0.600201, 0.693737, 0.735015, 0.548933, 0.575214, 0.560964, 0.587912, 0.678854, 0.718743, 0.564518, 0.591682, 0.682686, 0.722898, 0.686588, 0.727128},
    {0.115759, 0.115832, 0.112861, 0.059481, 0.268601, 0.276431, 0.284162, 0.288553, 0.299219, 0.301594, 0.307312, 0.313676, 0.332435, 0.300525, 0.315016, 0.29761, 0.311701, 0.218468, 0.225738, 0.326754, 0.343309, 0.340956, 0.358564, 0.34058, 0.358287, 0.339705, 0.357477, 0.345981, 0.364298, 0.333619, 0.350895, 0.334464, 0.35186, 0.33531, 0.352843, 0.235026, 0.245722, 0.291572, 0.305316, 0.224419, 0.23198, 0.318919, 0.335062, 0.333121, 0.350317, 0.344153, 0.362136, 0.340511, 0.358344, 0.34422, 0.362366, 0.341209, 0.358951, 0.342054, 0.359916, 0.342899, 0.360899, 0.239909, 0.250702, 0.22651, 0.233912, 0.308322, 0.323658, 0.322524, 0.338913, 0.333556, 0.350733, 0.341321, 0.359037, 0.342263, 0.360077, 0.339252, 0.356662, 0.340097, 0.357627, 0.340942, 0.35861, 0.241484, 0.252026, 0.256716, 0.26835, 0.279409, 0.29261, 0.306788, 0.321906, 0.339079, 0.356535, 0.382812, 0.403502, 0.41375, 0.436613, 0.439882, 0.464803, 0.443167, 0.468331, 0.474853, 0.5, 0.511913, 0.54291, 0.522522, 0.554166, 0.53233, 0.564585, 0.546392, 0.579471, 0.558811, 0.592774, 0.559256, 0.593252, 0.562985, 0.597324, 0.699482, 0.741224, 0.511469, 0.542322, 0.521277, 0.552741, 0.535339, 0.567627, 0.547758, 0.58093, 0.560172, 0.594353, 0.56068, 0.594913, 0.696522, 0.73811, 0.510725, 0.541421, 0.524787, 0.556307, 0.536685, 0.569041, 0.5491, 0.582463, 0.561577, 0.595968, 0.693403, 0.734808, 0.512883, 0.543672, 0.522426, 0.553821, 0.534841, 0.567244, 0.547319, 0.580749, 0.692452, 0.733848, 0.519605, 0.550781, 0.532021, 0.564204, 0.544499, 0.577708, 0.681906, 0.722538, 0.52033, 0.551502, 0.53281, 0.565006, 0.665804, 0.705056, 0.536563, 0.569059, 0.669962, 0.709537, 0.674192, 0.714101},
    {0.222042, 0.210906, 0.197102, 0.183004, 0.176902, 0.388451, 0.488781, 0.498369, 0.508812, 0.523036, 0.526651, 0.530776, 0.536387, 0.379803, 0.405237, 0.378159, 0.403159, 0.376213, 0.40077, 0.308438, 0.32096, 0.33007, 0.344285, 0.440468, 0.468129, 0.445097, 0.473192, 0.450929, 0.479559, 0.45354, 0.482501, 0.453544, 0.482532, 0.453548, 0.482581, 0.454371, 0.483549, 0.368937, 0.393387, 0.366991, 0.390997, 0.31374, 0.325934, 0.321441, 0.33415, 0.443368, 0.470777, 0.445633, 0.473425, 0.450645, 0.478905, 0.458371, 0.487307, 0.458375, 0.487338, 0.458378, 0.487387, 0.459202, 0.488355, 0.355271, 0.378614, 0.307892, 0.318829, 0.31222, 0.323366, 0.435354, 0.462205, 0.447862, 0.475341, 0.450511, 0.478405, 0.458237, 0.486807, 0.45824, 0.486838, 0.458244, 0.486887, 0.459068, 0.487855, 0.298938, 0.308354, 0.30441, 0.314079, 0.428033, 0.454365, 0.44054, 0.4675, 0.453048, 0.48064, 0.458794, 0.487039, 0.458798, 0.48707, 0.458802, 0.487119, 0.459625, 0.488087, 0.5, 0.524921, 0.670083, 0.70811, 0.671624, 0.710107, 0.672666, 0.711575, 0.676084, 0.715638, 0.676859, 0.716452, 0.677664, 0.717312, 0.681821, 0.721869, 0.693201, 0.732933, 0.694133, 0.734264, 0.697784, 0.738567, 0.71175, 0.754044, 0.712727, 0.755066, 0.713763, 0.756165, 0.718181, 0.76099, 0.644489, 0.67316, 0.651654, 0.680719, 0.660765, 0.690281, 0.672382, 0.702632, 0.68473, 0.715658, 0.685207, 0.716211, 0.63648, 0.665022, 0.645591, 0.674583, 0.656824, 0.686523, 0.668684, 0.699027, 0.681318, 0.712371, 0.635334, 0.664123, 0.64418, 0.673516, 0.653424, 0.683235, 0.666057, 0.696579, 0.639577, 0.668923, 0.639996, 0.669386, 0.65263, 0.68273, 0.640438, 0.669831, 0.653075, 0.683175, 0.653588, 0.683697},
    {0.183898, 0.171889, 0.157089, 0.141986, 0.128313, 0.352842, 0.462886, 0.473371, 0.484752, 0.50008, 0.503917, 0.508287, 0.514204, 0.351464, 0.369062, 0.349872, 0.366762, 0.347963, 0.36414, 0.26858, 0.279192, 0.291936, 0.306713, 0.413866, 0.436235, 0.418534, 0.441639, 0.424437, 0.448402, 0.427053, 0.451621, 0.427062, 0.451649, 0.427066, 0.45169, 0.427911, 0.45268, 0.34041, 0.356649, 0.338501, 0.354027, 0.274485, 0.284822, 0.282736, 0.296016, 0.416955, 0.438837, 0.419208, 0.441784, 0.424269, 0.447619, 0.432117, 0.456498, 0.432127, 0.456526, 0.43213, 0.456566, 0.432976, 0.457557, 0.326476, 0.341196, 0.268343, 0.277437, 0.272918, 0.284636, 0.408742, 0.429961, 0.421605, 0.443614, 0.424251, 0.446992, 0.432099, 0.455871, 0.432109, 0.455899, 0.432113, 0.455939, 0.432958, 0.456929, 0.258832, 0.266407, 0.264596, 0.274846, 0.401261, 0.421872, 0.414124, 0.435525, 0.426987, 0.449181, 0.432813, 0.456031, 0.432823, 0.456059, 0.432827, 0.456099, 0.433672, 0.45709, 0.475079, 0.5, 0.657066, 0.69601, 0.658196, 0.697533, 0.658792, 0.698485, 0.661973, 0.702247, 0.662791, 0.703081, 0.663633, 0.703961, 0.668119, 0.708827, 0.683434, 0.724972, 0.683894, 0.725771, 0.687326, 0.729799, 0.701924, 0.74588, 0.703003, 0.746938, 0.704096, 0.748068, 0.708874, 0.753217, 0.621208, 0.658486, 0.628496, 0.666228, 0.637774, 0.676028, 0.649701, 0.688818, 0.66265, 0.702808, 0.663158, 0.703376, 0.612513, 0.649347, 0.621792, 0.659147, 0.633326, 0.671509, 0.645754, 0.68493, 0.658882, 0.699087, 0.610932, 0.647817, 0.620018, 0.657537, 0.629679, 0.667945, 0.642808, 0.682103, 0.614959, 0.652474, 0.615464, 0.652955, 0.628593, 0.667113, 0.615932, 0.653425, 0.629063, 0.667583, 0.629601, 0.668127},
    {0.210139, 0.207016, 0.195751, 0.182065, 0.163844, 0.330927, 0.380249, 0.486413, 0.496856, 0.510656, 0.514271, 0.523762, 0.528409, 0.371476, 0.396789, 0.369832, 0.394711, 0.367886, 0.392322, 0.310855, 0.32359, 0.404216, 0.430705, 0.317689, 0.330814, 0.433711, 0.461177, 0.439543, 0.467544, 0.441771, 0.470068, 0.441775, 0.470099, 0.445611, 0.474339, 0.445615, 0.474413, 0.35976, 0.384037, 0.358116, 0.381959, 0.29959, 0.31114, 0.394505, 0.420405, 0.321759, 0.334962, 0.432523, 0.459908, 0.437535, 0.465387, 0.444877, 0.473372, 0.444881, 0.473403, 0.448717, 0.477642, 0.448721, 0.477716, 0.348224, 0.371453, 0.304275, 0.315441, 0.384522, 0.409806, 0.312539, 0.324178, 0.434752, 0.461823, 0.437401, 0.464887, 0.444743, 0.472872, 0.444747, 0.472903, 0.448583, 0.477142, 0.448586, 0.477216, 0.298249, 0.308154, 0.37518, 0.399887, 0.304757, 0.314921, 0.42746, 0.454012, 0.439968, 0.467152, 0.44533, 0.473133, 0.445334, 0.473164, 0.44917, 0.477404, 0.449173, 0.477478, 0.329917, 0.342934, 0.5, 0.524922, 0.647617, 0.684421, 0.649783, 0.687094, 0.650874, 0.688611, 0.651609, 0.689384, 0.65608, 0.694368, 0.656873, 0.695239, 0.687657, 0.727124, 0.623154, 0.651444, 0.631976, 0.660708, 0.640694, 0.66986, 0.65231, 0.682212, 0.653853, 0.683983, 0.65433, 0.68453, 0.679617, 0.718605, 0.683268, 0.722908, 0.697234, 0.738376, 0.698212, 0.739399, 0.713018, 0.755514, 0.714112, 0.756694, 0.632883, 0.661223, 0.641692, 0.670467, 0.652925, 0.682407, 0.666696, 0.696991, 0.679104, 0.7101, 0.628817, 0.657223, 0.637664, 0.666615, 0.651435, 0.681199, 0.663355, 0.693787, 0.624235, 0.65276, 0.638008, 0.667344, 0.64731, 0.677147, 0.63845, 0.667789, 0.647755, 0.677592, 0.652403, 0.682615},
    {0.171157, 0.167903, 0.155752, 0.141078, 0.1142, 0.295509, 0.343805, 0.460522, 0.471903, 0.486802, 0.490627, 0.500678, 0.505585, 0.342642, 0.360066, 0.34105, 0.357773, 0.339141, 0.355151, 0.271301, 0.282192, 0.376465, 0.395245, 0.278527, 0.292199, 0.406669, 0.428754, 0.412572, 0.435517, 0.414794, 0.438307, 0.414804, 0.438329, 0.418742, 0.442763, 0.418746, 0.442819, 0.33078, 0.346763, 0.329188, 0.344464, 0.258826, 0.268529, 0.366572, 0.384621, 0.282706, 0.29649, 0.405473, 0.427465, 0.410534, 0.433301, 0.417988, 0.441751, 0.417998, 0.441773, 0.421936, 0.446206, 0.42194, 0.446263, 0.319041, 0.333584, 0.264084, 0.273455, 0.356333, 0.373648, 0.272888, 0.285118, 0.407876, 0.429302, 0.410523, 0.43268, 0.417977, 0.44113, 0.417987, 0.441152, 0.421925, 0.445585, 0.421929, 0.445642, 0.257761, 0.265884, 0.346775, 0.363405, 0.264597, 0.27536, 0.400427, 0.421245, 0.41329, 0.434901, 0.418722, 0.441322, 0.418732, 0.441344, 0.42267, 0.445777, 0.422674, 0.445834, 0.29189, 0.30399, 0.475078, 0.5, 0.632564, 0.67019, 0.634367, 0.672435, 0.63501, 0.67344, 0.635787, 0.674227, 0.640519, 0.67945, 0.641351, 0.680334, 0.677646, 0.716499, 0.598367, 0.634695, 0.607364, 0.644206, 0.616244, 0.653589, 0.628172, 0.666373, 0.629784, 0.668266, 0.630298, 0.668827, 0.668186, 0.708953, 0.671618, 0.712982, 0.686217, 0.729062, 0.687295, 0.730112, 0.70326, 0.747334, 0.704417, 0.748541, 0.608966, 0.645765, 0.617933, 0.655242, 0.629467, 0.667597, 0.643608, 0.682698, 0.65662, 0.696768, 0.604307, 0.640899, 0.613393, 0.650613, 0.627534, 0.665713, 0.640025, 0.679214, 0.599176, 0.635623, 0.613319, 0.650723, 0.623043, 0.661211, 0.613786, 0.651187, 0.623507, 0.661674, 0.628291, 0.666935},
    {0.197738, 0.195113, 0.191862, 0.180715, 0.150707, 0.32686, 0.332192, 0.372605, 0.484939, 0.49874, 0.502354, 0.511422, 0.521435, 0.362417, 0.38732, 0.359351, 0.384049, 0.357707, 0.381971, 0.299442, 0.311332, 0.395785, 0.422145, 0.393081, 0.419266, 0.307243, 0.319567, 0.428176, 0.455661, 0.430403, 0.458185, 0.430407, 0.458216, 0.43386, 0.462038, 0.437695, 0.466302, 0.351374, 0.375526, 0.34973, 0.373448, 0.30199, 0.313748, 0.386119, 0.411888, 0.394523, 0.420685, 0.309378, 0.321494, 0.426091, 0.45331, 0.433433, 0.461294, 0.433436, 0.461325, 0.436889, 0.465147, 0.440725, 0.469411, 0.338987, 0.36204, 0.290109, 0.300626, 0.375679, 0.400792, 0.384083, 0.409589, 0.312915, 0.325056, 0.424232, 0.451307, 0.431574, 0.459291, 0.431578, 0.459322, 0.43503, 0.463144, 0.438866, 0.467408, 0.294616, 0.304744, 0.366417, 0.390954, 0.374821, 0.399751, 0.305133, 0.315799, 0.426798, 0.453571, 0.432161, 0.459552, 0.432165, 0.459583, 0.435617, 0.463405, 0.439453, 0.46767, 0.328376, 0.341804, 0.352383, 0.367436, 0.5, 0.524926, 0.619342, 0.654406, 0.622122, 0.657745, 0.622817, 0.658477, 0.624345, 0.660248, 0.628805, 0.665242, 0.570302, 0.596956, 0.687309, 0.727125, 0.623572, 0.652124, 0.63229, 0.661276, 0.643907, 0.673627, 0.642344, 0.672086, 0.646653, 0.676824, 0.67428, 0.713016, 0.613272, 0.641278, 0.62199, 0.65043, 0.633606, 0.662781, 0.645328, 0.675252, 0.646929, 0.677107, 0.669732, 0.708283, 0.683698, 0.723752, 0.684676, 0.724774, 0.699482, 0.740881, 0.714347, 0.757078, 0.625578, 0.653802, 0.634425, 0.663195, 0.647894, 0.677462, 0.661724, 0.692129, 0.618378, 0.646555, 0.631849, 0.660822, 0.64568, 0.675489, 0.632291, 0.661266, 0.646124, 0.675934, 0.650772, 0.680952},
    {0.15799, 0.15516, 0.151765, 0.13974, 0.100002, 0.291354, 0.296913, 0.335356, 0.459094, 0.473992, 0.477817, 0.487427, 0.498016, 0.333163, 0.349881, 0.330012, 0.346478, 0.328421, 0.344185, 0.258952, 0.269037, 0.367541, 0.386142, 0.364778, 0.383152, 0.26716, 0.280041, 0.400721, 0.422802, 0.402943, 0.425592, 0.402953, 0.425614, 0.406498, 0.429612, 0.410436, 0.434062, 0.321897, 0.337703, 0.320305, 0.33541, 0.261526, 0.271506, 0.357689, 0.375567, 0.366273, 0.384611, 0.269294, 0.281976, 0.398607, 0.42035, 0.406062, 0.4288, 0.406072, 0.428822, 0.409616, 0.432821, 0.413554, 0.43727, 0.30935, 0.323634, 0.248403, 0.25714, 0.347051, 0.364114, 0.355635, 0.373157, 0.272914, 0.285655, 0.396726, 0.418297, 0.40418, 0.426747, 0.40419, 0.426768, 0.407735, 0.430767, 0.411673, 0.435217, 0.25348, 0.261879, 0.337575, 0.353961, 0.346159, 0.363004, 0.264624, 0.275905, 0.3995, 0.420523, 0.404932, 0.426945, 0.404942, 0.426967, 0.408487, 0.430965, 0.412425, 0.435415, 0.289893, 0.302467, 0.315579, 0.32981, 0.475074, 0.5, 0.601733, 0.637494, 0.604199, 0.640462, 0.604935, 0.641208, 0.606462, 0.642948, 0.611184, 0.648175, 0.543888, 0.576226, 0.676801, 0.715986, 0.598565, 0.635161, 0.607445, 0.644544, 0.619372, 0.657328, 0.617697, 0.655632, 0.622145, 0.660586, 0.662608, 0.700714, 0.587911, 0.623829, 0.596791, 0.633212, 0.608719, 0.645996, 0.620752, 0.658904, 0.622428, 0.660877, 0.656941, 0.697254, 0.67154, 0.713335, 0.672618, 0.714385, 0.688583, 0.731599, 0.704611, 0.748898, 0.601135, 0.637722, 0.610221, 0.647435, 0.624051, 0.662207, 0.638255, 0.677387, 0.593238, 0.629433, 0.607069, 0.644204, 0.621273, 0.659384, 0.60753, 0.644667, 0.621737, 0.659847, 0.626521, 0.665102},
    {0.185465, 0.182712, 0.179958, 0.176825, 0.13753, 0.322794, 0.328125, 0.333998, 0.365604, 0.486863, 0.490478, 0.499544, 0.509134, 0.353893, 0.378557, 0.351053, 0.375404, 0.347986, 0.372134, 0.288394, 0.299485, 0.388114, 0.414409, 0.38541, 0.411531, 0.385414, 0.411537, 0.297218, 0.3088, 0.421622, 0.44905, 0.421625, 0.449081, 0.425078, 0.452903, 0.428914, 0.457161, 0.342256, 0.365993, 0.33919, 0.362723, 0.29056, 0.301469, 0.377629, 0.403265, 0.386033, 0.412062, 0.383329, 0.409186, 0.298932, 0.310253, 0.422006, 0.449347, 0.422009, 0.449378, 0.425462, 0.4532, 0.428914, 0.457047, 0.330542, 0.353466, 0.29249, 0.303212, 0.367234, 0.392211, 0.375638, 0.401008, 0.384101, 0.409871, 0.300534, 0.311594, 0.42007, 0.44715, 0.420074, 0.447181, 0.423526, 0.451003, 0.426978, 0.45485, 0.280431, 0.289907, 0.357515, 0.381876, 0.365919, 0.390674, 0.374382, 0.399536, 0.305509, 0.316683, 0.418933, 0.445908, 0.418936, 0.445939, 0.422389, 0.449761, 0.425841, 0.453608, 0.327334, 0.341208, 0.350217, 0.365633, 0.380658, 0.398267, 0.5, 0.524936, 0.586945, 0.619864, 0.587599, 0.620555, 0.5888, 0.621967, 0.590317, 0.623749, 0.557794, 0.584093, 0.570933, 0.597852, 0.686933, 0.727104, 0.623827, 0.652632, 0.635444, 0.664984, 0.633392, 0.662921, 0.635084, 0.664868, 0.56244, 0.588862, 0.673962, 0.713055, 0.613586, 0.641846, 0.625203, 0.654197, 0.636924, 0.666667, 0.63542, 0.66521, 0.661238, 0.699289, 0.603635, 0.631372, 0.614868, 0.643311, 0.62659, 0.655781, 0.63837, 0.668335, 0.670517, 0.709502, 0.671497, 0.710524, 0.686303, 0.726631, 0.701168, 0.74282, 0.615289, 0.643293, 0.62876, 0.65756, 0.642288, 0.671911, 0.629201, 0.658005, 0.642733, 0.672355, 0.644763, 0.674588},
    {0.144961, 0.14199, 0.139019, 0.13575, 0.08576, 0.287197, 0.292755, 0.298885, 0.327583, 0.461219, 0.465044, 0.474653, 0.484801, 0.324227, 0.34047, 0.321311, 0.337155, 0.318161, 0.333752, 0.246989, 0.256315, 0.359396, 0.377901, 0.356632, 0.37491, 0.356635, 0.374904, 0.256236, 0.268381, 0.393736, 0.415722, 0.393746, 0.415743, 0.39729, 0.419742, 0.401228, 0.424185, 0.312355, 0.327452, 0.309204, 0.324049, 0.249155, 0.258328, 0.348701, 0.366398, 0.357286, 0.375441, 0.354522, 0.372453, 0.257921, 0.269817, 0.394148, 0.416018, 0.394158, 0.416039, 0.397702, 0.420038, 0.401247, 0.424053, 0.300403, 0.314508, 0.251081, 0.260093, 0.338104, 0.354995, 0.346688, 0.364038, 0.355332, 0.373146, 0.259496, 0.271141, 0.39219, 0.413729, 0.3922, 0.41375, 0.395745, 0.417749, 0.39929, 0.42176399999999997, 0.23777, 0.24554, 0.328229, 0.344361, 0.336814, 0.353404, 0.345457, 0.362512, 0.264644, 0.276442, 0.391072, 0.412494, 0.391082, 0.412516, 0.394627, 0.416514, 0.398172, 0.420529, 0.288425, 0.301515, 0.312906, 0.327565, 0.345594, 0.362506, 0.475064, 0.5, 0.566372, 0.599849, 0.567066, 0.600553, 0.568234, 0.601902, 0.569751, 0.603646, 0.530748, 0.56257, 0.544299, 0.576916, 0.675917, 0.715441, 0.598578, 0.635431, 0.610505, 0.648215, 0.608308, 0.645949, 0.609991, 0.647885, 0.535505, 0.56751, 0.661787, 0.700232, 0.587988, 0.624163, 0.599915, 0.636946, 0.611948, 0.649855, 0.610336, 0.648238, 0.64794, 0.685341, 0.577692, 0.613215, 0.589226, 0.62557, 0.601259, 0.638479, 0.613356, 0.651467, 0.657237, 0.697993, 0.658308, 0.699043, 0.674273, 0.716256, 0.690301, 0.733548, 0.590218, 0.62642, 0.60405, 0.641191, 0.617943, 0.656042, 0.604511, 0.641655, 0.618406, 0.656506, 0.620418, 0.658747},
    {0.170498, 0.170572, 0.167818, 0.165182, 0.124612, 0.318987, 0.324319, 0.330192, 0.336609, 0.359631, 0.478361, 0.487428, 0.497018, 0.341891, 0.365949, 0.33905, 0.362795, 0.336209, 0.359641, 0.273689, 0.283507, 0.376964, 0.402826, 0.37426, 0.399948, 0.374264, 0.399954, 0.377056, 0.402948, 0.283986, 0.294447, 0.401112, 0.427492, 0.404565, 0.431314, 0.408017, 0.43516, 0.333097, 0.356541, 0.330256, 0.353388, 0.279309, 0.289386, 0.369323, 0.394839, 0.377727, 0.403636, 0.375023, 0.40076, 0.37541, 0.401182, 0.288722, 0.299283, 0.410331, 0.437154, 0.413783, 0.440975, 0.417236, 0.444822, 0.321609, 0.344131, 0.281279, 0.291171, 0.358928, 0.383785, 0.367332, 0.392583, 0.375795, 0.401445, 0.373475, 0.398985, 0.290324, 0.300624, 0.408396, 0.434956, 0.411848, 0.438778, 0.4153, 0.442625, 0.283032, 0.292732, 0.349254, 0.373493, 0.357658, 0.382291, 0.366121, 0.391153, 0.374584, 0.40002, 0.293365, 0.303491, 0.407181, 0.43352, 0.410634, 0.437342, 0.414086, 0.441189, 0.323916, 0.338027, 0.349126, 0.36499, 0.377878, 0.395801, 0.413055, 0.433628, 0.5, 0.524956, 0.550087, 0.580037, 0.552513, 0.582788, 0.553703, 0.584211, 0.545042, 0.570969, 0.558181, 0.584728, 0.57141, 0.598582, 0.686321, 0.726834, 0.627277, 0.656646, 0.625225, 0.654584, 0.626429, 0.656009, 0.549688, 0.575738, 0.562916, 0.589592, 0.673349, 0.712785, 0.617036, 0.64586, 0.628757, 0.65833, 0.626765, 0.656351, 0.554772, 0.580973, 0.660684, 0.699078, 0.606761, 0.635033, 0.618482, 0.647503, 0.630263, 0.660057, 0.650984, 0.688598, 0.596933, 0.624682, 0.608655, 0.637152, 0.620435, 0.649706, 0.655048, 0.692682, 0.669857, 0.708789, 0.684722, 0.724977, 0.626974, 0.655653, 0.640505, 0.670004, 0.642047, 0.671715},
    {0.129026, 0.129099, 0.126128, 0.123284, 0.071782, 0.283318, 0.288877, 0.295007, 0.301714, 0.320912, 0.452017, 0.461627, 0.471774, 0.311724, 0.327029, 0.308809, 0.323714, 0.305893, 0.320399, 0.23114, 0.23924, 0.347683, 0.36563, 0.344919, 0.362639, 0.344923, 0.362633, 0.347776, 0.36572, 0.241914, 0.252972, 0.372543, 0.39299, 0.376088, 0.396988, 0.379633, 0.401003, 0.302771, 0.317329, 0.299855, 0.314014, 0.236969, 0.245357, 0.339908, 0.357445, 0.348492, 0.366489, 0.345728, 0.3635, 0.346125, 0.363928, 0.246798, 0.257951, 0.381989, 0.402972, 0.385534, 0.40697, 0.389078, 0.410985, 0.291055, 0.304473, 0.238936, 0.247164, 0.32931, 0.346042, 0.337895, 0.355085, 0.346538, 0.364194, 0.344168, 0.361638, 0.248373, 0.259275, 0.380032, 0.400683, 0.383576, 0.404681, 0.387121, 0.408696, 0.240682, 0.248743, 0.319476, 0.335458, 0.328061, 0.344501, 0.336704, 0.353609, 0.345348, 0.362722, 0.251476, 0.26222, 0.378838, 0.399213, 0.382382, 0.403211, 0.385927, 0.407226, 0.284362, 0.297753, 0.311389, 0.32656, 0.342255, 0.359538, 0.380136, 0.400151, 0.475044, 0.5, 0.526612, 0.557004, 0.529118, 0.55981, 0.530276, 0.561163, 0.51734, 0.548625, 0.530891, 0.56297, 0.544535, 0.577415, 0.674763, 0.71462, 0.601964, 0.639449, 0.599767, 0.637184, 0.600928, 0.63855, 0.522097, 0.553564, 0.535741, 0.568009, 0.660633, 0.699411, 0.591374, 0.628181, 0.603407, 0.641089, 0.601274, 0.638903, 0.527305, 0.558988, 0.646849, 0.684583, 0.580748, 0.616868, 0.592781, 0.629776, 0.604878, 0.642764, 0.636303, 0.67326, 0.570583, 0.606051, 0.582616, 0.61896, 0.594713, 0.631948, 0.640414, 0.679792, 0.656381, 0.697005, 0.672409, 0.714297, 0.60253, 0.639798, 0.616426, 0.654649, 0.617916, 0.656321},
    {0.170491, 0.170565, 0.167811, 0.165175, 0.124605, 0.315139, 0.323887, 0.33028, 0.336698, 0.34363, 0.3644, 0.487425, 0.497014, 0.341533, 0.365567, 0.338692, 0.362413, 0.335851, 0.35926, 0.27255, 0.28231, 0.375481, 0.401277, 0.375883, 0.401686, 0.376375, 0.402214, 0.378783, 0.404796, 0.369757, 0.395268, 0.283986, 0.294483, 0.404147, 0.430869, 0.4076, 0.434715, 0.332739, 0.356159, 0.329898, 0.353006, 0.278211, 0.288231, 0.36784, 0.39329, 0.379349, 0.405375, 0.377134, 0.40302, 0.377137, 0.403031, 0.377228, 0.403133, 0.288722, 0.299319, 0.413366, 0.44053, 0.416818, 0.444377, 0.321251, 0.343749, 0.280221, 0.290057, 0.357445, 0.382236, 0.368954, 0.394321, 0.377906, 0.403705, 0.375202, 0.400833, 0.375293, 0.400936, 0.290324, 0.30066, 0.411431, 0.438333, 0.414883, 0.44218, 0.282014, 0.291659, 0.347771, 0.371944, 0.359281, 0.384029, 0.368232, 0.393413, 0.376695, 0.40228, 0.374079, 0.3995, 0.293366, 0.303527, 0.410216, 0.436897, 0.413669, 0.440744, 0.323141, 0.337209, 0.348391, 0.364213, 0.377183, 0.395065, 0.412401, 0.432934, 0.449913, 0.473388, 0.5, 0.524992, 0.528734, 0.557088, 0.531386, 0.56011, 0.53872, 0.564562, 0.552243, 0.578714, 0.565472, 0.592568, 0.578951, 0.606683, 0.700152, 0.741869, 0.624399, 0.653724, 0.625602, 0.65515, 0.546219, 0.57225, 0.559447, 0.586104, 0.572927, 0.600218, 0.687181, 0.72782, 0.627931, 0.65747, 0.626322, 0.655885, 0.551791, 0.577988, 0.565271, 0.592103, 0.674043, 0.713593, 0.61804, 0.647037, 0.62982, 0.659591, 0.559912, 0.586443, 0.661442, 0.699949, 0.608317, 0.636795, 0.620097, 0.649349, 0.650263, 0.687841, 0.598274, 0.626195, 0.610054, 0.638749, 0.66989, 0.708825, 0.684758, 0.725014, 0.642044, 0.671712},
    {0.128988, 0.129062, 0.126091, 0.123246, 0.071762, 0.279095, 0.288389, 0.295089, 0.301796, 0.309031, 0.325926, 0.461587, 0.471734, 0.311332, 0.326617, 0.308417, 0.323301, 0.305501, 0.319986, 0.229954, 0.238018, 0.345989, 0.363812, 0.346538, 0.36441, 0.347062, 0.364974, 0.349522, 0.367632, 0.340313, 0.357806, 0.241878, 0.252963, 0.375637, 0.39651, 0.379182, 0.400525, 0.302379, 0.316917, 0.299463, 0.313602, 0.235823, 0.244177, 0.338214, 0.355628, 0.350111, 0.36826, 0.347868, 0.365841, 0.347872, 0.36584, 0.347962, 0.365925, 0.246761, 0.257943, 0.385083, 0.406492, 0.388627, 0.410506, 0.290663, 0.304061, 0.237832, 0.246026, 0.327617, 0.344225, 0.339513, 0.356856, 0.348678, 0.366534, 0.345914, 0.363551, 0.346005, 0.363636, 0.248336, 0.259267, 0.383125, 0.404202, 0.38667, 0.408217, 0.239619, 0.247646, 0.317783, 0.33364, 0.329679, 0.346272, 0.338844, 0.35595, 0.347488, 0.365063, 0.344811, 0.362167, 0.251439, 0.262212, 0.381931, 0.402733, 0.385476, 0.406748, 0.283548, 0.296919, 0.310616, 0.325773, 0.341523, 0.358792, 0.379445, 0.399447, 0.419963, 0.442996, 0.475008, 0.5, 0.503408, 0.532102, 0.506164, 0.535197, 0.510295, 0.541111, 0.524264, 0.555885, 0.537908, 0.57033, 0.55183, 0.585066, 0.689781, 0.730843, 0.598739, 0.636065, 0.5999, 0.637431, 0.518119, 0.549233, 0.531763, 0.563677, 0.545685, 0.578413, 0.675651, 0.715643, 0.602386, 0.639977, 0.600664, 0.638219, 0.523866, 0.555225, 0.537789, 0.569961, 0.661347, 0.700247, 0.592171, 0.629093, 0.604268, 0.642081, 0.532319, 0.564161, 0.64763, 0.685487, 0.582134, 0.618417, 0.594231, 0.631405, 0.635457, 0.67239, 0.57186, 0.607493, 0.583957, 0.620481, 0.656366, 0.696993, 0.672397, 0.714285, 0.617876, 0.656281},
    {0.166434, 0.166507, 0.163753, 0.161118, 0.120605, 0.315132, 0.318688, 0.327976, 0.334915, 0.341847, 0.346425, 0.368209, 0.493796, 0.338062, 0.361895, 0.335221, 0.358741, 0.33238, 0.355587, 0.268029, 0.277429, 0.375063, 0.400826, 0.371633, 0.397301, 0.374742, 0.400595, 0.377639, 0.403698, 0.368613, 0.39417, 0.368617, 0.394201, 0.282535, 0.292962, 0.404129, 0.431049, 0.329268, 0.352487, 0.326427, 0.349334, 0.27373, 0.283392, 0.367422, 0.392838, 0.375099, 0.400989, 0.375501, 0.4014, 0.375993, 0.401932, 0.376084, 0.402035, 0.376088, 0.402066, 0.287271, 0.297798, 0.413288, 0.440648, 0.31778, 0.340077, 0.275781, 0.285259, 0.357027, 0.381785, 0.364704, 0.389936, 0.376273, 0.402086, 0.374058, 0.399735, 0.374148, 0.399838, 0.374152, 0.399869, 0.288873, 0.299139, 0.411353, 0.438451, 0.277614, 0.286903, 0.347353, 0.371493, 0.355031, 0.379643, 0.366599, 0.391794, 0.375551, 0.401182, 0.372934, 0.398402, 0.372938, 0.398433, 0.291914, 0.302006, 0.410139, 0.437015, 0.322336, 0.336367, 0.34392, 0.359481, 0.375655, 0.393538, 0.4112, 0.431766, 0.447487, 0.470882, 0.471266, 0.496592, 0.5, 0.525053, 0.528298, 0.556824, 0.538716, 0.564553, 0.55224, 0.578704, 0.565468, 0.592558, 0.578947, 0.606673, 0.590994, 0.619368, 0.700152, 0.74193, 0.625599, 0.655146, 0.537917, 0.563822, 0.55153, 0.578069, 0.565009, 0.592183, 0.577056, 0.604879, 0.699079, 0.740834, 0.622788, 0.652258, 0.545959, 0.572086, 0.559439, 0.5862, 0.570997, 0.598375, 0.685941, 0.726607, 0.626286, 0.655964, 0.554463, 0.580933, 0.563406, 0.590323, 0.67334, 0.712963, 0.616947, 0.646115, 0.555411, 0.581831, 0.662164, 0.700855, 0.606904, 0.635515, 0.662667, 0.701365, 0.607408, 0.636019, 0.686258, 0.726664},
    {0.124569, 0.124643, 0.121672, 0.118827, 0.067371, 0.279057, 0.282708, 0.292575, 0.299851, 0.307087, 0.311928, 0.32984, 0.468158, 0.307603, 0.322617, 0.304687, 0.319301, 0.301771, 0.315986, 0.225047, 0.23278, 0.345526, 0.363331, 0.341884, 0.359536, 0.3452, 0.363118, 0.348181, 0.366346, 0.338972, 0.35652, 0.338976, 0.356551, 0.240227, 0.251245, 0.375452, 0.396516, 0.298649, 0.312917, 0.295733, 0.309602, 0.230957, 0.23898, 0.337751, 0.355146, 0.345457, 0.363385, 0.346005, 0.363985, 0.34653, 0.364553, 0.346621, 0.364639, 0.346625, 0.36467, 0.245111, 0.256225, 0.384838, 0.406434, 0.286933, 0.300061, 0.233007, 0.240871, 0.327153, 0.343743, 0.33486, 0.351982, 0.346815, 0.364679, 0.344573, 0.362264, 0.344664, 0.36235, 0.344667, 0.362381, 0.246686, 0.257549, 0.382881, 0.404145, 0.234834, 0.242533, 0.317319, 0.333159, 0.325026, 0.341397, 0.336981, 0.354094, 0.346146, 0.363777, 0.34347, 0.36088, 0.343473, 0.360911, 0.249789, 0.260494, 0.381687, 0.402676, 0.282688, 0.296039, 0.305632, 0.32055, 0.339752, 0.357052, 0.378033, 0.398098, 0.417212, 0.44019, 0.442912, 0.467898, 0.474947, 0.5, 0.502821, 0.531669, 0.510246, 0.54107, 0.524215, 0.555851, 0.537859, 0.570296, 0.551781, 0.585031, 0.56439, 0.59869, 0.68972, 0.730851, 0.599851, 0.637382, 0.509053, 0.539678, 0.523115, 0.554551, 0.537037, 0.569287, 0.549646, 0.582945, 0.688422, 0.729511, 0.596735, 0.6341, 0.517454, 0.548424, 0.531377, 0.56316, 0.543465, 0.576249, 0.674118, 0.714123, 0.600345, 0.637967, 0.526319, 0.557788, 0.535636, 0.567864, 0.660401, 0.699364, 0.59072, 0.62772, 0.527467, 0.559126, 0.64823, 0.686266, 0.580446, 0.616797, 0.648765, 0.686808, 0.580981, 0.617332, 0.67395, 0.715991},
    {0.162376, 0.16245, 0.159696, 0.15706, 0.116605, 0.311499, 0.318681, 0.322778, 0.332611, 0.340064, 0.344642, 0.350345, 0.372636, 0.334532, 0.358159, 0.331691, 0.355006, 0.32885, 0.351852, 0.26345, 0.272486, 0.371533, 0.397097, 0.371156, 0.396786, 0.370433, 0.396146, 0.376052, 0.402144, 0.367469, 0.393072, 0.367472, 0.393103, 0.368296, 0.394046, 0.281084, 0.291474, 0.325738, 0.348752, 0.322897, 0.345598, 0.269191, 0.27849, 0.363892, 0.389109, 0.374623, 0.400474, 0.371192, 0.396952, 0.374301, 0.40025, 0.37488, 0.400874, 0.374884, 0.400905, 0.375708, 0.401848, 0.285819, 0.29631, 0.31425, 0.336342, 0.271282, 0.280398, 0.353497, 0.378056, 0.364228, 0.389421, 0.371964, 0.397637, 0.372366, 0.398053, 0.372945, 0.398677, 0.372949, 0.398708, 0.373772, 0.399651, 0.287422, 0.297651, 0.273156, 0.282084, 0.343824, 0.367764, 0.354554, 0.379129, 0.36229, 0.387345, 0.373859, 0.3995, 0.371731, 0.397241, 0.371735, 0.397272, 0.372558, 0.398215, 0.290463, 0.300518, 0.318179, 0.331881, 0.343127, 0.358649, 0.371195, 0.388816, 0.409683, 0.430249, 0.446297, 0.469724, 0.468614, 0.493836, 0.471702, 0.497179, 0.5, 0.525147, 0.538713, 0.564549, 0.548404, 0.574766, 0.562015, 0.589014, 0.575495, 0.603128, 0.587542, 0.615824, 0.588018, 0.616352, 0.701603, 0.743614, 0.537914, 0.563812, 0.551526, 0.578059, 0.565005, 0.592173, 0.577052, 0.604869, 0.589081, 0.617566, 0.699078, 0.740928, 0.537658, 0.563657, 0.551522, 0.578165, 0.56308, 0.590339, 0.575109, 0.603037, 0.697839, 0.739654, 0.548631, 0.57503, 0.557574, 0.58442, 0.569603, 0.597117, 0.685238, 0.726011, 0.549962, 0.576321, 0.561993, 0.589018, 0.674062, 0.713903, 0.562494, 0.589522, 0.67457, 0.714412, 0.678472, 0.718643},
    {0.120133, 0.120207, 0.117236, 0.114391, 0.062969, 0.27505, 0.282654, 0.286878, 0.297321, 0.305125, 0.309967, 0.315994, 0.334355, 0.303789, 0.318537, 0.300873, 0.315222, 0.297957, 0.311907, 0.220058, 0.227464, 0.341712, 0.359251, 0.341337, 0.358974, 0.340462, 0.358164, 0.346344, 0.364551, 0.337606, 0.355218, 0.33761, 0.355248, 0.338455, 0.356232, 0.238543, 0.249527, 0.294835, 0.308837, 0.29192, 0.305522, 0.226009, 0.233706, 0.333937, 0.351067, 0.34491, 0.362824, 0.341268, 0.359031, 0.344584, 0.362618, 0.345196, 0.363273, 0.345199, 0.363304, 0.346045, 0.364288, 0.243427, 0.254507, 0.283119, 0.295981, 0.2281, 0.235638, 0.32334, 0.339663, 0.334312, 0.35142, 0.342078, 0.359724, 0.342626, 0.360329, 0.343238, 0.360984, 0.343242, 0.361015, 0.344087, 0.361998, 0.245002, 0.255831, 0.229968, 0.237342, 0.313506, 0.329079, 0.324478, 0.340836, 0.332244, 0.34914, 0.3442, 0.361842, 0.342044, 0.359515, 0.342048, 0.359546, 0.342893, 0.360529, 0.248105, 0.258776, 0.278131, 0.291173, 0.304761, 0.319666, 0.334758, 0.351825, 0.376251, 0.396354, 0.415789, 0.438837, 0.43989, 0.464803, 0.443176, 0.468331, 0.474853, 0.5, 0.510172, 0.541014, 0.519951, 0.551401, 0.534012, 0.566281, 0.547934, 0.581017, 0.560543, 0.594675, 0.561051, 0.595235, 0.691208, 0.732569, 0.508979, 0.539621, 0.523041, 0.554501, 0.536963, 0.569237, 0.549572, 0.582895, 0.56205, 0.596399, 0.688328, 0.72952, 0.508364, 0.538853, 0.522704, 0.554017, 0.534792, 0.567106, 0.54727, 0.58061, 0.686857, 0.727992, 0.519883, 0.550971, 0.529199, 0.561046, 0.541677, 0.574551, 0.673139, 0.71324, 0.521443, 0.552737, 0.533923, 0.566242, 0.660969, 0.700143, 0.534455, 0.566777, 0.661506, 0.700684, 0.665736, 0.705248},
    {0.220598, 0.217475, 0.21005, 0.196885, 0.183024, 0.178302, 0.390047, 0.490026, 0.499938, 0.510933, 0.526122, 0.529971, 0.534303, 0.371176, 0.396714, 0.381464, 0.407081, 0.382623, 0.407979, 0.381166, 0.406111, 0.324086, 0.337954, 0.327098, 0.341051, 0.438766, 0.466339, 0.444214, 0.472294, 0.444357, 0.472582, 0.452658, 0.481629, 0.452662, 0.481679, 0.452665, 0.481753, 0.371413, 0.396431, 0.372875, 0.39764, 0.371417, 0.395772, 0.312964, 0.325652, 0.331167, 0.345199, 0.437577, 0.465069, 0.442206, 0.470137, 0.447462, 0.475885, 0.455764, 0.484933, 0.455767, 0.484982, 0.455771, 0.485056, 0.365699, 0.38992, 0.364242, 0.388052, 0.317774, 0.33009, 0.32538, 0.338171, 0.443017, 0.470406, 0.445177, 0.472931, 0.450434, 0.478679, 0.458735, 0.487726, 0.458739, 0.487776, 0.458743, 0.48785, 0.352983, 0.376141, 0.313178, 0.324314, 0.317845, 0.329194, 0.436013, 0.462888, 0.448521, 0.476028, 0.451414, 0.47936, 0.459715, 0.488408, 0.459719, 0.488457, 0.459723, 0.488531, 0.306799, 0.316566, 0.312343, 0.322354, 0.429698, 0.456112, 0.442206, 0.469252, 0.454958, 0.48266, 0.46128, 0.489705, 0.461284, 0.489754, 0.461287, 0.489828, 0.5, 0.524921, 0.646542, 0.68287, 0.648628, 0.68546, 0.649608, 0.686866, 0.656575, 0.694834, 0.657339, 0.695654, 0.658132, 0.696524, 0.681745, 0.720858, 0.682921, 0.72245, 0.686354, 0.726519, 0.703898, 0.745931, 0.704893, 0.746988, 0.705946, 0.748127, 0.640164, 0.668566, 0.647145, 0.675932, 0.659612, 0.689092, 0.671288, 0.701521, 0.683696, 0.71463, 0.632128, 0.660399, 0.644597, 0.673559, 0.655889, 0.685577, 0.667808, 0.698165, 0.631146, 0.659685, 0.640052, 0.669154, 0.649355, 0.678957, 0.650936, 0.680912, 0.651416, 0.681459, 0.651929, 0.681981},
    {0.18219, 0.178948, 0.170949, 0.156845, 0.141994, 0.129783, 0.354529, 0.464201, 0.475028, 0.486999, 0.503334, 0.507406, 0.511977, 0.341879, 0.359375, 0.352855, 0.370591, 0.354252, 0.371551, 0.352864, 0.369498, 0.285603, 0.297584, 0.288647, 0.303146, 0.411968, 0.434175, 0.417477, 0.440509, 0.417567, 0.440975, 0.425996, 0.450517, 0.426005, 0.450558, 0.426009, 0.450614, 0.342605, 0.359608, 0.344319, 0.360891, 0.342931, 0.358838, 0.273274, 0.284082, 0.292835, 0.307442, 0.410778, 0.432893, 0.415446, 0.438299, 0.420768, 0.444425, 0.429196, 0.453967, 0.429206, 0.454007, 0.42921, 0.454064, 0.337074, 0.353021, 0.335686, 0.350968, 0.278661, 0.289142, 0.28676, 0.300138, 0.416597, 0.438452, 0.418741, 0.441261, 0.424063, 0.447386, 0.432491, 0.456929, 0.432501, 0.456969, 0.432505, 0.457026, 0.324154, 0.338649, 0.273849, 0.283168, 0.27875, 0.290695, 0.409458, 0.430714, 0.422321, 0.44437, 0.425228, 0.448038, 0.433657, 0.457581, 0.433667, 0.457621, 0.43367, 0.457678, 0.267067, 0.275028, 0.272876, 0.283501, 0.403044, 0.423774, 0.415907, 0.43743, 0.429031, 0.451375, 0.435438, 0.458889, 0.435447, 0.45893, 0.435451, 0.458986, 0.475079, 0.5, 0.631849, 0.669017, 0.633568, 0.671179, 0.634097, 0.67206, 0.64114, 0.680051, 0.641949, 0.680887, 0.642781, 0.681771, 0.671381, 0.71225, 0.672103, 0.713326, 0.675296, 0.717096, 0.693797, 0.737438, 0.694897, 0.738528, 0.696013, 0.739694, 0.616645, 0.653547, 0.623735, 0.661072, 0.636563, 0.674753, 0.648554, 0.687618, 0.661566, 0.701688, 0.607919, 0.644367, 0.620749, 0.658048, 0.632346, 0.670484, 0.644837, 0.683985, 0.606509, 0.643031, 0.615658, 0.652826, 0.625382, 0.663314, 0.626739, 0.665191, 0.627308, 0.665753, 0.627846, 0.666298},
    {0.208197, 0.209411, 0.206161, 0.195535, 0.182086, 0.165244, 0.332402, 0.382245, 0.487983, 0.498977, 0.513742, 0.517591, 0.527289, 0.374049, 0.399689, 0.370983, 0.396419, 0.372444, 0.397629, 0.370987, 0.39576, 0.312674, 0.325697, 0.399883, 0.426224, 0.316651, 0.329805, 0.432846, 0.46041, 0.432989, 0.460698, 0.440906, 0.469328, 0.44091, 0.469377, 0.444746, 0.473642, 0.365799, 0.390762, 0.36726, 0.391972, 0.365803, 0.390104, 0.315364, 0.328268, 0.404535, 0.431065, 0.322162, 0.335423, 0.433867, 0.461353, 0.439123, 0.467101, 0.447041, 0.475731, 0.447045, 0.47578, 0.450881, 0.480045, 0.356463, 0.380507, 0.355308, 0.37895, 0.303607, 0.315275, 0.394154, 0.420032, 0.325699, 0.338985, 0.432008, 0.45935, 0.437265, 0.465098, 0.445182, 0.473728, 0.445186, 0.473777, 0.449022, 0.478042, 0.345877, 0.368917, 0.309544, 0.320904, 0.385181, 0.410486, 0.318163, 0.330009, 0.435352, 0.462447, 0.438245, 0.46578, 0.446163, 0.474409, 0.446166, 0.474459, 0.450002, 0.478723, 0.305867, 0.316106, 0.376846, 0.401633, 0.312691, 0.323199, 0.429067, 0.455701, 0.441819, 0.469109, 0.447757, 0.475736, 0.44776, 0.475785, 0.451596, 0.480049, 0.353458, 0.368151, 0.5, 0.524925, 0.618226, 0.652814, 0.620937, 0.656082, 0.625763, 0.661706, 0.626486, 0.662485, 0.630946, 0.667479, 0.675519, 0.714337, 0.618542, 0.646545, 0.627179, 0.655615, 0.639253, 0.668366, 0.650929, 0.680795, 0.652531, 0.68265, 0.668129, 0.706491, 0.671562, 0.71056, 0.689106, 0.729963, 0.690101, 0.731021, 0.704926, 0.747177, 0.628246, 0.656297, 0.640412, 0.66914, 0.651704, 0.681157, 0.665534, 0.695825, 0.624344, 0.65248, 0.63325, 0.66195, 0.647081, 0.676618, 0.635308, 0.664445, 0.649142, 0.679113, 0.649655, 0.679635},
    {0.169022, 0.170357, 0.166962, 0.155507, 0.141085, 0.115669, 0.297056, 0.345913, 0.462176, 0.474147, 0.490053, 0.494113, 0.504365, 0.344962, 0.362698, 0.341817, 0.359296, 0.343532, 0.360585, 0.342144, 0.358532, 0.273254, 0.284429, 0.371873, 0.390435, 0.27728, 0.290987, 0.405626, 0.427794, 0.405717, 0.42826, 0.413752, 0.437373, 0.413762, 0.437408, 0.4177, 0.441857, 0.336681, 0.353618, 0.338395, 0.354907, 0.337008, 0.352855, 0.275975, 0.287059, 0.376791, 0.395624, 0.283106, 0.296932, 0.406825, 0.428931, 0.412147, 0.435057, 0.420182, 0.44417, 0.420192, 0.444204, 0.42413, 0.448654, 0.327383, 0.343071, 0.326312, 0.341341, 0.262981, 0.272827, 0.366212, 0.384234, 0.286727, 0.300612, 0.404944, 0.426878, 0.410266, 0.433003, 0.418301, 0.442116, 0.418311, 0.442151, 0.422249, 0.4466, 0.316658, 0.330973, 0.269569, 0.279163, 0.357047, 0.374399, 0.278717, 0.291177, 0.408531, 0.429993, 0.411438, 0.433661, 0.419473, 0.442775, 0.419483, 0.442809, 0.423421, 0.447259, 0.26573600000000003, 0.274229, 0.348556, 0.365305, 0.272875, 0.284014, 0.402148, 0.423084, 0.415272, 0.43703, 0.421286, 0.444115, 0.421296, 0.444149, 0.425234, 0.448599, 0.31713, 0.330983, 0.475075, 0.5, 0.600975, 0.63628, 0.603368, 0.639166, 0.608076, 0.644618, 0.608843, 0.645407, 0.613565, 0.650634, 0.664873, 0.703032, 0.593497, 0.629425, 0.602297, 0.638719, 0.614721, 0.651982, 0.626712, 0.664841, 0.628387, 0.666814, 0.656091, 0.696179, 0.659285, 0.699949, 0.677786, 0.720291, 0.678885, 0.721373, 0.694872, 0.738631, 0.604065, 0.640454, 0.616583, 0.653811, 0.628181, 0.666241, 0.642385, 0.681421, 0.599577, 0.635781, 0.608726, 0.64557, 0.62293, 0.66075, 0.610649, 0.648009, 0.624856, 0.663189, 0.625394, 0.663728},
    {0.195924, 0.197011, 0.194778, 0.191646, 0.180736, 0.152107, 0.328336, 0.33405, 0.374968, 0.487061, 0.501825, 0.505674, 0.514949, 0.365525, 0.390927, 0.36579, 0.391062, 0.362724, 0.387791, 0.361568, 0.386234, 0.301626, 0.313849, 0.392212, 0.418489, 0.392216, 0.418495, 0.306626, 0.319037, 0.424207, 0.451564, 0.432124, 0.460193, 0.432128, 0.460242, 0.435964, 0.464501, 0.359786, 0.384517, 0.35672, 0.381247, 0.355565, 0.37969, 0.303934, 0.315989, 0.396045, 0.422442, 0.393236, 0.419438, 0.311716, 0.324182, 0.427696, 0.455155, 0.435614, 0.463784, 0.435618, 0.463833, 0.43907, 0.46768, 0.348402, 0.372327, 0.347246, 0.370769, 0.305989, 0.317861, 0.386093, 0.411845, 0.394497, 0.420644, 0.313791, 0.326043, 0.42625, 0.453479, 0.434167, 0.462108, 0.434171, 0.462158, 0.437623, 0.466004, 0.336582, 0.359441, 0.29536, 0.306067, 0.376279, 0.401409, 0.384682, 0.410208, 0.31854, 0.330893, 0.425017, 0.452136, 0.432934, 0.460765, 0.432938, 0.460815, 0.43639, 0.464661, 0.302216, 0.312674, 0.368024, 0.392636, 0.376428, 0.401435, 0.313067, 0.324083, 0.42859, 0.455465, 0.434528, 0.462092, 0.434532, 0.462141, 0.437985, 0.465988, 0.351372, 0.366432, 0.381774, 0.399025, 0.5, 0.524935, 0.58587, 0.618315, 0.593228, 0.626679, 0.593911, 0.627416, 0.595429, 0.629198, 0.565689, 0.592053, 0.675172, 0.714345, 0.618775, 0.64703, 0.630849, 0.659781, 0.642525, 0.67221, 0.641021, 0.670753, 0.662203, 0.700297, 0.608536, 0.636246, 0.62061, 0.648997, 0.632286, 0.661426, 0.644067, 0.67398, 0.657804, 0.695702, 0.67535, 0.715105, 0.676345, 0.716163, 0.691169, 0.732311, 0.621009, 0.648959, 0.629916, 0.658429, 0.643444, 0.67278, 0.629356, 0.658139, 0.642888, 0.67249, 0.643401, 0.673012},
    {0.155993, 0.157187, 0.154786, 0.151516, 0.139744, 0.101469, 0.292898, 0.29886, 0.337845, 0.461331, 0.477237, 0.481297, 0.491108, 0.336026, 0.353287, 0.336422, 0.353555, 0.333272, 0.350152, 0.332201, 0.348428, 0.26129, 0.271707, 0.363727, 0.382194, 0.363731, 0.382188, 0.266356, 0.279327, 0.396509, 0.418389, 0.404544, 0.427503, 0.404554, 0.427537, 0.408492, 0.431981, 0.330444, 0.346949, 0.327294, 0.343546, 0.326223, 0.341823, 0.263604, 0.27388, 0.367803, 0.386454, 0.36493, 0.383325, 0.271733, 0.284774, 0.400233, 0.422274, 0.408268, 0.431387, 0.408278, 0.431421, 0.411823, 0.435436, 0.318848, 0.334373, 0.317777, 0.33265, 0.265659, 0.27578, 0.357677, 0.375543, 0.366261, 0.384588, 0.273828, 0.286666, 0.398797, 0.420554, 0.406832, 0.429668, 0.406842, 0.429702, 0.410387, 0.433717, 0.306903, 0.320957, 0.253866, 0.262824, 0.347701, 0.364799, 0.356285, 0.373845, 0.278737, 0.291714, 0.397578, 0.41921, 0.405613, 0.428324, 0.405623, 0.428358, 0.409168, 0.432373, 0.261433, 0.270201, 0.339292, 0.355794, 0.347876, 0.364839, 0.272896, 0.284559, 0.401418, 0.422585, 0.407432, 0.42967, 0.407442, 0.429704, 0.410986, 0.433719, 0.31454, 0.328821, 0.347186, 0.36372, 0.475065, 0.5, 0.565653, 0.598668, 0.573101, 0.60708, 0.573827, 0.607827, 0.575344, 0.609571, 0.539013, 0.570951, 0.664023, 0.702518, 0.593493, 0.629669, 0.605917, 0.642933, 0.617908, 0.655792, 0.616295, 0.654175, 0.649894, 0.687312, 0.582905, 0.618403, 0.595329, 0.631666, 0.60732, 0.644525, 0.619416, 0.657513, 0.644366, 0.683967, 0.662868, 0.704309, 0.663967, 0.705391, 0.679954, 0.722641, 0.596298, 0.632489, 0.605447, 0.642278, 0.61934, 0.657129, 0.604604, 0.641704, 0.618499, 0.656555, 0.619032, 0.657093},
    {0.180957, 0.18487, 0.182638, 0.180003, 0.177107, 0.139189, 0.32453, 0.330244, 0.336464, 0.368561, 0.48967, 0.493519, 0.502793, 0.353523, 0.378318, 0.353787, 0.378453, 0.351435, 0.37582, 0.348369, 0.37255, 0.28692, 0.297871, 0.381062, 0.406906, 0.381066, 0.406912, 0.383475, 0.409495, 0.293394, 0.304684, 0.411612, 0.438604, 0.411615, 0.438653, 0.415068, 0.4425, 0.350628, 0.375065, 0.348275, 0.372433, 0.345209, 0.369163, 0.292683, 0.303906, 0.387739, 0.414016, 0.384931, 0.411012, 0.384934, 0.411023, 0.301505, 0.313212, 0.423936, 0.451559, 0.42394, 0.451609, 0.427392, 0.455455, 0.339957, 0.363513, 0.336891, 0.360242, 0.294778, 0.30582, 0.377787, 0.403419, 0.386191, 0.412219, 0.383487, 0.409347, 0.303581, 0.315073, 0.422489, 0.449884, 0.422493, 0.449933, 0.425945, 0.45378, 0.328321, 0.351065, 0.29796, 0.308892, 0.368018, 0.393026, 0.376422, 0.401825, 0.384885, 0.410692, 0.306396, 0.317701, 0.421179, 0.448347, 0.421183, 0.448396, 0.424635, 0.452242, 0.28825, 0.298076, 0.359306, 0.383756, 0.36771, 0.392555, 0.376173, 0.401422, 0.313679, 0.325237, 0.421049, 0.44817, 0.421053, 0.448219, 0.424505, 0.452066, 0.350392, 0.365903, 0.379063, 0.396632, 0.41413, 0.434347, 0.5, 0.524956, 0.558247, 0.588921, 0.55889, 0.589618, 0.56008, 0.591041, 0.552937, 0.578929, 0.566136, 0.592751, 0.67456, 0.714074, 0.622683, 0.651444, 0.634358, 0.663873, 0.632366, 0.661895, 0.557703, 0.583822, 0.661649, 0.700087, 0.612503, 0.640719, 0.624179, 0.653148, 0.635959, 0.665702, 0.648988, 0.686383, 0.602616, 0.630308, 0.613908, 0.642325, 0.625689, 0.654879, 0.658759, 0.697116, 0.659757, 0.698173, 0.674581, 0.714321, 0.626603, 0.655227, 0.640134, 0.669577, 0.640647, 0.670099},
    {0.140059, 0.144296, 0.141895, 0.13905, 0.136033, 0.087507, 0.28902, 0.294982, 0.301479, 0.330695, 0.464169, 0.468229, 0.47804, 0.323523, 0.339846, 0.323919, 0.340114, 0.321525, 0.337368, 0.318375, 0.333965, 0.24545, 0.25464, 0.352015, 0.369923, 0.352018, 0.369917, 0.354478, 0.372575, 0.252034, 0.26391, 0.383342, 0.40475, 0.383352, 0.404784, 0.386896, 0.408798, 0.320861, 0.336827, 0.318466, 0.334081, 0.315316, 0.330678, 0.251425, 0.260918, 0.35901, 0.377502, 0.356136, 0.374373, 0.35614, 0.374371, 0.26061, 0.2729, 0.3961, 0.41832, 0.39611, 0.418354, 0.399654, 0.422369, 0.31002, 0.324908, 0.30687, 0.321505, 0.253522, 0.26286, 0.348883, 0.36659, 0.357468, 0.375635, 0.354704, 0.372652, 0.262705, 0.274792, 0.394664, 0.4166, 0.394674, 0.416634, 0.398218, 0.420649, 0.29815, 0.312047, 0.256778, 0.266035, 0.338948, 0.355896, 0.347532, 0.364942, 0.356176, 0.374055, 0.265569, 0.277484, 0.393369, 0.415021, 0.393378, 0.415055, 0.396923, 0.41907, 0.245956, 0.25412, 0.33014, 0.346411, 0.338724, 0.355456, 0.347368, 0.364569, 0.273166, 0.28538, 0.393317, 0.414934, 0.393327, 0.414969, 0.396872, 0.418983, 0.313134, 0.32794, 0.343918, 0.360834, 0.381685, 0.401332, 0.475044, 0.5, 0.535415, 0.566538, 0.5361, 0.567242, 0.537258, 0.568595, 0.525605, 0.557006, 0.539219, 0.571419, 0.662869, 0.701689, 0.597376, 0.634167, 0.609367, 0.647026, 0.607233, 0.64484, 0.53049, 0.562078, 0.648804, 0.686546, 0.586851, 0.622964, 0.598842, 0.635823, 0.610938, 0.648811, 0.635022, 0.671723, 0.576623, 0.612084, 0.58822, 0.624514, 0.600317, 0.637502, 0.644827, 0.684897, 0.64592, 0.685979, 0.661907, 0.703229, 0.602062, 0.639236, 0.615958, 0.654086, 0.61649, 0.654625},
    {0.164506, 0.168419, 0.166187, 0.163551, 0.161152, 0.12202, 0.316836, 0.322551, 0.328771, 0.335454, 0.361077, 0.482445, 0.491719, 0.341007, 0.365316, 0.341272, 0.36545, 0.33892, 0.362818, 0.336079, 0.359664, 0.27201, 0.281804, 0.3694, 0.394936, 0.369404, 0.394942, 0.371812, 0.397524, 0.362786, 0.38799, 0.281496, 0.291888, 0.399645, 0.426238, 0.403098, 0.430085, 0.338113, 0.362063, 0.33576, 0.35943, 0.332919, 0.356277, 0.277813, 0.28788, 0.376077, 0.402046, 0.373269, 0.399042, 0.373272, 0.399052, 0.373363, 0.399149, 0.289607, 0.300416, 0.41197, 0.439194, 0.415422, 0.443041, 0.327442, 0.35051, 0.324601, 0.347356, 0.279948, 0.289835, 0.366125, 0.391449, 0.374529, 0.400248, 0.371825, 0.397377, 0.371916, 0.397473, 0.291683, 0.302277, 0.410523, 0.437518, 0.413975, 0.441365, 0.316032, 0.338179, 0.283171, 0.292948, 0.356356, 0.381056, 0.36476, 0.389855, 0.373223, 0.398722, 0.370606, 0.395936, 0.294498, 0.304905, 0.409213, 0.435981, 0.412666, 0.439828, 0.287273, 0.296997, 0.34769, 0.371828, 0.356093, 0.380628, 0.364556, 0.389495, 0.372723, 0.398036, 0.299848, 0.310219, 0.409006, 0.43561, 0.412458, 0.439457, 0.343425, 0.35886, 0.374237, 0.391924, 0.406772, 0.426899, 0.441753, 0.464585, 0.5, 0.524992, 0.526861, 0.555057, 0.529513, 0.558079, 0.539609, 0.565224, 0.552808, 0.579046, 0.566287, 0.593154, 0.675635, 0.71567, 0.622749, 0.651999, 0.620756, 0.650021, 0.544375, 0.570117, 0.557855, 0.584225, 0.662724, 0.701683, 0.612569, 0.641274, 0.62435, 0.653828, 0.549774, 0.575671, 0.650123, 0.688039, 0.602358, 0.630511, 0.614138, 0.643065, 0.638944, 0.675923, 0.589593, 0.61701, 0.601373, 0.629564, 0.65864, 0.69705, 0.673469, 0.713198, 0.636134, 0.665486},
    {0.122493, 0.126731, 0.12433, 0.121485, 0.118892, 0.068876, 0.280895, 0.286858, 0.293354, 0.300325, 0.322345, 0.456188, 0.465999, 0.31034, 0.325844, 0.310737, 0.326111, 0.308343, 0.323365, 0.305427, 0.32005, 0.229247, 0.237326, 0.339622, 0.35709, 0.339626, 0.357084, 0.342086, 0.359741, 0.332877, 0.34991, 0.239045, 0.250042, 0.370732, 0.391361, 0.374277, 0.395376, 0.307678, 0.322824, 0.305284, 0.320078, 0.302368, 0.316763, 0.235263, 0.243645, 0.346617, 0.364669, 0.343744, 0.36154, 0.343747, 0.361538, 0.343838, 0.361618, 0.24762, 0.259032, 0.38349, 0.404931, 0.387035, 0.408946, 0.296838, 0.310905, 0.293922, 0.30759, 0.237401, 0.245629, 0.336491, 0.353757, 0.345075, 0.362802, 0.342311, 0.359818, 0.342402, 0.359898, 0.249715, 0.260924, 0.382054, 0.403211, 0.385599, 0.407226, 0.285202, 0.298132, 0.240698, 0.248846, 0.326555, 0.343063, 0.33514, 0.352109, 0.343783, 0.361221, 0.341107, 0.358319, 0.252579, 0.263616, 0.380759, 0.401632, 0.384303, 0.405647, 0.244934, 0.253062, 0.317788, 0.333627, 0.326373, 0.342672, 0.335016, 0.351785, 0.343354, 0.360551, 0.258131, 0.269157, 0.380632, 0.40131, 0.384176, 0.405325, 0.305166, 0.319949, 0.338294, 0.355382, 0.373321, 0.39292, 0.411079, 0.433462, 0.475008, 0.5, 0.501344, 0.529878, 0.504101, 0.532972, 0.511551, 0.542396, 0.525166, 0.556809, 0.539087, 0.571539, 0.66354, 0.70287, 0.597018, 0.634246, 0.594884, 0.63206, 0.516437, 0.547469, 0.530359, 0.562198, 0.649475, 0.687727, 0.586493, 0.623042, 0.59859, 0.63603, 0.521989, 0.553244, 0.635758, 0.672967, 0.575934, 0.611797, 0.588031, 0.624785, 0.623585, 0.659864, 0.56276, 0.597714, 0.574857, 0.610702, 0.644585, 0.684657, 0.660575, 0.701907, 0.611612, 0.649571},
    {0.164499, 0.168412, 0.16618, 0.163544, 0.161145, 0.122013, 0.312988, 0.322119, 0.32886, 0.335543, 0.345212, 0.366132, 0.491715, 0.34059, 0.364871, 0.340855, 0.365005, 0.338503, 0.362373, 0.335662, 0.359219, 0.270814, 0.280544, 0.367858, 0.393323, 0.370967, 0.396618, 0.373864, 0.399721, 0.364454, 0.389775, 0.367988, 0.393685, 0.281496, 0.291949, 0.40268, 0.42964, 0.337695, 0.361618, 0.335343, 0.358985, 0.332502, 0.355832, 0.276657, 0.286662, 0.374535, 0.400433, 0.374832, 0.400717, 0.375324, 0.401249, 0.375031, 0.400934, 0.378565, 0.404845, 0.289608, 0.300477, 0.414946, 0.442533, 0.327025, 0.350065, 0.324184, 0.346911, 0.278832, 0.288658, 0.364583, 0.389837, 0.376092, 0.401924, 0.373877, 0.399573, 0.373584, 0.399258, 0.377118, 0.403169, 0.291683, 0.302338, 0.413499, 0.440857, 0.315614, 0.337734, 0.282095, 0.291813, 0.354814, 0.379443, 0.366323, 0.391531, 0.375275, 0.400919, 0.372274, 0.397721, 0.375808, 0.401632, 0.294498, 0.304966, 0.412189, 0.43932, 0.286237, 0.295904, 0.346147, 0.370216, 0.357656, 0.382303, 0.366608, 0.391692, 0.374775, 0.400233, 0.375601, 0.401261, 0.299848, 0.31028, 0.411982, 0.438949, 0.342661, 0.358051, 0.373514, 0.391157, 0.406089, 0.426173, 0.44111, 0.4639, 0.473139, 0.498656, 0.5, 0.525053, 0.528298, 0.556824, 0.533287, 0.558817, 0.54687, 0.573032, 0.560349, 0.587141, 0.574121, 0.601706, 0.689466, 0.73073, 0.61993, 0.649161, 0.540906, 0.566629, 0.554386, 0.580737, 0.568158, 0.595303, 0.676555, 0.716742, 0.623523, 0.652968, 0.546793, 0.572686, 0.560566, 0.587251, 0.663481, 0.702579, 0.613695, 0.642598, 0.552571, 0.578753, 0.649403, 0.687299, 0.601035, 0.629207, 0.653613, 0.691973, 0.605372, 0.633902, 0.673517, 0.713259},
    {0.122443, 0.126681, 0.12428, 0.121435, 0.118843, 0.068848, 0.276659, 0.286357, 0.293424, 0.300394, 0.310623, 0.327619, 0.465934, 0.309871, 0.325356, 0.310268, 0.325623, 0.307873, 0.322877, 0.304957, 0.319562, 0.227985, 0.23603, 0.337851, 0.355197, 0.341167, 0.35878, 0.344148, 0.362007, 0.334546, 0.351747, 0.338173, 0.355848, 0.238984, 0.250034, 0.373807, 0.394879, 0.307209, 0.322336, 0.304814, 0.31959, 0.301899, 0.316275, 0.234042, 0.242391, 0.344846, 0.362776, 0.345285, 0.363236, 0.34581, 0.363803, 0.345507, 0.363454, 0.349134, 0.367555, 0.24756, 0.259023, 0.386506, 0.408386, 0.296368, 0.310417, 0.293453, 0.307102, 0.236221, 0.244416, 0.334719, 0.351864, 0.346616, 0.364498, 0.344374, 0.362084, 0.344071, 0.361735, 0.347698, 0.365836, 0.249654, 0.260916, 0.38507, 0.406666, 0.284733, 0.297644, 0.239559, 0.247675, 0.324784, 0.341171, 0.336681, 0.353805, 0.345846, 0.363487, 0.342776, 0.360156, 0.346403, 0.364257, 0.252518, 0.263608, 0.383775, 0.405087, 0.243835, 0.251932, 0.316017, 0.331734, 0.327914, 0.344368, 0.337079, 0.354051, 0.345416, 0.362816, 0.346276, 0.363935, 0.25807, 0.269149, 0.383648, 0.404765, 0.304346, 0.319113, 0.337515, 0.354593, 0.372584, 0.392173, 0.410382, 0.432758, 0.444943, 0.470122, 0.474947, 0.5, 0.502821, 0.531669, 0.504488, 0.53487, 0.518521, 0.549712, 0.532443, 0.564441, 0.546555, 0.579532, 0.678533, 0.719094, 0.593838, 0.630923, 0.51244, 0.543125, 0.526363, 0.557854, 0.540475, 0.572945, 0.664468, 0.703959, 0.59755, 0.634899, 0.518533, 0.54947, 0.532646, 0.564561, 0.650231, 0.688631, 0.587403, 0.624083, 0.524478, 0.555817, 0.634889, 0.672092, 0.574356, 0.61014, 0.639355, 0.677018, 0.578826, 0.615069, 0.660546, 0.701886},
    {0.160441, 0.164354, 0.162122, 0.159487, 0.157088, 0.118013, 0.312981, 0.31692, 0.326556, 0.33376, 0.343429, 0.348265, 0.370204, 0.33706, 0.361135, 0.337325, 0.36127, 0.334973, 0.358637, 0.332132, 0.355484, 0.266235, 0.2756, 0.367381, 0.392809, 0.366658, 0.392169, 0.372277, 0.398167, 0.36331, 0.388677, 0.366844, 0.392587, 0.366847, 0.392637, 0.280045, 0.290461, 0.334165, 0.357882, 0.331813, 0.35525, 0.328972, 0.352096, 0.272118, 0.281759, 0.374058, 0.399919, 0.370523, 0.396268, 0.373632, 0.399567, 0.373827, 0.399773, 0.377361, 0.403683, 0.377365, 0.403733, 0.288156, 0.298989, 0.323495, 0.34633, 0.320654, 0.343176, 0.274334, 0.283798, 0.364106, 0.389322, 0.371783, 0.397475, 0.372185, 0.397891, 0.37238, 0.398097, 0.375914, 0.402008, 0.375918, 0.402057, 0.290232, 0.30085, 0.312084, 0.333999, 0.277637, 0.286993, 0.354337, 0.378929, 0.362014, 0.387082, 0.373583, 0.399236, 0.371071, 0.39656, 0.374605, 0.400471, 0.374608, 0.40052, 0.293047, 0.303478, 0.281819, 0.291126, 0.34567, 0.369702, 0.353347, 0.377855, 0.364916, 0.390009, 0.373571, 0.399072, 0.374398, 0.4001, 0.374401, 0.400149, 0.298397, 0.308792, 0.341868, 0.357219, 0.369054, 0.386435, 0.404571, 0.424656, 0.43992, 0.462742, 0.470487, 0.495899, 0.471702, 0.497179, 0.5, 0.525147, 0.533284, 0.558807, 0.546866, 0.573022, 0.560346, 0.587131, 0.574117, 0.601696, 0.586223, 0.61447, 0.689466, 0.730824, 0.532605, 0.558201, 0.546469, 0.572702, 0.56024, 0.587268, 0.572346, 0.600041, 0.688453, 0.729789, 0.540961, 0.566783, 0.554734, 0.581348, 0.566351, 0.5936, 0.675379, 0.715626, 0.547122, 0.573243, 0.556125, 0.58271, 0.661301, 0.700346, 0.560457, 0.587405, 0.665516, 0.70502, 0.666094, 0.705605},
    {0.118008, 0.122246, 0.119844, 0.116999, 0.114407, 0.064446, 0.276605, 0.280661, 0.290893, 0.298433, 0.308662, 0.313771, 0.331755, 0.306057, 0.321276, 0.306454, 0.321544, 0.304059, 0.318798, 0.301144, 0.315483, 0.222996, 0.230714, 0.337304, 0.354636, 0.336429, 0.353825, 0.342311, 0.360212, 0.33318, 0.350444, 0.336807, 0.354545, 0.33681, 0.354594, 0.2373, 0.248315, 0.303395, 0.318256, 0.301001, 0.315511, 0.298085, 0.312196, 0.229095, 0.237117, 0.344299, 0.362215, 0.340547, 0.358281, 0.343863, 0.361868, 0.344082, 0.362089, 0.347709, 0.36619, 0.347712, 0.366239, 0.245876, 0.257305, 0.292555, 0.306338, 0.289639, 0.303023, 0.231314, 0.239183, 0.334172, 0.351303, 0.341878, 0.359544, 0.342427, 0.360149, 0.342646, 0.360369, 0.346273, 0.36447, 0.346276, 0.364519, 0.247971, 0.259198, 0.280919, 0.293565, 0.234693, 0.242484, 0.324237, 0.340609, 0.331943, 0.34885, 0.343899, 0.361552, 0.34135, 0.35879, 0.344978, 0.362891, 0.344981, 0.36294, 0.250835, 0.26189, 0.23901, 0.246783, 0.31547, 0.331173, 0.323176, 0.339414, 0.335132, 0.352115, 0.343991, 0.36145, 0.34485, 0.362569, 0.344854, 0.362618, 0.256386, 0.267431, 0.303476, 0.318229, 0.332521, 0.349366, 0.370802, 0.390429, 0.408959, 0.431405, 0.441921, 0.467028, 0.443176, 0.468331, 0.474853, 0.5, 0.504414, 0.534813, 0.518447, 0.549661, 0.532369, 0.564391, 0.546481, 0.579482, 0.559153, 0.593222, 0.678439, 0.719102, 0.503349, 0.533553, 0.51769, 0.548712, 0.531802, 0.563803, 0.544474, 0.577542, 0.677207, 0.717827, 0.512096, 0.542652, 0.526209, 0.557743, 0.53836, 0.570913, 0.662969, 0.702507, 0.518453, 0.549428, 0.527833, 0.559585, 0.647627, 0.685968, 0.5323, 0.564514, 0.652097, 0.690895, 0.652706, 0.691519},
    {0.224634, 0.220657, 0.217406, 0.210099, 0.197171, 0.183793, 0.180348, 0.39237, 0.491927, 0.502352, 0.514272, 0.529655, 0.533671, 0.386024, 0.412111, 0.382958, 0.408841, 0.38442, 0.410056, 0.382962, 0.408188, 0.386293, 0.411461, 0.324571, 0.33853, 0.330181, 0.344414, 0.442162, 0.469946, 0.441921, 0.469822, 0.447753, 0.476215, 0.456054, 0.485281, 0.456058, 0.485355, 0.367332, 0.39257, 0.377619, 0.402937, 0.378779, 0.403836, 0.382636, 0.407669, 0.32841, 0.34242, 0.331985, 0.3461, 0.43935, 0.466954, 0.444223, 0.47229, 0.450055, 0.478684, 0.458356, 0.48775, 0.45836, 0.487824, 0.366844, 0.391496, 0.368306, 0.392706, 0.372217, 0.396596, 0.316795, 0.329574, 0.335522, 0.349663, 0.437491, 0.464951, 0.442364, 0.470287, 0.448196, 0.476681, 0.456498, 0.485747, 0.456501, 0.485821, 0.361208, 0.385065, 0.365667, 0.389536, 0.322857, 0.335341, 0.330947, 0.343922, 0.443557, 0.470948, 0.445962, 0.473741, 0.451794, 0.480135, 0.460095, 0.489201, 0.460099, 0.489275, 0.355511, 0.378792, 0.320383, 0.331814, 0.32572, 0.337392, 0.43756, 0.464495, 0.450312, 0.477903, 0.453781, 0.481881, 0.462083, 0.490947, 0.462086, 0.491021, 0.318255, 0.328619, 0.324481, 0.335127, 0.434311, 0.460987, 0.447063, 0.474395, 0.460391, 0.488449, 0.466713, 0.495512, 0.466716, 0.495586, 0.5, 0.524925, 0.617152, 0.651262, 0.619782, 0.654449, 0.624498, 0.659962, 0.631453, 0.667935, 0.632206, 0.668765, 0.666114, 0.704291, 0.667299, 0.705889, 0.67431, 0.713893, 0.691871, 0.73334, 0.692884, 0.734438, 0.632792, 0.660736, 0.643131, 0.6717, 0.655657, 0.684938, 0.667392, 0.697451, 0.625015, 0.652854, 0.637544, 0.666092, 0.648895, 0.678193, 0.63958, 0.668567, 0.648547, 0.678121, 0.659502, 0.689955},
    {0.186555, 0.182247, 0.178864, 0.170992, 0.157139, 0.142808, 0.131946, 0.357003, 0.466225, 0.477598, 0.490535, 0.507062, 0.511293, 0.357577, 0.376102, 0.354433, 0.372705, 0.356147, 0.373994, 0.354759, 0.371942, 0.358247, 0.375191, 0.286206, 0.298298, 0.292041, 0.306824, 0.415596, 0.438114, 0.415293, 0.438151, 0.421196, 0.44494, 0.429624, 0.454494, 0.429634, 0.454551, 0.337984, 0.355125, 0.34896, 0.366341, 0.350358, 0.367301, 0.354406, 0.371161, 0.290087, 0.302238, 0.293703, 0.308384, 0.412604, 0.434858, 0.417533, 0.440555, 0.423436, 0.447344, 0.431864, 0.456898, 0.431874, 0.456955, 0.337967, 0.354531, 0.339682, 0.355815, 0.343787, 0.359736, 0.27724, 0.288167, 0.297332, 0.312069, 0.410729, 0.432811, 0.415658, 0.438507, 0.421561, 0.445296, 0.429989, 0.454851, 0.429999, 0.454907, 0.332518, 0.348028, 0.337205, 0.352576, 0.283957, 0.294637, 0.292545, 0.306133, 0.41721, 0.43908, 0.419615, 0.442178, 0.425518, 0.448967, 0.433946, 0.458522, 0.433956, 0.458579, 0.32684, 0.341514, 0.281395, 0.291047, 0.286984, 0.299286, 0.411138, 0.43249, 0.424262, 0.446436, 0.42775, 0.450767, 0.436178, 0.460322, 0.436188, 0.460379, 0.279142, 0.28775, 0.285663, 0.296968, 0.407947, 0.429049, 0.421071, 0.442994, 0.434776, 0.457604, 0.441183, 0.46513, 0.441193, 0.465187, 0.475075, 0.5, 0.600259, 0.635107, 0.60257, 0.63791, 0.607163, 0.643239, 0.614196, 0.651231, 0.614995, 0.652071, 0.654834, 0.694701, 0.655557, 0.695772, 0.662653, 0.703803, 0.681175, 0.724177, 0.682297, 0.725304, 0.608842, 0.645094, 0.619483, 0.656499, 0.632375, 0.670255, 0.644428, 0.6832, 0.600388, 0.636217, 0.613281, 0.649973, 0.624941, 0.662489, 0.615181, 0.652385, 0.624394, 0.662259, 0.635546, 0.6747},
    {0.212361, 0.208256, 0.209342, 0.206209, 0.195821, 0.182854, 0.16729, 0.334592, 0.384895, 0.490396, 0.502315, 0.517275, 0.521291, 0.3775, 0.403349, 0.377765, 0.403489, 0.374699, 0.400219, 0.373543, 0.398662, 0.376874, 0.401934, 0.313523, 0.326682, 0.403279, 0.429827, 0.320156, 0.333647, 0.433139, 0.460687, 0.438971, 0.46708, 0.447272, 0.47614, 0.447276, 0.476214, 0.370145, 0.395483, 0.367079, 0.392212, 0.368541, 0.393422, 0.372397, 0.397255, 0.31698, 0.330141, 0.400467, 0.426835, 0.321538, 0.33486, 0.432796, 0.460343, 0.438628, 0.466737, 0.446546, 0.475385, 0.446549, 0.475459, 0.36117, 0.385765, 0.362632, 0.386974, 0.366543, 0.390865, 0.319176, 0.332168, 0.404449, 0.430942, 0.326516, 0.339892, 0.433966, 0.46144, 0.439798, 0.467833, 0.447716, 0.476482, 0.447719, 0.476556, 0.351912, 0.375589, 0.356674, 0.380372, 0.308672, 0.320503, 0.394694, 0.420569, 0.331265, 0.344742, 0.432733, 0.460097, 0.438565, 0.466491, 0.446483, 0.475139, 0.446487, 0.475213, 0.348346, 0.371504, 0.316732, 0.328382, 0.386728, 0.412089, 0.326038, 0.338213, 0.437084, 0.464259, 0.440553, 0.468237, 0.44847, 0.476885, 0.448474, 0.476959, 0.317079, 0.327897, 0.381458, 0.406503, 0.324828, 0.335977, 0.433864, 0.460781, 0.447192, 0.474834, 0.45313, 0.481479, 0.453134, 0.481553, 0.382848, 0.399741, 0.5, 0.524935, 0.584754, 0.616723, 0.592044, 0.625016, 0.597043, 0.630848, 0.597755, 0.631637, 0.65905, 0.696883, 0.610636, 0.638145, 0.62263, 0.650814, 0.634763, 0.663643, 0.646498, 0.676156, 0.651996, 0.689372, 0.659009, 0.697376, 0.67657, 0.716814, 0.677583, 0.717913, 0.620602, 0.648187, 0.632828, 0.661108, 0.64418, 0.673209, 0.632247, 0.660798, 0.641214, 0.670352, 0.643344, 0.672925},
    {0.173526, 0.169077, 0.17027, 0.167001, 0.155798, 0.141896, 0.11783, 0.299372, 0.348725, 0.464741, 0.477677, 0.493775, 0.497995, 0.348641, 0.36669, 0.349038, 0.366964, 0.345887, 0.363561, 0.344816, 0.361838, 0.348304, 0.365087, 0.274243, 0.285576, 0.375497, 0.394371, 0.281117, 0.295164, 0.406085, 0.42828, 0.411988, 0.435069, 0.420416, 0.444624, 0.420426, 0.444675, 0.341003, 0.358383, 0.337859, 0.35498, 0.339573, 0.356269, 0.343622, 0.36013, 0.277715, 0.289059, 0.372505, 0.391115, 0.28233, 0.296225, 0.405619, 0.427772, 0.411522, 0.434561, 0.419557, 0.443687, 0.419567, 0.443737, 0.33198, 0.348476, 0.333694, 0.349765, 0.3378, 0.353686, 0.279918, 0.291119, 0.376737, 0.395537, 0.287597, 0.301559, 0.406974, 0.429071, 0.412877, 0.43586, 0.420912, 0.444986, 0.420922, 0.445037, 0.322763, 0.338011, 0.327767, 0.342882, 0.268254, 0.278298, 0.36682, 0.384857, 0.292506, 0.306607, 0.405755, 0.427728, 0.411658, 0.434517, 0.419693, 0.443642, 0.419703, 0.443693, 0.319281, 0.333772, 0.277092, 0.287018, 0.358722, 0.376171, 0.286945, 0.299768, 0.410408, 0.431991, 0.413896, 0.436323, 0.421931, 0.445449, 0.421941, 0.445499, 0.27755, 0.286674, 0.353455, 0.370575, 0.285655, 0.297482, 0.407249, 0.428581, 0.420954, 0.443191, 0.426968, 0.450288, 0.426978, 0.450339, 0.348738, 0.364893, 0.475065, 0.5, 0.564895, 0.597454, 0.57227, 0.605784, 0.57717, 0.611456, 0.577927, 0.612249, 0.647425, 0.684537, 0.585125, 0.620353, 0.597469, 0.633527, 0.609957, 0.646866, 0.62201, 0.659805, 0.638979, 0.678011, 0.646076, 0.686042, 0.664599, 0.706416, 0.66572, 0.707534, 0.595964, 0.631685, 0.608546, 0.645117, 0.620206, 0.657627, 0.607679, 0.644516, 0.616892, 0.654385, 0.618887, 0.656899},
    {0.197394, 0.196116, 0.197202, 0.195088, 0.192192, 0.181765, 0.154411, 0.330786, 0.336809, 0.378173, 0.49012, 0.505079, 0.509096, 0.365498, 0.39074, 0.365763, 0.39088, 0.36341, 0.388248, 0.360344, 0.384978, 0.363977, 0.388561, 0.298817, 0.310704, 0.392129, 0.418244, 0.394538, 0.420826, 0.306924, 0.319293, 0.418458, 0.445491, 0.426375, 0.454139, 0.426379, 0.454213, 0.360987, 0.386031, 0.361251, 0.386165, 0.358185, 0.382895, 0.362344, 0.387039, 0.305729, 0.318058, 0.392161, 0.418409, 0.392165, 0.41842, 0.311328, 0.323889, 0.42695, 0.454512, 0.434867, 0.46316, 0.434871, 0.463234, 0.355342, 0.379717, 0.352276, 0.376447, 0.35649, 0.380649, 0.307965, 0.320127, 0.396144, 0.422517, 0.393335, 0.419517, 0.316306, 0.328922, 0.42812, 0.455609, 0.436038, 0.464257, 0.436041, 0.464331, 0.344036, 0.367606, 0.348798, 0.372388, 0.311272, 0.323328, 0.386818, 0.41258, 0.395222, 0.421384, 0.319594, 0.33207, 0.427299, 0.454593, 0.435217, 0.463241, 0.43522, 0.463315, 0.339235, 0.362226, 0.302766, 0.313783, 0.37801, 0.403209, 0.386414, 0.412012, 0.326651, 0.339367, 0.427073, 0.454315, 0.434991, 0.462963, 0.434995, 0.463037, 0.313646, 0.324704, 0.372821, 0.397703, 0.381225, 0.406507, 0.32544, 0.337131, 0.433713, 0.460913, 0.439651, 0.467557, 0.439654, 0.467631, 0.380218, 0.39743, 0.415246, 0.435105, 0.5, 0.524955, 0.557172, 0.587372, 0.565785, 0.597121, 0.566457, 0.59787, 0.557783, 0.583645, 0.658467, 0.69664, 0.614523, 0.642536, 0.626656, 0.655365, 0.638391, 0.667878, 0.645561, 0.682657, 0.604347, 0.631815, 0.61648, 0.644644, 0.628215, 0.657157, 0.641614, 0.67854, 0.659178, 0.697978, 0.660191, 0.699076, 0.629153, 0.657525, 0.63812, 0.667079, 0.637144, 0.666345},
    {0.157591, 0.156186, 0.157379, 0.155104, 0.152087, 0.140835, 0.10391, 0.295494, 0.30178, 0.341239, 0.464566, 0.480665, 0.484884, 0.336138, 0.35325, 0.336535, 0.353523, 0.33414, 0.350777, 0.33099, 0.347375, 0.334795, 0.350953, 0.258402, 0.268509, 0.363784, 0.3821, 0.366244, 0.384757, 0.266795, 0.279746, 0.390786, 0.412316, 0.398821, 0.421442, 0.398831, 0.421492, 0.33142, 0.34826, 0.331816, 0.348527, 0.328666, 0.345125, 0.333031, 0.349314, 0.265537, 0.276097, 0.363712, 0.382162, 0.363715, 0.382161, 0.271207, 0.284351, 0.399353, 0.421493, 0.407388, 0.430619, 0.407398, 0.43067, 0.325937, 0.342023, 0.322787, 0.33862, 0.32721, 0.342871, 0.267781, 0.278199, 0.367944, 0.386585, 0.36507, 0.38346, 0.276473, 0.289685, 0.400708, 0.422793, 0.408743, 0.431919, 0.408753, 0.431969, 0.314422, 0.329531, 0.319426, 0.334408, 0.271167, 0.281509, 0.358479, 0.376383, 0.367064, 0.385433, 0.279857, 0.292945, 0.399934, 0.421783, 0.407969, 0.430909, 0.407979, 0.430959, 0.309719, 0.323972, 0.261624, 0.270938, 0.34957, 0.366788, 0.358154, 0.375837, 0.287215, 0.300589, 0.399782, 0.421587, 0.407817, 0.430713, 0.407827, 0.430763, 0.273481, 0.282904, 0.344385, 0.361281, 0.35297, 0.370331, 0.285926, 0.298311, 0.406846, 0.428461, 0.412859, 0.435559, 0.412869, 0.435609, 0.345551, 0.36209, 0.383277, 0.402546, 0.475045, 0.5, 0.534697, 0.565357, 0.543515, 0.575269, 0.544231, 0.57602, 0.530633, 0.561874, 0.646305, 0.683739, 0.588991, 0.624825, 0.601479, 0.638164, 0.613532, 0.651102, 0.632242, 0.668601, 0.578471, 0.613626, 0.590958, 0.626965, 0.603012, 0.639903, 0.62718, 0.665737, 0.645704, 0.686111, 0.646825, 0.687229, 0.604777, 0.641659, 0.61399, 0.651527, 0.612697, 0.650459},
    {0.180942, 0.179664, 0.18075, 0.178637, 0.176238, 0.173825, 0.137242, 0.323093, 0.329116, 0.335562, 0.370216, 0.493966, 0.497983, 0.352983, 0.377737, 0.353247, 0.377877, 0.350895, 0.375245, 0.348054, 0.372092, 0.350265, 0.374483, 0.283907, 0.294636, 0.380467, 0.406274, 0.382875, 0.408856, 0.373465, 0.39891, 0.295026, 0.306497, 0.414406, 0.441724, 0.414409, 0.441798, 0.348471, 0.373028, 0.348736, 0.373162, 0.346384, 0.37053, 0.348632, 0.372961, 0.290859, 0.302032, 0.380499, 0.406439, 0.380503, 0.40645, 0.38021, 0.406135, 0.29943, 0.311093, 0.422898, 0.450745, 0.422901, 0.450819, 0.342827, 0.366715, 0.340475, 0.364082, 0.342778, 0.366571, 0.293136, 0.304142, 0.384482, 0.410546, 0.381673, 0.407546, 0.38138, 0.407231, 0.304408, 0.316126, 0.424068, 0.451842, 0.424071, 0.451916, 0.332235, 0.355241, 0.335086, 0.35831, 0.296483, 0.307384, 0.375155, 0.40061, 0.383559, 0.409413, 0.380559, 0.406216, 0.307696, 0.319274, 0.423247, 0.450826, 0.42325, 0.4509, 0.327618, 0.350299, 0.301788, 0.312705, 0.366394, 0.391281, 0.374797, 0.400085, 0.382964, 0.408626, 0.312819, 0.324349, 0.422944, 0.450354, 0.422948, 0.450428, 0.296102, 0.306203, 0.360747, 0.385279, 0.369151, 0.394083, 0.377317, 0.402624, 0.324365, 0.33646, 0.425879, 0.453445, 0.425883, 0.453519, 0.375502, 0.392837, 0.407956, 0.42773, 0.442828, 0.465303, 0.5, 0.524992, 0.535258, 0.564201, 0.535889, 0.564908, 0.544455, 0.56994, 0.557905, 0.584017, 0.659543, 0.698236, 0.615046, 0.643491, 0.626781, 0.656004, 0.549536, 0.575152, 0.646695, 0.684312, 0.60493, 0.632829, 0.616665, 0.645342, 0.632556, 0.668972, 0.592106, 0.619269, 0.603457, 0.631371, 0.657919, 0.696708, 0.658936, 0.697806, 0.632593, 0.661692},
    {0.140026, 0.138621, 0.139814, 0.137539, 0.134947, 0.132449, 0.085295, 0.287369, 0.293656, 0.300374, 0.332367, 0.468582, 0.472801, 0.322956, 0.339247, 0.323352, 0.33952, 0.320958, 0.336775, 0.318042, 0.333459, 0.320288, 0.335928, 0.242208, 0.251203, 0.351392, 0.369266, 0.353852, 0.371924, 0.344249, 0.361664, 0.253806, 0.26587, 0.386201, 0.408019, 0.386211, 0.40807, 0.318237, 0.334257, 0.318634, 0.334525, 0.316239, 0.331779, 0.318525, 0.334289, 0.249384, 0.258832, 0.351319, 0.369329, 0.351323, 0.369328, 0.35102, 0.368978, 0.258217, 0.270475, 0.394768, 0.417196, 0.394778, 0.417247, 0.312755, 0.328021, 0.31036, 0.325275, 0.312703, 0.327846, 0.251668, 0.260976, 0.355551, 0.373752, 0.352678, 0.370627, 0.352375, 0.370278, 0.263484, 0.275808, 0.396123, 0.418496, 0.396133, 0.418546, 0.301995, 0.316185, 0.304919, 0.319383, 0.255095, 0.264327, 0.346087, 0.36355, 0.354671, 0.3726, 0.351601, 0.369268, 0.266868, 0.279069, 0.39535, 0.417486, 0.395359, 0.417537, 0.297368, 0.311182, 0.260601, 0.269888, 0.337219, 0.354004, 0.345803, 0.363054, 0.35414, 0.371819, 0.27218, 0.284357, 0.395121, 0.417055, 0.395131, 0.417105, 0.254069, 0.262562, 0.331634, 0.348018, 0.340219, 0.357067, 0.348556, 0.365833, 0.28433, 0.29713, 0.398294, 0.420468, 0.398304, 0.420518, 0.340038, 0.356761, 0.374984, 0.394216, 0.412628, 0.434643, 0.475008, 0.5, 0.510408, 0.539695, 0.511082, 0.540405, 0.516579, 0.547265, 0.530472, 0.561963, 0.646976, 0.684912, 0.58913, 0.625383, 0.601184, 0.638322, 0.52181, 0.552689, 0.632978, 0.669837, 0.578673, 0.614248, 0.590726, 0.627186, 0.617571, 0.653235, 0.565435, 0.600101, 0.577095, 0.612611, 0.644223, 0.684628, 0.645339, 0.685747, 0.607779, 0.645364},
    {0.164491, 0.163213, 0.164299, 0.162185, 0.159786, 0.15787, 0.120072, 0.315399, 0.321422, 0.327869, 0.337249, 0.362977, 0.486909, 0.340408, 0.364671, 0.340673, 0.364811, 0.338321, 0.362179, 0.33548, 0.359026, 0.337916, 0.361534, 0.268939, 0.278505, 0.368745, 0.39424, 0.371154, 0.396823, 0.361744, 0.386876, 0.365278, 0.390781, 0.283128, 0.293726, 0.402439, 0.429383, 0.335897, 0.359962, 0.336162, 0.360096, 0.33381, 0.357464, 0.336283, 0.360012, 0.275931, 0.285943, 0.368778, 0.394406, 0.368782, 0.394416, 0.368489, 0.394101, 0.372022, 0.398005, 0.287532, 0.298322, 0.410872, 0.438342, 0.330253, 0.353649, 0.327901, 0.351016, 0.330429, 0.353621, 0.278249, 0.288094, 0.37276, 0.398513, 0.369952, 0.395513, 0.369659, 0.395198, 0.373192, 0.399102, 0.29251, 0.303355, 0.412042, 0.439438, 0.31966, 0.342175, 0.322737, 0.345361, 0.281636, 0.291378, 0.363434, 0.388576, 0.371838, 0.39738, 0.368838, 0.394182, 0.372372, 0.398086, 0.295798, 0.306503, 0.411222, 0.438423, 0.31527, 0.33735, 0.286982, 0.29674, 0.354672, 0.379248, 0.363076, 0.388052, 0.371243, 0.396593, 0.372069, 0.397614, 0.300921, 0.311578, 0.410919, 0.43795, 0.295107, 0.305103, 0.349071, 0.373288, 0.357475, 0.382092, 0.365642, 0.390633, 0.377251, 0.402982, 0.310534, 0.321467, 0.413777, 0.440847, 0.368547, 0.385804, 0.402957, 0.42283, 0.434215, 0.456485, 0.464742, 0.489592, 0.5, 0.525053, 0.526424, 0.554794, 0.531127, 0.556236, 0.544578, 0.570312, 0.558349, 0.584872, 0.660618, 0.699857, 0.615172, 0.64413, 0.536208, 0.561447, 0.54998, 0.576006, 0.64777, 0.685933, 0.605055, 0.633468, 0.539263, 0.564613, 0.633692, 0.670653, 0.591907, 0.619556, 0.637902, 0.675318, 0.593521, 0.62135, 0.657836, 0.696707},
    {0.122448, 0.121043, 0.122237, 0.119962, 0.117369, 0.115296, 0.066656, 0.279233, 0.285519, 0.292237, 0.302159, 0.324235, 0.460736, 0.309696, 0.325169, 0.310092, 0.325442, 0.307698, 0.322696, 0.304782, 0.319381, 0.307263, 0.321937, 0.225929, 0.233814, 0.338922, 0.356358, 0.341382, 0.359016, 0.33178, 0.348755, 0.335407, 0.35285, 0.240792, 0.252002, 0.373573, 0.394628, 0.304977, 0.320179, 0.305374, 0.320447, 0.302979, 0.317701, 0.3055, 0.320299, 0.233146, 0.241485, 0.338849, 0.356421, 0.338853, 0.356419, 0.33855, 0.35607, 0.342177, 0.360165, 0.245203, 0.256606, 0.382081, 0.403742, 0.299495, 0.313942, 0.2971, 0.311197, 0.299678, 0.313855, 0.235471, 0.243671, 0.343081, 0.360843, 0.340208, 0.357719, 0.339905, 0.35737, 0.343532, 0.361464, 0.25047, 0.26194, 0.383436, 0.405042, 0.288735, 0.302107, 0.291894, 0.305392, 0.238938, 0.247064, 0.333617, 0.350641, 0.342201, 0.359691, 0.339131, 0.35636, 0.342758, 0.360455, 0.253853, 0.265201, 0.382662, 0.404032, 0.284342, 0.297192, 0.244486, 0.252666, 0.324748, 0.341096, 0.333333, 0.350145, 0.34167, 0.358911, 0.34253, 0.360023, 0.259166, 0.270489, 0.382434, 0.403601, 0.253012, 0.261472, 0.319205, 0.335159, 0.32779, 0.344208, 0.336127, 0.352974, 0.348001, 0.365754, 0.26927, 0.280906, 0.38553, 0.406778, 0.332065, 0.348769, 0.369152, 0.388544, 0.402879, 0.424731, 0.435799, 0.460305, 0.474947, 0.5, 0.500758, 0.529444, 0.502507, 0.532643, 0.5164, 0.547341, 0.530512, 0.562426, 0.647623, 0.686093, 0.588817, 0.625523, 0.507738, 0.538068, 0.521851, 0.553153, 0.633625, 0.671018, 0.578359, 0.614387, 0.510782, 0.541255, 0.618283, 0.654479, 0.564791, 0.599875, 0.62275, 0.6594, 0.566361, 0.601644, 0.643991, 0.684416},
    {0.164484, 0.163206, 0.164292, 0.162178, 0.159779, 0.157863, 0.120065, 0.311551, 0.32099, 0.327957, 0.337338, 0.347225, 0.36825599999999997, 0.339932, 0.364163, 0.340197, 0.364303, 0.337844, 0.361671, 0.335003, 0.358518, 0.33744, 0.361026, 0.267685, 0.277182, 0.367144, 0.392565, 0.372763, 0.398563, 0.363796, 0.389073, 0.366946, 0.392566, 0.37048, 0.396495, 0.283128, 0.29382, 0.335421, 0.359454, 0.335685, 0.359588, 0.333333, 0.356956, 0.335807, 0.359504, 0.274717, 0.284661, 0.367176, 0.39273, 0.370286, 0.396029, 0.370481, 0.396235, 0.373631, 0.399727, 0.377165, 0.403656, 0.287532, 0.298416, 0.329776, 0.353141, 0.327424, 0.350508, 0.329952, 0.353113, 0.277075, 0.286854, 0.371159, 0.396838, 0.371456, 0.397126, 0.371651, 0.397332, 0.374801, 0.400824, 0.378335, 0.404753, 0.292511, 0.303449, 0.319184, 0.341667, 0.32226, 0.344853, 0.280503, 0.29018, 0.361833, 0.386901, 0.373342, 0.398992, 0.37083, 0.396316, 0.37398, 0.399809, 0.377514, 0.403737, 0.295798, 0.306597, 0.314793, 0.336842, 0.285888, 0.295583, 0.353071, 0.377572, 0.36458, 0.389664, 0.373235, 0.398726, 0.373678, 0.399336, 0.377212, 0.403265, 0.300922, 0.311672, 0.294054, 0.303987, 0.347469, 0.371613, 0.358979, 0.383705, 0.367634, 0.392767, 0.379244, 0.405116, 0.38007, 0.406162, 0.310534, 0.321561, 0.367794, 0.385005, 0.402245, 0.422073, 0.433543, 0.455769, 0.464111, 0.488918, 0.473576, 0.499242, 0.5, 0.525147, 0.524805, 0.549829, 0.53864, 0.564299, 0.552411, 0.578858, 0.566241, 0.593501, 0.674449, 0.714949, 0.532739, 0.557959, 0.546511, 0.572519, 0.560342, 0.587162, 0.661602, 0.701025, 0.536283, 0.561628, 0.550115, 0.576272, 0.64705, 0.685225, 0.554448, 0.58096, 0.648363, 0.686727, 0.652648, 0.691477},
    {0.122382, 0.120977, 0.12217, 0.119895, 0.117303, 0.11523, 0.066617, 0.27498, 0.285002, 0.29229, 0.302212, 0.312666, 0.329689, 0.309142, 0.324601, 0.309539, 0.324875, 0.307145, 0.322129, 0.304229, 0.318814, 0.30671, 0.32137, 0.224585, 0.232441, 0.337067, 0.354386, 0.342949, 0.360773, 0.333817, 0.351004, 0.337051, 0.354671, 0.340678, 0.35879, 0.240698, 0.251993, 0.304424, 0.319612, 0.30482, 0.319879, 0.302426, 0.317133, 0.304946, 0.319731, 0.231843, 0.240153, 0.336994, 0.354449, 0.34031, 0.358036, 0.340529, 0.358256, 0.343762, 0.361922, 0.347389, 0.366041, 0.245109, 0.256598, 0.298941, 0.313375, 0.296547, 0.310629, 0.299125, 0.313288, 0.234209, 0.24238, 0.341226, 0.358871, 0.341665, 0.359335, 0.341884, 0.359555, 0.345117, 0.363222, 0.348744, 0.367341, 0.250376, 0.261932, 0.288182, 0.301539, 0.291341, 0.304825, 0.237718, 0.245815, 0.331762, 0.348669, 0.343658, 0.361308, 0.34111, 0.358546, 0.344343, 0.362212, 0.347971, 0.366331, 0.25376, 0.265192, 0.283789, 0.296624, 0.243306, 0.251459, 0.322893, 0.339123, 0.33479, 0.351762, 0.343649, 0.361097, 0.344115, 0.361781, 0.347742, 0.3659, 0.259072, 0.27048, 0.251873, 0.260306, 0.31735, 0.333186, 0.329247, 0.345825, 0.338105, 0.35516, 0.349979, 0.36794, 0.350839, 0.369077, 0.269176, 0.280898, 0.331235, 0.347929, 0.368363, 0.387751, 0.40213, 0.42398, 0.435092, 0.459595, 0.445206, 0.470556, 0.474853, 0.5, 0.49542, 0.5251, 0.509731, 0.540227, 0.523843, 0.555312, 0.538017, 0.570484, 0.662583, 0.702317, 0.503717, 0.533707, 0.51783, 0.548792, 0.532005, 0.563964, 0.648585, 0.68725, 0.507301, 0.537464, 0.521478, 0.552636, 0.632723, 0.670143, 0.525945, 0.557559, 0.634021, 0.671628, 0.638562, 0.676637},
    {0.224746, 0.224692, 0.220586, 0.217454, 0.210383, 0.197939, 0.185035, 0.182784, 0.394789, 0.494109, 0.50542, 0.517494, 0.533006, 0.389415, 0.415706, 0.385545, 0.411601, 0.382479, 0.408331, 0.383941, 0.409546, 0.38776, 0.41334, 0.385814, 0.410952, 0.323967, 0.337934, 0.330302, 0.344571, 0.43934, 0.466937, 0.444788, 0.472918, 0.451004, 0.479741, 0.461391, 0.491069, 0.38206, 0.40784, 0.378993, 0.40457, 0.380455, 0.405785, 0.384312, 0.409619, 0.386875, 0.412069, 0.328875, 0.342975, 0.335009, 0.349405, 0.44205, 0.469814, 0.447499, 0.475795, 0.453331, 0.482207, 0.461632, 0.491298, 0.362642, 0.387508, 0.37293, 0.397876, 0.379458, 0.404533, 0.382548, 0.407543, 0.33222, 0.346322, 0.336279, 0.350505, 0.439388, 0.466976, 0.444837, 0.472958, 0.450669, 0.479369, 0.45897, 0.48846, 0.362232, 0.386514, 0.369611, 0.394063, 0.372755, 0.397131, 0.321858, 0.334804, 0.341028, 0.355355, 0.438156, 0.465634, 0.443604, 0.471615, 0.449436, 0.478027, 0.457738, 0.487117, 0.36352, 0.387487, 0.367117, 0.391034, 0.330268, 0.343059, 0.338762, 0.35206, 0.445228, 0.472695, 0.448209, 0.476134, 0.454041, 0.482546, 0.462342, 0.491636, 0.359836, 0.383355, 0.331871, 0.343909, 0.337797, 0.350106, 0.442297, 0.46951, 0.455625, 0.483563, 0.459094, 0.48756, 0.467395, 0.496651, 0.333886, 0.345166, 0.34095, 0.352575, 0.442217, 0.469367, 0.455545, 0.483421, 0.468873, 0.497493, 0.475195, 0.50458, 0.5, 0.524936, 0.58368, 0.615172, 0.590889, 0.623384, 0.595779, 0.629104, 0.602723, 0.637088, 0.644471, 0.681179, 0.649462, 0.686951, 0.656491, 0.69499, 0.67407, 0.714477, 0.620376, 0.64755, 0.630774, 0.658592, 0.64336, 0.671913, 0.628241, 0.656197, 0.64083, 0.669518, 0.642938, 0.672071},
    {0.186675, 0.186608, 0.182158, 0.178902, 0.171282, 0.157949, 0.144124, 0.134519, 0.359571, 0.468545, 0.480841, 0.493928, 0.510573, 0.361195, 0.380029, 0.35709, 0.375586, 0.353946, 0.37219, 0.35566, 0.373479, 0.359669, 0.377298, 0.35776, 0.374677, 0.285602, 0.297719, 0.292171, 0.306995, 0.412726, 0.435017, 0.418236, 0.441377, 0.424532, 0.448607, 0.435093, 0.460497, 0.353557, 0.371721, 0.350413, 0.368325, 0.352127, 0.369614, 0.356176, 0.373474, 0.358877, 0.375867, 0.290665, 0.302929, 0.297029, 0.311996, 0.415527, 0.438027, 0.421036, 0.444387, 0.426939, 0.451188, 0.435368, 0.460759, 0.333222, 0.349918, 0.344198, 0.361134, 0.351089, 0.368068, 0.35435, 0.371072, 0.294027, 0.306299, 0.298132, 0.312945, 0.412691, 0.434933, 0.418201, 0.441293, 0.424104, 0.448094, 0.432532, 0.457666, 0.333286, 0.349408, 0.341075, 0.357292, 0.344394, 0.360356, 0.28251, 0.293638, 0.303049, 0.317998, 0.411478, 0.433595, 0.416988, 0.439956, 0.422891, 0.446757, 0.431319, 0.456328, 0.334978, 0.350653, 0.338777, 0.354235, 0.291717, 0.302746, 0.300711, 0.314659, 0.419027, 0.441012, 0.422012, 0.444775, 0.427914, 0.451576, 0.436343, 0.461147, 0.331434, 0.346453, 0.293509, 0.303821, 0.299703, 0.312688, 0.416178, 0.437922, 0.429883, 0.452531, 0.433371, 0.456875, 0.441799, 0.466447, 0.295709, 0.305299, 0.303117, 0.315463, 0.416355, 0.438126, 0.43006, 0.452735, 0.443764, 0.467357, 0.450171, 0.4749, 0.475064, 0.5, 0.564179, 0.596281, 0.571472, 0.604528, 0.576257, 0.610077, 0.583281, 0.618073, 0.63173, 0.670039, 0.636595, 0.675624, 0.643712, 0.683687, 0.662256, 0.704097, 0.595665, 0.630816, 0.60637, 0.642297, 0.619325, 0.656132, 0.603516, 0.639553, 0.616473, 0.653388, 0.618444, 0.655875},
    {0.209779, 0.212551, 0.208446, 0.20965, 0.206754, 0.196849, 0.184357, 0.169983, 0.337119, 0.387829, 0.493184, 0.505259, 0.520346, 0.377412, 0.403097, 0.373542, 0.398992, 0.373807, 0.399132, 0.37074, 0.395862, 0.374862, 0.399967, 0.372916, 0.397578, 0.30926, 0.321955, 0.402486, 0.428872, 0.317069, 0.330217, 0.424275, 0.451328, 0.430107, 0.457739, 0.438025, 0.466412, 0.3729, 0.398387, 0.373165, 0.398528, 0.370099, 0.395257, 0.374258, 0.399402, 0.376822, 0.401852, 0.317623, 0.330892, 0.403167, 0.429687, 0.324797, 0.338434, 0.43582, 0.46357, 0.441652, 0.469982, 0.44957, 0.478654, 0.36564, 0.390618, 0.362574, 0.387348, 0.369405, 0.394316, 0.372494, 0.397327, 0.321008, 0.33428, 0.400504, 0.426849, 0.326068, 0.339534, 0.433158, 0.460733, 0.43899, 0.467144, 0.446908, 0.475817, 0.356743, 0.38098, 0.364122, 0.388529, 0.367266, 0.391597, 0.324457, 0.337636, 0.405113, 0.431616, 0.332258, 0.345854, 0.434954, 0.462489, 0.440786, 0.468901, 0.448704, 0.477574, 0.354409, 0.378208, 0.358308, 0.382067, 0.316302, 0.32846, 0.396365, 0.422308, 0.339316, 0.353151, 0.434729, 0.462211, 0.440561, 0.468623, 0.448478, 0.477296, 0.352855, 0.376265, 0.328438, 0.340715, 0.391464, 0.417095, 0.338351, 0.351196, 0.442145, 0.469641, 0.445614, 0.473637, 0.453531, 0.48231, 0.332701, 0.344443, 0.389364, 0.414875, 0.341533, 0.353695, 0.442095, 0.469528, 0.455422, 0.4836, 0.46136, 0.490269, 0.41632, 0.435821, 0.5, 0.524955, 0.556057, 0.585781, 0.5646, 0.595459, 0.569301, 0.600984, 0.636414, 0.672705, 0.600995, 0.627914, 0.613048, 0.640661, 0.62524, 0.653573, 0.629997, 0.665871, 0.637029, 0.67391, 0.654607, 0.693389, 0.62339, 0.651054, 0.635676, 0.664058, 0.634678, 0.663305},
    {0.17074, 0.173717, 0.169268, 0.170587, 0.167571, 0.156888, 0.143492, 0.120683, 0.302047, 0.351832, 0.467689, 0.480776, 0.496991, 0.348692, 0.366588, 0.344587, 0.362146, 0.344984, 0.362419, 0.341833, 0.359016, 0.346159, 0.363164, 0.34425, 0.360543, 0.269762, 0.280652, 0.374682, 0.393356, 0.27785, 0.291578, 0.397034, 0.418624, 0.402937, 0.425425, 0.410972, 0.434567, 0.343974, 0.361599, 0.34437, 0.361872, 0.34122, 0.358469, 0.345585, 0.362659, 0.348286, 0.365052, 0.278487, 0.289967, 0.37542, 0.394278, 0.285906, 0.300122, 0.408868, 0.431319, 0.414771, 0.43812, 0.422806, 0.447263, 0.336435, 0.353392, 0.333291, 0.34999, 0.340498, 0.357253, 0.34376, 0.360257, 0.28189, 0.293379, 0.372584, 0.391184, 0.287008, 0.301071, 0.406032, 0.428226, 0.411935, 0.435027, 0.41997, 0.444169, 0.327493, 0.343568, 0.335281, 0.351458, 0.3386, 0.354523, 0.285422, 0.296849, 0.377479, 0.396317, 0.293564, 0.307773, 0.408049, 0.430235, 0.413952, 0.437036, 0.421987, 0.446179, 0.325417, 0.340853, 0.329533, 0.344758, 0.276248, 0.286665, 0.368628, 0.386785, 0.300922, 0.315417, 0.407897, 0.430039, 0.4138, 0.43684, 0.421835, 0.445983, 0.324068, 0.338928, 0.28944, 0.300051, 0.363754, 0.381597, 0.299913, 0.313454, 0.415775, 0.437802, 0.419263, 0.442146, 0.427298, 0.451288, 0.294111, 0.304228, 0.361855, 0.379647, 0.30336, 0.316261, 0.415983, 0.438037, 0.429688, 0.452659, 0.435701, 0.459773, 0.384828, 0.403719, 0.475045, 0.5, 0.533939, 0.564142, 0.542684, 0.573973, 0.547256, 0.5793, 0.623238, 0.658731, 0.574892, 0.609279, 0.587299, 0.622529, 0.59985, 0.635947, 0.615456, 0.652896, 0.622575, 0.66096, 0.641119, 0.68137, 0.598745, 0.634667, 0.611391, 0.648179, 0.610074, 0.647084},
    {0.193327, 0.1961, 0.191994, 0.193199, 0.191321, 0.188908, 0.178956, 0.152853, 0.329426, 0.335635, 0.379517, 0.494106, 0.509193, 0.364896, 0.390094, 0.361027, 0.385989, 0.361291, 0.386129, 0.358939, 0.383497, 0.36115, 0.385889, 0.359506, 0.383811, 0.29435, 0.305888, 0.390824, 0.416902, 0.381414, 0.406956, 0.305171, 0.317421, 0.418137, 0.445325, 0.426055, 0.453997, 0.360385, 0.385385, 0.36065, 0.385525, 0.358298, 0.382893, 0.360546, 0.385324, 0.363412, 0.388085, 0.302753, 0.314865, 0.391504, 0.417716, 0.391211, 0.417401, 0.312899, 0.325638, 0.429683, 0.457567, 0.4376, 0.46624, 0.353125, 0.377615, 0.35339, 0.37775, 0.355693, 0.380238, 0.359084, 0.38356, 0.306179, 0.318295, 0.388842, 0.414879, 0.388549, 0.414564, 0.31417, 0.326738, 0.42702, 0.454729, 0.434938, 0.463402, 0.347559, 0.371381, 0.35041, 0.374451, 0.353856, 0.37783, 0.309668, 0.321692, 0.393451, 0.419646, 0.390345, 0.41632, 0.32036, 0.333058, 0.428817, 0.456486, 0.436734, 0.465159, 0.343176, 0.366674, 0.347075, 0.370533, 0.315324, 0.327382, 0.385132, 0.410774, 0.393239, 0.419252, 0.325957, 0.338653, 0.429003, 0.456535, 0.43692, 0.465208, 0.340388, 0.363437, 0.310894, 0.322214, 0.37939, 0.404671, 0.387497, 0.413149, 0.337276, 0.350525, 0.431842, 0.459525, 0.43976, 0.468198, 0.32569, 0.337347, 0.37737, 0.402531, 0.385477, 0.411009, 0.340457, 0.353024, 0.441651, 0.469488, 0.447589, 0.476157, 0.409111, 0.428528, 0.443943, 0.466061, 0.5, 0.524991, 0.534183, 0.562652, 0.544286, 0.574052, 0.544163, 0.569175, 0.63752, 0.674329, 0.601497, 0.628846, 0.61369, 0.641758, 0.623134, 0.658709, 0.588385, 0.614976, 0.600577, 0.627888, 0.634739, 0.671554, 0.652322, 0.691033, 0.629691, 0.65819},
    {0.153175, 0.156152, 0.151703, 0.153022, 0.150999, 0.148502, 0.137756, 0.102111, 0.293923, 0.300389, 0.342582, 0.468651, 0.484867, 0.33551, 0.352586, 0.331405, 0.348143, 0.331801, 0.348416, 0.329407, 0.345671, 0.331653, 0.348139, 0.330061, 0.345847, 0.253567, 0.263346, 0.36229, 0.380523, 0.352688, 0.370263, 0.26486, 0.277701, 0.390317, 0.412002, 0.398352, 0.421144, 0.330791, 0.347596, 0.331188, 0.347869, 0.328793, 0.345124, 0.331079, 0.347634, 0.334097, 0.350356, 0.262333, 0.272702, 0.363028, 0.381445, 0.362725, 0.381096, 0.272916, 0.286246, 0.402151, 0.424698, 0.410186, 0.43384, 0.323252, 0.33939, 0.323649, 0.339657, 0.325992, 0.342228, 0.329571, 0.345561, 0.265777, 0.276156, 0.360192, 0.378351, 0.359889, 0.378002, 0.274019, 0.287194, 0.399315, 0.421604, 0.40735, 0.430746, 0.317851, 0.333236, 0.320775, 0.336433, 0.324411, 0.339827, 0.269351, 0.279668, 0.365086, 0.383484, 0.361906, 0.380012, 0.280575, 0.293896, 0.401333, 0.423613, 0.409368, 0.432756, 0.313477, 0.328491, 0.317593, 0.332403, 0.275226, 0.285615, 0.356689, 0.37443, 0.364967, 0.383132, 0.286407, 0.299753, 0.401625, 0.423751, 0.409661, 0.432894, 0.310908, 0.325247, 0.270037, 0.279709, 0.351003, 0.368334, 0.359281, 0.377036, 0.298317, 0.312273, 0.404697, 0.427055, 0.412732, 0.436197, 0.286107, 0.296197, 0.349186, 0.366473, 0.357464, 0.375175, 0.301764, 0.315088, 0.415128, 0.437574, 0.421142, 0.444688, 0.376616, 0.395472, 0.414219, 0.435858, 0.475009, 0.5, 0.509689, 0.538514, 0.520137, 0.550214, 0.516154, 0.546188, 0.623944, 0.659935, 0.575014, 0.609811, 0.587564, 0.62323, 0.608256, 0.643017, 0.561484, 0.595346, 0.574035, 0.608764, 0.619999, 0.658331, 0.638546, 0.678741, 0.604695, 0.64149},
    {0.176876, 0.179648, 0.175543, 0.176747, 0.17487, 0.172954, 0.171016, 0.135684, 0.321732, 0.327942, 0.337047, 0.371766, 0.49808, 0.352322, 0.377028, 0.348452, 0.372923, 0.348717, 0.373063, 0.346365, 0.370431, 0.348801, 0.37294, 0.345735, 0.36967, 0.279382, 0.289757, 0.379103, 0.404868, 0.369693, 0.394922, 0.372843, 0.398415, 0.293273, 0.30465, 0.414085, 0.441583, 0.347811, 0.372319, 0.348076, 0.372459, 0.345723, 0.369827, 0.348197, 0.372375, 0.349641, 0.373944, 0.287825, 0.298776, 0.379783, 0.405683, 0.37949, 0.405368, 0.38264, 0.40886, 0.301001, 0.312866, 0.425571, 0.453762, 0.340551, 0.36455, 0.340815, 0.364684, 0.343832, 0.36781, 0.345313, 0.369419, 0.291292, 0.302247, 0.377121, 0.402845, 0.376828, 0.40253, 0.379978, 0.406023, 0.302272, 0.313967, 0.422909, 0.450924, 0.334984, 0.358316, 0.338549, 0.362023, 0.340085, 0.363688, 0.294821, 0.305686, 0.381729, 0.407613, 0.378624, 0.404287, 0.381774, 0.407779, 0.308462, 0.320287, 0.424705, 0.452681, 0.331316, 0.354246, 0.333304, 0.356392, 0.300518, 0.311417, 0.37341, 0.398741, 0.381518, 0.407219, 0.38196, 0.407829, 0.314059, 0.325882, 0.424891, 0.45273, 0.328712, 0.351446, 0.309899, 0.321115, 0.367714, 0.39268, 0.375821, 0.401158, 0.387431, 0.413507, 0.323445, 0.335532, 0.427654, 0.455526, 0.308129, 0.318825, 0.365237, 0.390043, 0.373344, 0.398521, 0.384954, 0.41087, 0.339382, 0.352377, 0.433759, 0.461983, 0.404221, 0.423743, 0.4354, 0.457316, 0.465817, 0.490311, 0.5, 0.525053, 0.534821, 0.563937, 0.530835, 0.55547, 0.544578, 0.569998, 0.638595, 0.67595, 0.60208, 0.629885, 0.533572, 0.558294, 0.62427, 0.660389, 0.589027, 0.616074, 0.62552, 0.661831, 0.590582, 0.617808, 0.65108, 0.689787},
    {0.135598, 0.138575, 0.134125, 0.135445, 0.133422, 0.131349, 0.129358, 0.083488, 0.285786, 0.292252, 0.301879, 0.333887, 0.47276, 0.32225, 0.338507, 0.318145, 0.334065, 0.318541, 0.334338, 0.316147, 0.331593, 0.318628, 0.334148, 0.315477, 0.330747, 0.237297, 0.245966, 0.34982, 0.367615, 0.340218, 0.357355, 0.343451, 0.361021, 0.251846, 0.263825, 0.385714, 0.407703, 0.317531, 0.333518, 0.317928, 0.333791, 0.315533, 0.331046, 0.318054, 0.333644, 0.319513, 0.335255, 0.246103, 0.255363, 0.350558, 0.368537, 0.350255, 0.368187, 0.353489, 0.371853, 0.259902, 0.27236900000000003, 0.397489, 0.420336, 0.309992, 0.325311, 0.310389, 0.325579, 0.313488, 0.328807, 0.314987, 0.330461, 0.249588, 0.258859, 0.347722, 0.365443, 0.347419, 0.365094, 0.350653, 0.36876, 0.261005, 0.273318, 0.394653, 0.417242, 0.304591, 0.319157, 0.308271, 0.323012, 0.309827, 0.324727, 0.253203, 0.262412, 0.352616, 0.370575, 0.349436, 0.367103, 0.35267, 0.370769, 0.26756, 0.28002, 0.39667, 0.419251, 0.300973, 0.31507, 0.303009, 0.317302, 0.259119, 0.268401, 0.344219, 0.361521, 0.352497, 0.370224, 0.352963, 0.370907, 0.273393, 0.285877, 0.396963, 0.41939, 0.298479, 0.312382, 0.268979, 0.278627, 0.338574, 0.355475, 0.346852, 0.364177, 0.358726, 0.376958, 0.283258, 0.296041, 0.399959, 0.422458, 0.26666, 0.275823, 0.336357, 0.353134, 0.344635, 0.361836, 0.356509, 0.374617, 0.300143, 0.313907, 0.406499, 0.429516, 0.370896, 0.389923, 0.404541, 0.426027, 0.437348, 0.461486, 0.474947, 0.5, 0.509821, 0.539262, 0.502082, 0.531566, 0.516165, 0.546619, 0.624591, 0.661108, 0.575197, 0.610431, 0.504804, 0.534403, 0.608968, 0.644253, 0.561731, 0.596028, 0.6102, 0.645675, 0.563237, 0.597734, 0.637051, 0.67725},
    {0.160424, 0.163197, 0.159092, 0.160296, 0.158419, 0.156503, 0.155062, 0.118515, 0.314039, 0.320249, 0.329353, 0.338913, 0.364712, 0.339689, 0.363899, 0.335819, 0.359794, 0.336084, 0.359934, 0.333731, 0.357302, 0.336168, 0.359811, 0.333327, 0.356658, 0.264357, 0.273563, 0.36702, 0.392461, 0.357971, 0.382889, 0.361121, 0.386381, 0.364655, 0.390304, 0.281375, 0.291911, 0.335178, 0.35919, 0.335442, 0.35933, 0.33309, 0.356698, 0.335564, 0.359246, 0.337233, 0.360932, 0.27284, 0.282623, 0.368003, 0.393586, 0.36771, 0.393271, 0.37086, 0.396764, 0.374394, 0.400686, 0.289103, 0.300128, 0.327917, 0.351421, 0.328182, 0.351555, 0.331199, 0.354681, 0.332905, 0.356406, 0.276347, 0.286136, 0.365341, 0.390749, 0.365048, 0.390434, 0.368198, 0.393926, 0.371732, 0.397849, 0.290374, 0.301229, 0.322351, 0.345187, 0.325916, 0.348894, 0.327677, 0.350676, 0.279916, 0.289616, 0.369949, 0.395516, 0.366844, 0.392191, 0.369994, 0.395683, 0.373528, 0.399606, 0.296564, 0.307548, 0.318682, 0.341118, 0.320896, 0.34338, 0.285653, 0.295389, 0.36163, 0.386644, 0.369737, 0.395122, 0.37018, 0.395732, 0.373714, 0.399655, 0.302161, 0.313143, 0.316304, 0.338434, 0.295074, 0.305128, 0.355933, 0.380584, 0.364041, 0.389062, 0.37565, 0.40141, 0.376477, 0.40245, 0.311547, 0.322793, 0.307116, 0.317703, 0.353502, 0.37799, 0.361609, 0.386468, 0.373219, 0.398816, 0.384828, 0.411183, 0.325551, 0.337417, 0.397277, 0.416719, 0.430699, 0.452744, 0.455714, 0.479863, 0.465179, 0.490179, 0.5, 0.525147, 0.517507, 0.541765, 0.53125, 0.556293, 0.54508, 0.57093, 0.63967, 0.677603, 0.520245, 0.544589, 0.534077, 0.559226, 0.625345, 0.662042, 0.535688, 0.56102, 0.626657, 0.663544, 0.630943, 0.668286},
    {0.118004, 0.120981, 0.116531, 0.117851, 0.115828, 0.113755, 0.112188, 0.064838, 0.277633, 0.284099, 0.293726, 0.303832, 0.325892, 0.308906, 0.32435, 0.304801, 0.319907, 0.305197, 0.320181, 0.302803, 0.317435, 0.305284, 0.319991, 0.302368, 0.316677, 0.220936, 0.228499, 0.336955, 0.354304, 0.327723, 0.34443, 0.330957, 0.348096, 0.334584, 0.352209, 0.238799, 0.249957, 0.304187, 0.31936, 0.304584, 0.319634, 0.302189, 0.316888, 0.30471, 0.319486, 0.306404, 0.321185, 0.229784, 0.237939, 0.338004, 0.355548, 0.337701, 0.355199, 0.340935, 0.358865, 0.344562, 0.362979, 0.246855, 0.258501, 0.296648, 0.311154, 0.297045, 0.311421, 0.300144, 0.314649, 0.301878, 0.316391, 0.23331, 0.241476, 0.335168, 0.352455, 0.334866, 0.352106, 0.338099, 0.355772, 0.341726, 0.359885, 0.247958, 0.25945, 0.291247, 0.305, 0.294927, 0.308855, 0.296718, 0.310657, 0.236965, 0.245071, 0.340062, 0.357587, 0.336883, 0.354115, 0.340116, 0.357781, 0.343743, 0.361894, 0.254513, 0.266152, 0.287629, 0.300913, 0.2899, 0.303232, 0.242922, 0.251102, 0.331665, 0.348533, 0.339943, 0.357236, 0.340409, 0.357919, 0.344036, 0.362033, 0.260346, 0.272008, 0.28537, 0.298312, 0.252823, 0.261369, 0.32602, 0.342487, 0.334298, 0.351189, 0.346172, 0.36397, 0.347032, 0.365101, 0.270211, 0.282173, 0.265562, 0.274696, 0.323844, 0.340195, 0.332122, 0.348898, 0.343996, 0.361678, 0.35587, 0.374477, 0.285051, 0.297683, 0.362912, 0.381927, 0.399016, 0.4207, 0.425948, 0.449786, 0.436063, 0.460738, 0.474853, 0.5, 0.487985, 0.516928, 0.502068, 0.531981, 0.516243, 0.547148, 0.625205, 0.662289, 0.490707, 0.519765, 0.504885, 0.534931, 0.609582, 0.645434, 0.506451, 0.536699, 0.61088, 0.64692, 0.615421, 0.651923},
    {0.224988, 0.224934, 0.224879, 0.220892, 0.217996, 0.211409, 0.199439, 0.187133, 0.18587, 0.39745, 0.496625, 0.508051, 0.520214, 0.389054, 0.415324, 0.388238, 0.41444, 0.384368, 0.410335, 0.381302, 0.407065, 0.38804, 0.413942, 0.386583, 0.412076, 0.385456, 0.410578, 0.323113, 0.337064, 0.330174, 0.344458, 0.432509, 0.459666, 0.438341, 0.466077, 0.446258, 0.47475, 0.384752, 0.410679, 0.380882, 0.406574, 0.377816, 0.403304, 0.384592, 0.410221, 0.387644, 0.413192, 0.385698, 0.410807, 0.328061, 0.342146, 0.334881, 0.349291, 0.441959, 0.469753, 0.447407, 0.475753, 0.453239, 0.482189, 0.377492, 0.40291, 0.374425, 0.39964, 0.381256, 0.406614, 0.384346, 0.409625, 0.386909, 0.412078, 0.332898, 0.347117, 0.339476, 0.354013, 0.44235, 0.470136, 0.447798, 0.476136, 0.453631, 0.482572, 0.358152, 0.382658, 0.374357, 0.399364, 0.380118, 0.405199, 0.383208, 0.408213, 0.337496, 0.351792, 0.341959, 0.356401, 0.440314, 0.467959, 0.445762, 0.473959, 0.451594, 0.480395, 0.364666, 0.389068, 0.371183, 0.395693, 0.374422, 0.398865, 0.329483, 0.342763, 0.349016, 0.363697, 0.440088, 0.467681, 0.445537, 0.473681, 0.451369, 0.480117, 0.367872, 0.392081, 0.371754, 0.395935, 0.342196, 0.355634, 0.351012, 0.364978, 0.450226, 0.478011, 0.453207, 0.481467, 0.459039, 0.487904, 0.367208, 0.391158, 0.348004, 0.361021, 0.354439, 0.367758, 0.450464, 0.47819, 0.463792, 0.492262, 0.467261, 0.496283, 0.355529, 0.36827, 0.363586, 0.376762, 0.455837, 0.483846, 0.469165, 0.497918, 0.482493, 0.512015, 0.5, 0.524956, 0.554983, 0.584231, 0.563446, 0.593827, 0.568038, 0.59924, 0.615288, 0.649778, 0.620524, 0.655824, 0.62757, 0.663903, 0.615618, 0.642385, 0.626077, 0.65351, 0.623222, 0.650773},
    {0.186922, 0.186864, 0.186796, 0.182473, 0.179468, 0.172368, 0.159542, 0.146354, 0.137789, 0.362388, 0.471203, 0.483609, 0.49677, 0.360829, 0.379655, 0.359991, 0.378731, 0.355886, 0.374288, 0.352741, 0.370891, 0.359852, 0.378052, 0.358465, 0.376, 0.357397, 0.37431, 0.284729, 0.296855, 0.292039, 0.306876, 0.405768, 0.427522, 0.411671, 0.434323, 0.419706, 0.443459, 0.356464, 0.374872, 0.352359, 0.370429, 0.349215, 0.367032, 0.356365, 0.374235, 0.359588, 0.377197, 0.357679, 0.374579, 0.28984, 0.302112, 0.296897, 0.311886, 0.415446, 0.437988, 0.420955, 0.444361, 0.426858, 0.451178, 0.348925, 0.366665, 0.345781, 0.363268, 0.352989, 0.370532, 0.35625, 0.373536, 0.358951, 0.375931, 0.294833, 0.30725, 0.301644, 0.316774, 0.415877, 0.438413, 0.421386, 0.444785, 0.427289, 0.451603, 0.328671, 0.344945, 0.345722, 0.362762, 0.351826, 0.368839, 0.355087, 0.371846, 0.299526, 0.312031, 0.304036, 0.319091, 0.413703, 0.436029, 0.419213, 0.442402, 0.425116, 0.449219, 0.335877, 0.352183, 0.342777, 0.359101, 0.346198, 0.362278, 0.290498, 0.302007, 0.311402, 0.32674, 0.413557, 0.435839, 0.419067, 0.442212, 0.42497, 0.449029, 0.339601, 0.355633, 0.343703, 0.359546, 0.304298, 0.316033, 0.313617, 0.328277, 0.424329, 0.446756, 0.427314, 0.45053, 0.433217, 0.457348, 0.339264, 0.354906, 0.310628, 0.321989, 0.317343, 0.331399, 0.424848, 0.447311, 0.438553, 0.461932, 0.442041, 0.466293, 0.318821, 0.329961, 0.327295, 0.341269, 0.430825, 0.453812, 0.44453, 0.468434, 0.458235, 0.483072, 0.475044, 0.5, 0.533223, 0.562969, 0.541885, 0.572716, 0.546343, 0.57792, 0.600306, 0.63629, 0.605433, 0.642159, 0.612572, 0.650259, 0.590416, 0.625067, 0.601185, 0.636627, 0.597982, 0.633499},
    {0.208536, 0.208482, 0.208427, 0.20444, 0.205881, 0.203468, 0.194037, 0.182143, 0.168817, 0.335671, 0.38886, 0.496857, 0.50902, 0.376538, 0.402321, 0.375721, 0.401437, 0.371851, 0.397332, 0.372116, 0.397472, 0.374327, 0.399864, 0.373171, 0.398308, 0.372045, 0.39681, 0.308202, 0.320995, 0.389646, 0.415292, 0.318275, 0.331661, 0.42637, 0.453661, 0.434287, 0.462334, 0.372236, 0.397675, 0.368366, 0.393571, 0.368631, 0.393711, 0.370879, 0.396142, 0.374233, 0.399424, 0.372287, 0.397039, 0.31319, 0.326119, 0.399096, 0.425379, 0.322981, 0.336494, 0.435436, 0.463337, 0.441268, 0.469773, 0.364975, 0.389906, 0.36524, 0.390047, 0.367543, 0.392535, 0.370934, 0.395857, 0.373498, 0.39831, 0.318067, 0.331131, 0.399487, 0.425763, 0.327576, 0.341216, 0.435827, 0.46372, 0.441659, 0.470156, 0.357793, 0.382216, 0.360644, 0.385285, 0.366707, 0.391431, 0.369796, 0.394445, 0.322705, 0.335847, 0.397451, 0.423585, 0.330059, 0.343604, 0.433791, 0.461543, 0.439623, 0.467979, 0.35582, 0.379982, 0.362336, 0.386607, 0.365575, 0.389779, 0.328503, 0.341692, 0.403067, 0.429417, 0.338558, 0.35237, 0.436594, 0.464364, 0.442426, 0.470801, 0.355403, 0.379251, 0.359588, 0.383417, 0.32465, 0.337132, 0.397384, 0.423377, 0.349877, 0.364242, 0.439434, 0.467354, 0.445266, 0.473791, 0.356869, 0.380517, 0.340991, 0.353924, 0.395653, 0.421529, 0.353305, 0.367022, 0.45002, 0.478149, 0.453489, 0.48217, 0.350538, 0.363405, 0.399005, 0.425108, 0.36248, 0.376056, 0.455422, 0.483835, 0.46875, 0.497932, 0.445017, 0.466777, 0.5, 0.524991, 0.533067, 0.56106, 0.543101, 0.572389, 0.60608, 0.640053, 0.576563, 0.602058, 0.588676, 0.614888, 0.615402, 0.65038, 0.622453, 0.658459, 0.615554, 0.642803},
    {0.169356, 0.169299, 0.169231, 0.164907, 0.166479, 0.163982, 0.153806, 0.141047, 0.1193, 0.300366, 0.352844, 0.471442, 0.484604, 0.347646, 0.365652, 0.346808, 0.364728, 0.342703, 0.360285, 0.3431, 0.360559, 0.345346, 0.363027, 0.344275, 0.361305, 0.343208, 0.359614, 0.268534, 0.279549, 0.361422, 0.379161, 0.279049, 0.293, 0.399052, 0.4209, 0.407087, 0.430036, 0.343282, 0.360869, 0.339177, 0.356426, 0.339573, 0.3567, 0.341859, 0.35921, 0.345398, 0.362501, 0.343489, 0.359883, 0.273687, 0.284847, 0.371099, 0.389628, 0.283907, 0.298009, 0.408335, 0.430938, 0.414238, 0.437756, 0.335743, 0.352662, 0.336139, 0.352936, 0.338482, 0.355507, 0.342061, 0.35884, 0.344762, 0.361235, 0.278721, 0.290027, 0.371531, 0.390052, 0.288655, 0.302898, 0.408767, 0.431362, 0.41467, 0.43818, 0.328285, 0.344539, 0.331215, 0.347737, 0.337636, 0.354143, 0.340898, 0.35715, 0.283454, 0.294849, 0.369357, 0.387668, 0.291046, 0.305215, 0.406593, 0.428979, 0.412496, 0.435796, 0.326484, 0.342463, 0.333385, 0.349387, 0.336805, 0.352565, 0.289476, 0.300957, 0.375318, 0.393949, 0.300051, 0.314513, 0.409677, 0.432136, 0.41558, 0.438954, 0.326441, 0.341952, 0.33086, 0.346189, 0.284895, 0.295691, 0.369692, 0.387916, 0.311961, 0.327033, 0.412749, 0.435439, 0.418652, 0.442257, 0.3283, 0.343501, 0.302624, 0.313958, 0.368185, 0.386374, 0.315688, 0.330163, 0.423994, 0.446847, 0.427481, 0.451208, 0.313049, 0.324376, 0.372086, 0.390721, 0.325671, 0.340065, 0.430002, 0.453381, 0.443707, 0.468019, 0.415769, 0.437031, 0.475009, 0.5, 0.508931, 0.5373, 0.519306, 0.548918, 0.59055, 0.623626, 0.548891, 0.581194, 0.561361, 0.594523, 0.599771, 0.63618, 0.606913, 0.64428, 0.589749, 0.624803},
    {0.192085, 0.19203, 0.191975, 0.187988, 0.189429, 0.188035, 0.186097, 0.176742, 0.151687, 0.327978, 0.336807, 0.380715, 0.497867, 0.363963, 0.389255, 0.363147, 0.388371, 0.359277, 0.384266, 0.359542, 0.384406, 0.362467, 0.387436, 0.3594, 0.384167, 0.358576, 0.38298, 0.293234, 0.304864, 0.377925, 0.403259, 0.381075, 0.406751, 0.306377, 0.318889, 0.422317, 0.449919, 0.359661, 0.38461, 0.355792, 0.380505, 0.356056, 0.380645, 0.359019, 0.383714, 0.360462, 0.385283, 0.358818, 0.383209, 0.298262, 0.310029, 0.387375, 0.413346, 0.390525, 0.416838, 0.311083, 0.323723, 0.429239, 0.457295, 0.352401, 0.37684, 0.352666, 0.376981, 0.355682, 0.380107, 0.357163, 0.381716, 0.360029, 0.38448, 0.30318, 0.315083, 0.387766, 0.413729, 0.390916, 0.417222, 0.315678, 0.328444, 0.42963, 0.457678, 0.345218, 0.36915, 0.3514, 0.375624, 0.352936, 0.37729, 0.356328, 0.380615, 0.307858, 0.319841, 0.38573, 0.411552, 0.38888, 0.415044, 0.318161, 0.330832, 0.427594, 0.455501, 0.346576, 0.370321, 0.348565, 0.372466, 0.352106, 0.375949, 0.313697, 0.325727, 0.391345, 0.417384, 0.391683, 0.417866, 0.32666, 0.339599, 0.430397, 0.458323, 0.344111, 0.367654, 0.348296, 0.371819, 0.323655, 0.336033, 0.386092, 0.41178, 0.397642, 0.424066, 0.336519, 0.349769, 0.433649, 0.46164, 0.344343, 0.367625, 0.32343, 0.335401, 0.38352, 0.409042, 0.39507, 0.421327, 0.35223, 0.366375, 0.439658, 0.467995, 0.343509, 0.356288, 0.386952, 0.412701, 0.398503, 0.424986, 0.361405, 0.375409, 0.45492, 0.483757, 0.436554, 0.458115, 0.466933, 0.491069, 0.5, 0.525052, 0.533746, 0.562388, 0.519731, 0.5433, 0.607187, 0.641702, 0.577125, 0.603074, 0.608191, 0.642864, 0.578392, 0.604498, 0.619953, 0.655889},
    {0.151779, 0.151721, 0.151653, 0.14733, 0.148902, 0.147399, 0.145408, 0.135298, 0.10072, 0.292229, 0.301562, 0.343728, 0.472455, 0.334386, 0.351574, 0.333548, 0.35065, 0.329443, 0.346207, 0.32984, 0.346481, 0.332842, 0.349606, 0.329691, 0.346204, 0.328941, 0.344843, 0.252264, 0.262168, 0.348952, 0.366253, 0.352186, 0.369919, 0.266035, 0.279123, 0.394449, 0.416595, 0.330022, 0.346791, 0.325917, 0.342348, 0.326313, 0.342621, 0.329355, 0.345789, 0.330814, 0.347401, 0.329223, 0.345112, 0.257457, 0.267509, 0.35863, 0.376719, 0.361863, 0.380385, 0.270893, 0.284133, 0.401541, 0.424251, 0.322483, 0.338584, 0.322879, 0.338857, 0.325978, 0.342086, 0.327477, 0.343739, 0.330495, 0.346464, 0.262532, 0.27273, 0.359061, 0.377144, 0.362294, 0.38081, 0.275641, 0.289021, 0.401972, 0.424676, 0.315025, 0.330461, 0.321496, 0.337329, 0.323052, 0.339043, 0.326631, 0.342379, 0.267306, 0.277594, 0.356887, 0.37476, 0.360121, 0.378426, 0.278032, 0.291338, 0.399799, 0.422292, 0.316765, 0.332055, 0.318801, 0.334287, 0.322538, 0.337793, 0.273369, 0.283744, 0.362848, 0.38104, 0.363205, 0.381583, 0.287037, 0.300636, 0.402883, 0.425449, 0.314423, 0.329516, 0.318843, 0.333759, 0.283837, 0.294609, 0.357675, 0.375486, 0.369489, 0.388203, 0.297421, 0.311369, 0.4064, 0.429087, 0.315062, 0.329745, 0.283186, 0.293584, 0.355356, 0.373035, 0.367171, 0.385752, 0.314067, 0.328982, 0.412838, 0.436036, 0.30501, 0.316313, 0.359339, 0.377471, 0.371154, 0.390189, 0.32405, 0.338892, 0.42907, 0.452852, 0.406173, 0.427284, 0.43894, 0.4627, 0.474948, 0.5, 0.509103, 0.538081, 0.490133, 0.518097, 0.591232, 0.62483, 0.549057, 0.581788, 0.592183, 0.625936, 0.550271, 0.583174, 0.604084, 0.64139},
    {0.175633, 0.175579, 0.175524, 0.171537, 0.172978, 0.171584, 0.170143, 0.168802, 0.134518, 0.320285, 0.329114, 0.338357, 0.373109, 0.35133, 0.376126, 0.350513, 0.375242, 0.346644, 0.371137, 0.346908, 0.371277, 0.349833, 0.374307, 0.346992, 0.371155, 0.344746, 0.368776, 0.278208, 0.28867, 0.366204, 0.391225, 0.369354, 0.394718, 0.372888, 0.39864, 0.294479, 0.306151, 0.347028, 0.371481, 0.343158, 0.367376, 0.343423, 0.367516, 0.346385, 0.370585, 0.348054, 0.372271, 0.344988, 0.369005, 0.283277, 0.293877, 0.375595, 0.401249, 0.378745, 0.404742, 0.381895, 0.408253, 0.299185, 0.310985, 0.339767, 0.363711, 0.340032, 0.363852, 0.343049, 0.366978, 0.344755, 0.368703, 0.346199, 0.370275, 0.288235, 0.298972, 0.375986, 0.401633, 0.379136, 0.405125, 0.382286, 0.408636, 0.30378, 0.315706, 0.332585, 0.356021, 0.338767, 0.362495, 0.341016, 0.364799, 0.342497, 0.36641, 0.292954, 0.303771, 0.37395, 0.399455, 0.3771, 0.402948, 0.38025, 0.406458, 0.306263, 0.318094, 0.333943, 0.357192, 0.336645, 0.359975, 0.338276, 0.361745, 0.298832, 0.309699, 0.379565, 0.405287, 0.379903, 0.405769, 0.383053, 0.40928, 0.314762, 0.326861, 0.332192, 0.355163, 0.334466, 0.357615, 0.308831, 0.320046, 0.374311, 0.399683, 0.385862, 0.411969, 0.386305, 0.412597, 0.324621, 0.337031, 0.332608, 0.355572, 0.322417, 0.33428, 0.371785, 0.396988, 0.383335, 0.409274, 0.394945, 0.421641, 0.338398, 0.351415, 0.32593, 0.337744, 0.37476, 0.40015, 0.38631, 0.412436, 0.39792, 0.424803, 0.36033, 0.374795, 0.431962, 0.453657, 0.456899, 0.480694, 0.466254, 0.49089700000000003, 0.5, 0.525146, 0.506403, 0.529595, 0.520206, 0.5442, 0.608263, 0.643356, 0.521528, 0.545684, 0.609329, 0.644577, 0.610654, 0.646095},
    {0.134185, 0.134127, 0.134059, 0.129736, 0.131308, 0.129805, 0.128238, 0.126884, 0.082086, 0.284076, 0.293409, 0.303178, 0.335128, 0.321042, 0.337417, 0.320204, 0.336492, 0.316099, 0.332049, 0.316496, 0.332323, 0.319498, 0.335448, 0.316582, 0.332134, 0.314273, 0.329663, 0.235912, 0.24471, 0.336457, 0.353328, 0.339691, 0.356994, 0.343318, 0.361107, 0.252988, 0.265247, 0.316678, 0.332633, 0.312573, 0.32819, 0.312969, 0.328464, 0.316011, 0.331631, 0.317705, 0.333331, 0.314555, 0.329932, 0.241146, 0.250092, 0.346076, 0.363731, 0.349309, 0.367397, 0.352543, 0.371082, 0.257846, 0.270256, 0.309139, 0.324426, 0.309536, 0.3247, 0.312634, 0.327928, 0.314368, 0.329669, 0.315828, 0.331284, 0.246261, 0.255356, 0.346507, 0.364156, 0.349741, 0.367822, 0.352974, 0.371506, 0.262594, 0.275145, 0.301681, 0.316303, 0.308152, 0.323171, 0.310465, 0.325542, 0.311963, 0.327199, 0.251076, 0.260261, 0.344333, 0.361772, 0.347567, 0.365438, 0.350801, 0.369123, 0.264985, 0.277462, 0.303421, 0.317897, 0.306213, 0.320786, 0.307871, 0.322613, 0.25718, 0.266452, 0.350294, 0.368052, 0.350651, 0.368595, 0.353885, 0.37228, 0.273989, 0.28676, 0.301835, 0.316015, 0.304175, 0.318579, 0.267689, 0.277359, 0.345121, 0.362498, 0.356935, 0.375215, 0.357402, 0.375917, 0.284374, 0.297493, 0.302549, 0.3168, 0.282087, 0.292466, 0.342843, 0.360097, 0.354658, 0.372814, 0.366532, 0.385613, 0.298975, 0.31275, 0.285523, 0.295903, 0.346427, 0.364053, 0.358242, 0.37677, 0.370115, 0.389569, 0.322397, 0.337711, 0.40076, 0.42208, 0.427611, 0.451082, 0.437612, 0.461919, 0.474854, 0.5, 0.476036, 0.503459, 0.490184, 0.518593, 0.591846, 0.626003, 0.491458, 0.520043, 0.592863, 0.627173, 0.594169, 0.628677},
    {0.210936, 0.225171, 0.225116, 0.22518, 0.221429, 0.219016, 0.212904, 0.201531, 0.189946, 0.189354, 0.399984, 0.501985, 0.513461, 0.386618, 0.412419, 0.385801, 0.411535, 0.384985, 0.410651, 0.381115, 0.406546, 0.383326, 0.408937, 0.384788, 0.410154, 0.38415, 0.409178, 0.385991, 0.410723, 0.307955, 0.320157, 0.315742, 0.328313, 0.434745, 0.462147, 0.440193, 0.468171, 0.383739, 0.409606, 0.382923, 0.408722, 0.379053, 0.404617, 0.38179, 0.407569, 0.387761, 0.413624, 0.386304, 0.41176, 0.385178, 0.410268, 0.327039, 0.341112, 0.334543, 0.348978, 0.44421, 0.472219, 0.449659, 0.478243, 0.379532, 0.405057, 0.375663, 0.400952, 0.378454, 0.403962, 0.384463, 0.410056, 0.387515, 0.413031, 0.385569, 0.410651, 0.331916, 0.346124, 0.339138, 0.3537, 0.444601, 0.472602, 0.45005, 0.478626, 0.37235, 0.397367, 0.375689, 0.400958, 0.381753, 0.407109, 0.384842, 0.410123, 0.387406, 0.412582, 0.338005, 0.352422, 0.344945, 0.359708, 0.445619, 0.473645, 0.451067, 0.47967, 0.360423, 0.385041, 0.375765, 0.400824, 0.381622, 0.406762, 0.384711, 0.409782, 0.344952, 0.359586, 0.349737, 0.364543, 0.444589, 0.472533, 0.450038, 0.478557, 0.368854, 0.393491, 0.375656, 0.400423, 0.378991, 0.403702, 0.341241, 0.355173, 0.361056, 0.376415, 0.447429, 0.475522, 0.452878, 0.481547, 0.374985, 0.399612, 0.379398, 0.404036, 0.358386, 0.37282, 0.367444, 0.382429, 0.460737, 0.489218, 0.463717, 0.492699, 0.379624, 0.404335, 0.370003, 0.384544, 0.376866, 0.391744, 0.466428, 0.495196, 0.479755, 0.509293, 0.384712, 0.399694, 0.39392, 0.40945, 0.480269, 0.509867, 0.493597, 0.523964, 0.5, 0.524994, 0.531808, 0.559188, 0.541773, 0.570446, 0.593049, 0.625717, 0.598041, 0.631504, 0.599585, 0.625268},
    {0.171859, 0.187094, 0.187026, 0.187084, 0.183014, 0.180529, 0.173935, 0.161745, 0.149326, 0.141456, 0.36506, 0.476778, 0.489217, 0.358418, 0.376516, 0.35758, 0.375592, 0.356742, 0.374667, 0.352637, 0.370224, 0.354889, 0.372699, 0.356603, 0.37399, 0.356057, 0.372869, 0.358027, 0.374287, 0.268768, 0.279155, 0.276808, 0.289937, 0.407991, 0.430059, 0.4135, 0.436448, 0.355399, 0.37374, 0.354561, 0.372816, 0.350456, 0.368373, 0.353269, 0.371459, 0.359593, 0.377763, 0.358205, 0.375715, 0.357138, 0.37403, 0.28878, 0.301062, 0.296534, 0.311552, 0.417752, 0.440551, 0.423261, 0.446939, 0.351127, 0.369052, 0.347022, 0.364609, 0.349892, 0.367756, 0.356256, 0.374102, 0.359478, 0.377067, 0.357569, 0.374455, 0.293814, 0.306242, 0.301282, 0.316441, 0.418183, 0.440975, 0.423692, 0.447364, 0.343669, 0.360928, 0.347121, 0.364702, 0.353542, 0.371109, 0.356803, 0.374116, 0.359504, 0.376517, 0.300137, 0.31279, 0.307319, 0.322697, 0.419276, 0.44211, 0.424786, 0.448498, 0.331077, 0.347526, 0.34724, 0.364377, 0.353445, 0.370567, 0.356707, 0.37358, 0.307318, 0.320208, 0.312159, 0.32761, 0.418169, 0.440874, 0.423679, 0.447263, 0.340315, 0.356969, 0.34752, 0.364219, 0.351041, 0.367511, 0.302884, 0.315103, 0.324077, 0.340136, 0.421247, 0.444183, 0.426757, 0.450572, 0.347146, 0.363783, 0.351813, 0.368315, 0.32146, 0.334263, 0.331028, 0.346765, 0.435387, 0.458745, 0.438372, 0.462536, 0.35245, 0.369184, 0.334129, 0.347104, 0.341291, 0.356983, 0.441706, 0.465597, 0.455411, 0.480235, 0.350222, 0.36371, 0.359947, 0.376374, 0.4567, 0.481903, 0.470405, 0.496541, 0.475006, 0.5, 0.508146, 0.535924, 0.518448, 0.547469, 0.576251, 0.610288, 0.581099, 0.615857, 0.572695, 0.605524},
    {0.194483, 0.208718, 0.208663, 0.208727, 0.204976, 0.2069, 0.204962, 0.196129, 0.184956, 0.1723, 0.338118, 0.391442, 0.502266, 0.374041, 0.399352, 0.373225, 0.398468, 0.372408, 0.397583, 0.368539, 0.393479, 0.374081, 0.399281, 0.371014, 0.396012, 0.370679, 0.395346, 0.37252, 0.396891, 0.293065, 0.304107, 0.389831, 0.415646, 0.303841, 0.31554, 0.428162, 0.455691, 0.371163, 0.396539, 0.370346, 0.395654, 0.366477, 0.391549, 0.372545, 0.397912, 0.373988, 0.399481, 0.372833, 0.397929, 0.371706, 0.396437, 0.312108, 0.32502, 0.401347, 0.427826, 0.322642, 0.336205, 0.437628, 0.465763, 0.366956, 0.39199, 0.363086, 0.387885, 0.369209, 0.394305, 0.370689, 0.395914, 0.374044, 0.399199, 0.372097, 0.39682, 0.317026, 0.330074, 0.401738, 0.428209, 0.327237, 0.340926, 0.438019, 0.466146, 0.359773, 0.3843, 0.366444, 0.391301, 0.367979, 0.392967, 0.371371, 0.396292, 0.373935, 0.39875, 0.323155, 0.336414, 0.402755, 0.429252, 0.333044, 0.346935, 0.439036, 0.46719, 0.360004, 0.384536, 0.361992, 0.386681, 0.368151, 0.392931, 0.37124, 0.39595, 0.330143, 0.343619, 0.401726, 0.42814, 0.337836, 0.35177, 0.438007, 0.466077, 0.359948, 0.384342, 0.36675, 0.391274, 0.370084, 0.394553, 0.340243, 0.35408, 0.410407, 0.43724, 0.350597, 0.365111, 0.443875, 0.472167, 0.362456, 0.386719, 0.367172, 0.391454, 0.340822, 0.354296, 0.407894, 0.434565, 0.366308, 0.381717, 0.449885, 0.478522, 0.369226, 0.39363, 0.362971, 0.377425, 0.411615, 0.438516, 0.37573, 0.391032, 0.465923, 0.495115, 0.379476, 0.394567, 0.423437, 0.451109, 0.392813, 0.408768, 0.479794, 0.509816, 0.468192, 0.491854, 0.5, 0.525052, 0.532524, 0.560556, 0.582616, 0.614657, 0.556901, 0.581157, 0.591709, 0.624741},
    {0.154281, 0.169516, 0.169449, 0.169507, 0.165436, 0.167527, 0.165537, 0.155997, 0.144006, 0.122959, 0.302933, 0.355524, 0.477025, 0.345158, 0.362438, 0.34432, 0.361513, 0.343482, 0.360589, 0.339377, 0.356146, 0.34517, 0.362291, 0.342019, 0.358889, 0.341791, 0.358097, 0.34376, 0.359516, 0.252579, 0.261858, 0.361519, 0.379507, 0.263794, 0.27606, 0.400803, 0.422944, 0.342139, 0.359662, 0.341301, 0.358738, 0.337196, 0.354295, 0.34355, 0.361051, 0.345009, 0.362663, 0.343939, 0.360943, 0.342871, 0.359259, 0.27255, 0.283723, 0.373387, 0.392184, 0.28352, 0.297676, 0.410564, 0.433435, 0.337867, 0.354974, 0.333762, 0.350531, 0.340173, 0.357348, 0.341672, 0.359002, 0.345211, 0.362296, 0.343303, 0.359684, 0.277625, 0.288945, 0.373818, 0.392608, 0.288268, 0.302564, 0.410995, 0.43386, 0.330409, 0.34685, 0.337401, 0.354294, 0.338958, 0.356008, 0.342536, 0.359344, 0.345237, 0.361746, 0.283989, 0.295535, 0.374911, 0.393743, 0.294305, 0.308821, 0.412088, 0.434994, 0.330614, 0.347045, 0.332656, 0.349277, 0.339178, 0.355796, 0.34244, 0.358809, 0.291211, 0.302995, 0.373805, 0.392507, 0.299145, 0.313734, 0.410982, 0.433758, 0.330846, 0.347174, 0.33805, 0.35443, 0.341571, 0.357722, 0.301827, 0.314021, 0.38299, 0.402286, 0.312701, 0.327908, 0.41729, 0.440415, 0.333908, 0.350027, 0.338892, 0.354883, 0.302022, 0.313889, 0.380731, 0.399899, 0.329347, 0.345521, 0.423728, 0.447364, 0.341408, 0.357703, 0.32609, 0.33904, 0.385024, 0.404654, 0.339611, 0.355747, 0.440774, 0.465069, 0.344176, 0.357841, 0.397942, 0.418806, 0.358298, 0.37517, 0.4558, 0.481407, 0.440812, 0.464076, 0.474948, 0.5, 0.508357, 0.536747, 0.565128, 0.596172, 0.527396, 0.557663, 0.57408, 0.608404},
    {0.178032, 0.192267, 0.192212, 0.192275, 0.188525, 0.190449, 0.18953, 0.188189, 0.179555, 0.15517, 0.330425, 0.339353, 0.383363, 0.361408, 0.386223, 0.360592, 0.385339, 0.359775, 0.384455, 0.355905, 0.38035, 0.361447, 0.386152, 0.359095, 0.383521, 0.356849, 0.381142, 0.35869, 0.382687, 0.278178, 0.288059, 0.378051, 0.40355, 0.381201, 0.40706, 0.291943, 0.302801, 0.35853, 0.38341, 0.357713, 0.382525, 0.353843, 0.37842, 0.359911, 0.384783, 0.362069, 0.386991, 0.359002, 0.383724, 0.358178, 0.382543, 0.297123, 0.308868, 0.389567, 0.415729, 0.392717, 0.41924, 0.310744, 0.323466, 0.354322, 0.378861, 0.350453, 0.374756, 0.356575, 0.381176, 0.35877, 0.383423, 0.360213, 0.384995, 0.358569, 0.382927, 0.302081, 0.313963, 0.389958, 0.416112, 0.393108, 0.419623, 0.315339, 0.328188, 0.34714, 0.371171, 0.35381, 0.378172, 0.35606, 0.380476, 0.357541, 0.382087, 0.360407, 0.384857, 0.30825, 0.320344, 0.390975, 0.417156, 0.394125, 0.420667, 0.321146, 0.334196, 0.34737, 0.371407, 0.35269, 0.376957, 0.35432, 0.378727, 0.357712, 0.382057, 0.315278, 0.327591, 0.389946, 0.416043, 0.393096, 0.419554, 0.325938, 0.339031, 0.350645, 0.374618, 0.352919, 0.37707, 0.356556, 0.38066, 0.325419, 0.338093, 0.398627, 0.425143, 0.398965, 0.425644, 0.338699, 0.352373, 0.351105, 0.375059, 0.35582, 0.379794, 0.339809, 0.353175, 0.396543, 0.422905, 0.408093, 0.435209, 0.35295, 0.367277, 0.35664, 0.380675, 0.345393, 0.358881, 0.399423, 0.425965, 0.410973, 0.438269, 0.374655, 0.390418, 0.37243, 0.387428, 0.411324, 0.438639, 0.422875, 0.450943, 0.391737, 0.408154, 0.458227, 0.481552, 0.467476, 0.491643, 0.5, 0.525146, 0.497715, 0.519956, 0.583724, 0.616338, 0.584745, 0.617516},
    {0.136687, 0.151922, 0.151855, 0.151913, 0.147842, 0.149934, 0.148937, 0.147582, 0.138242, 0.104368, 0.29478, 0.304213, 0.346419, 0.331814, 0.34828, 0.330976, 0.347356, 0.330138, 0.346431, 0.326033, 0.341989, 0.331826, 0.348133, 0.329432, 0.345389, 0.327123, 0.342918, 0.329099, 0.344342, 0.236368, 0.244546, 0.348965, 0.366519, 0.352198, 0.370203, 0.250747, 0.262183, 0.328795, 0.345505, 0.327957, 0.34458, 0.323852, 0.340137, 0.330206, 0.346893, 0.332421, 0.349162, 0.329271, 0.345763, 0.328521, 0.344408, 0.256239, 0.266307, 0.360833, 0.379196, 0.364067, 0.38288, 0.270473, 0.283799, 0.324523, 0.340816, 0.320418, 0.336373, 0.326829, 0.34319, 0.329084, 0.345501, 0.330544, 0.347116, 0.328952, 0.344833, 0.261355, 0.27157, 0.361264, 0.37962, 0.364498, 0.383305, 0.275221, 0.288688, 0.317065, 0.332692, 0.324057, 0.340136, 0.32637, 0.342508, 0.327869, 0.344164, 0.330887, 0.346895, 0.267759, 0.278202, 0.362358, 0.380755, 0.365591, 0.384439, 0.281257, 0.294944, 0.31727, 0.332887, 0.322853, 0.338789, 0.324511, 0.340616, 0.328089, 0.343958, 0.275023, 0.285703, 0.361251, 0.379519, 0.364485, 0.383203, 0.286097, 0.299857, 0.321043, 0.336686, 0.323382, 0.33925, 0.32722, 0.342871, 0.285679, 0.296771, 0.370436, 0.389298, 0.370793, 0.38986, 0.299654, 0.314032, 0.321807, 0.337511, 0.326791, 0.342373, 0.300924, 0.312771, 0.368629, 0.387389, 0.380444, 0.400125, 0.314775, 0.329857, 0.328087, 0.343868, 0.306611, 0.31863, 0.372112, 0.391236, 0.383926, 0.403972, 0.337958, 0.354566, 0.336097, 0.349741, 0.385112, 0.405477, 0.396926, 0.418212, 0.356644, 0.373997, 0.429554, 0.452531, 0.439444, 0.463253, 0.474854, 0.5, 0.466194, 0.492054, 0.565778, 0.597376, 0.56674, 0.598502},
    {0.19041, 0.204645, 0.20459, 0.204653, 0.204953, 0.201686, 0.199748, 0.194233, 0.183581, 0.169929, 0.173811, 0.386146, 0.497342, 0.370547, 0.395664, 0.36973, 0.39478, 0.368914, 0.393895, 0.368097, 0.393011, 0.369505, 0.394568, 0.366438, 0.391299, 0.36872, 0.393406, 0.37105, 0.395473, 0.355299, 0.378854, 0.291582, 0.30254, 0.300013, 0.311384, 0.424608, 0.451938, 0.367668, 0.392851, 0.366852, 0.391966, 0.366035, 0.391082, 0.367969, 0.3932, 0.369412, 0.394769, 0.370874, 0.395989, 0.370236, 0.395018, 0.368774, 0.393048, 0.310625, 0.323454, 0.318815, 0.332049, 0.434074, 0.46201, 0.363461, 0.388302, 0.362645, 0.387418, 0.364633, 0.389593, 0.366113, 0.391201, 0.372085, 0.397259, 0.370627, 0.395401, 0.369165, 0.393431, 0.315543, 0.328507, 0.32341, 0.336771, 0.434465, 0.462393, 0.359332, 0.383833, 0.361868, 0.386589, 0.363403, 0.388254, 0.369412, 0.394352, 0.372464, 0.397332, 0.370182, 0.394474, 0.321672, 0.334847, 0.329217, 0.342779, 0.435482, 0.463437, 0.359562, 0.384068, 0.36155, 0.386214, 0.367709, 0.39247, 0.370799, 0.395489, 0.373026, 0.39747, 0.33011, 0.343634, 0.337333, 0.351235, 0.437506, 0.465545, 0.349064, 0.373261, 0.364692, 0.389351, 0.370644, 0.395396, 0.373397, 0.397938, 0.34136, 0.355415, 0.346387, 0.360645, 0.439543, 0.4677, 0.36042, 0.384819, 0.367753, 0.392321, 0.370847, 0.395223, 0.342081, 0.355777, 0.362098, 0.37725, 0.445552, 0.474055, 0.371759, 0.396484, 0.37661, 0.401255, 0.365261, 0.380001, 0.37448, 0.3898, 0.464312, 0.493549, 0.384382, 0.409584, 0.384598, 0.400229, 0.391809, 0.407817, 0.478472, 0.508542, 0.406951, 0.423749, 0.417384, 0.434872, 0.502285, 0.533806, 0.5, 0.525057, 0.532528, 0.560569, 0.540542, 0.568899},
    {0.149874, 0.165109, 0.165042, 0.1651, 0.165411, 0.16186, 0.159881, 0.153924, 0.142503, 0.127836, 0.124499, 0.349795, 0.471707, 0.341446, 0.35845, 0.340608, 0.357526, 0.33977, 0.356601, 0.338932, 0.355677, 0.340224, 0.357105, 0.337079, 0.35371, 0.339635, 0.355931, 0.342126, 0.357919, 0.325937, 0.340664, 0.250953, 0.260143, 0.259639, 0.271579, 0.397032, 0.41889, 0.338427, 0.355675, 0.337589, 0.35475, 0.336751, 0.353826, 0.338603, 0.355865, 0.340069, 0.357483, 0.341783, 0.358777, 0.341237, 0.357662, 0.339821, 0.355433, 0.270924, 0.282009, 0.279365, 0.293194, 0.406793, 0.429382, 0.334155, 0.350986, 0.333317, 0.350062, 0.335227, 0.352162, 0.336732, 0.353822, 0.343056, 0.360129, 0.341669, 0.358087, 0.340252, 0.355858, 0.275999, 0.287231, 0.284113, 0.298083, 0.407224, 0.429806, 0.329964, 0.346381, 0.332455, 0.349108, 0.334017, 0.350829, 0.340381, 0.357178, 0.343603, 0.360149, 0.341345, 0.356992, 0.282363, 0.293821, 0.29015, 0.304339, 0.408318, 0.430941, 0.330169, 0.346575, 0.332211, 0.348813, 0.338734, 0.355333, 0.341995, 0.358345, 0.344347, 0.360202, 0.291175, 0.303007, 0.298635, 0.313192, 0.410478, 0.433223, 0.319088, 0.334809, 0.335555, 0.351991, 0.341861, 0.358296, 0.344773, 0.360764, 0.30295, 0.315343, 0.308027, 0.322982, 0.412595, 0.435486, 0.331433, 0.347615, 0.339202, 0.355484, 0.342475, 0.358341, 0.303292, 0.315372, 0.324682, 0.3406, 0.41904, 0.442441, 0.343803, 0.360447, 0.348946, 0.365333, 0.328446, 0.341669, 0.338169, 0.354325, 0.43898, 0.463301, 0.357615, 0.374933, 0.34962, 0.36382, 0.357136, 0.374064, 0.454316, 0.479957, 0.374283, 0.389712, 0.385343, 0.403828, 0.480044, 0.507946, 0.474943, 0.5, 0.508349, 0.536747, 0.518218, 0.547725},
    {0.173956, 0.188191, 0.188136, 0.1882, 0.1885, 0.185232, 0.187631, 0.186291, 0.178178, 0.164938, 0.156756, 0.333974, 0.377747, 0.35791, 0.382533, 0.357094, 0.381648, 0.356277, 0.380764, 0.355461, 0.37988, 0.356868, 0.381437, 0.357133, 0.381579, 0.354886, 0.3792, 0.357216, 0.381266, 0.341768, 0.364958, 0.27669, 0.286489, 0.377644, 0.403304, 0.288111, 0.298643, 0.355032, 0.379719, 0.354215, 0.378835, 0.353399, 0.377951, 0.355332, 0.380069, 0.360106, 0.385048, 0.35704, 0.381782, 0.356705, 0.381123, 0.355243, 0.379152, 0.295636, 0.307298, 0.38916, 0.415484, 0.306912, 0.319308, 0.350824, 0.375171, 0.350008, 0.374287, 0.351996, 0.376462, 0.356808, 0.381481, 0.358251, 0.383053, 0.357096, 0.381506, 0.355634, 0.379535, 0.300593, 0.312393, 0.389551, 0.415867, 0.311507, 0.324029, 0.346695, 0.370702, 0.349231, 0.373457, 0.354098, 0.378534, 0.355579, 0.380145, 0.358933, 0.383436, 0.356651, 0.380579, 0.306763, 0.318774, 0.390568, 0.41691, 0.317314, 0.330038, 0.346925, 0.370937, 0.352245, 0.376493, 0.353876, 0.378263, 0.357267, 0.381594, 0.359495, 0.383574, 0.315242, 0.327603, 0.392592, 0.419019, 0.32543, 0.338494, 0.348584, 0.372692, 0.350858, 0.375144, 0.357112, 0.381501, 0.359866, 0.384042, 0.326531, 0.339425, 0.394628, 0.421174, 0.334484, 0.347903, 0.351453, 0.375606, 0.358786, 0.383108, 0.36188, 0.38601, 0.341064, 0.354661, 0.406479, 0.433639, 0.351637, 0.365979, 0.35917, 0.383527, 0.364324, 0.388609, 0.347678, 0.361454, 0.409418, 0.436763, 0.373343, 0.38912, 0.373923, 0.398815, 0.377547, 0.393087, 0.421608, 0.449729, 0.390671, 0.407137, 0.401959, 0.418901, 0.443099, 0.472604, 0.416276, 0.434222, 0.467472, 0.491651, 0.5, 0.525146, 0.528566, 0.556164},
    {0.13228, 0.147515, 0.147448, 0.147506, 0.147817, 0.144266, 0.146863, 0.145509, 0.136738, 0.122501, 0.105992, 0.298424, 0.340354, 0.328102, 0.344293, 0.327264, 0.343368, 0.326426, 0.342444, 0.325588, 0.341519, 0.32688, 0.342948, 0.327276, 0.343222, 0.324967, 0.340751, 0.327465, 0.342745, 0.311586, 0.325814, 0.234742, 0.242832, 0.348428, 0.36615, 0.246592, 0.257702, 0.325083, 0.341517, 0.324245, 0.340592, 0.323407, 0.339668, 0.325259, 0.341708, 0.330266, 0.346996, 0.327116, 0.343597, 0.326887, 0.342811, 0.32547, 0.340582, 0.254613, 0.264593, 0.360296, 0.378826, 0.266318, 0.279318, 0.320811, 0.336828, 0.319973, 0.335904, 0.321883, 0.338005, 0.326929, 0.343335, 0.328388, 0.344949, 0.327318, 0.343236, 0.325901, 0.341007, 0.259729, 0.269856, 0.360727, 0.379251, 0.271066, 0.284206, 0.316621, 0.332223, 0.319111, 0.334951, 0.324214, 0.340341, 0.325713, 0.341998, 0.329253, 0.345298, 0.326995, 0.342141, 0.266133, 0.276488, 0.361821, 0.380386, 0.277102, 0.290463, 0.316825, 0.332417, 0.322408, 0.338326, 0.324066, 0.340153, 0.327645, 0.343494, 0.329996, 0.345351, 0.274986, 0.285715, 0.363981, 0.382668, 0.285588, 0.299316, 0.318541, 0.334247, 0.320887, 0.336811, 0.32751, 0.343445, 0.330423, 0.345914, 0.286802, 0.298093, 0.366098, 0.384931, 0.29498, 0.309105, 0.321879, 0.337741, 0.329648, 0.345615, 0.332921, 0.348473, 0.302194, 0.314253, 0.37865, 0.398356, 0.313273, 0.328372, 0.330482, 0.346612, 0.335942, 0.351821, 0.308967, 0.321259, 0.382192, 0.402266, 0.336456, 0.35308, 0.34649, 0.363373, 0.341541, 0.35572, 0.395502, 0.416826, 0.355423, 0.372827, 0.368496, 0.384143, 0.418843, 0.442337, 0.383662, 0.402624, 0.439431, 0.463253, 0.474854, 0.5, 0.505376, 0.531802},
    {0.169875, 0.18411, 0.184055, 0.184118, 0.184418, 0.185201, 0.182409, 0.181068, 0.176274, 0.163555, 0.168087, 0.158686, 0.372088, 0.354344, 0.378773, 0.353527, 0.377889, 0.352711, 0.377005, 0.351894, 0.376121, 0.356355, 0.380898, 0.352485, 0.376795, 0.350239, 0.374416, 0.355291, 0.379383, 0.340226, 0.363468, 0.341049, 0.364396, 0.275191, 0.284935, 0.284266, 0.294476, 0.351465, 0.37596, 0.350649, 0.375076, 0.349832, 0.374192, 0.354819, 0.37953, 0.355459, 0.380264, 0.352393, 0.376998, 0.354674, 0.379111, 0.353701, 0.377662, 0.354524, 0.37859, 0.294136, 0.305745, 0.30301, 0.315078, 0.347258, 0.371411, 0.346442, 0.370527, 0.351483, 0.375923, 0.35216, 0.376697, 0.353604, 0.378269, 0.355065, 0.379494, 0.354092, 0.378045, 0.354915, 0.378973, 0.299094, 0.310839, 0.307605, 0.3198, 0.343129, 0.366942, 0.348718, 0.372919, 0.34945, 0.37375, 0.350931, 0.375361, 0.356902, 0.381425, 0.355109, 0.379089, 0.355932, 0.380016, 0.305263, 0.317221, 0.313412, 0.325808, 0.346412, 0.370399, 0.347597, 0.371709, 0.349228, 0.373479, 0.355237, 0.379582, 0.357953, 0.382084, 0.357956, 0.382124, 0.313742, 0.32605, 0.321528, 0.334264, 0.348071, 0.372154, 0.350345, 0.374606, 0.356599, 0.380968, 0.359353, 0.38351, 0.363866, 0.388388, 0.326483, 0.339454, 0.333906, 0.347294, 0.340498, 0.364454, 0.356656, 0.381113, 0.362856, 0.387303, 0.367407, 0.392221, 0.342164, 0.356009, 0.347352, 0.361438, 0.357062, 0.381556, 0.365322, 0.389926, 0.370309, 0.395305, 0.34892, 0.362949, 0.369057, 0.384579, 0.376778, 0.402018, 0.384446, 0.410251, 0.380047, 0.395916, 0.389346, 0.405831, 0.400415, 0.427305, 0.408291, 0.42592, 0.415255, 0.43326, 0.459458, 0.481782, 0.471434, 0.494624, 0.5, 0.525158},
    {0.127861, 0.143096, 0.143028, 0.143087, 0.143398, 0.144228, 0.141183, 0.139841, 0.134652, 0.120985, 0.125813, 0.107966, 0.334233, 0.324313, 0.34023, 0.323475, 0.339305, 0.322637, 0.338381, 0.321799, 0.337456, 0.326357, 0.342403, 0.322252, 0.337961, 0.31995, 0.335497, 0.325341, 0.340644, 0.309874, 0.324141, 0.31072, 0.325109, 0.233091, 0.241126, 0.242421, 0.253202, 0.321294, 0.337454, 0.320456, 0.336529, 0.319618, 0.335605, 0.324737, 0.341163, 0.325242, 0.341735, 0.322098, 0.338342, 0.324654, 0.34057, 0.323759, 0.33891, 0.324604, 0.339878, 0.252962, 0.262887, 0.262087, 0.274754, 0.317022, 0.332766, 0.316184, 0.331841, 0.321361, 0.33746, 0.321905, 0.338074, 0.323371, 0.339695, 0.325085, 0.340994, 0.32419, 0.339335, 0.325035, 0.340302, 0.258078, 0.26815, 0.266835, 0.279643, 0.312831, 0.32816, 0.318589, 0.334406, 0.319191, 0.33508, 0.320696, 0.336743, 0.32702, 0.343056, 0.325283, 0.340469, 0.326128, 0.341437, 0.264482, 0.274782, 0.272872, 0.285899, 0.316303, 0.331873, 0.317385, 0.333065, 0.319048, 0.334898, 0.325412, 0.341253, 0.328285, 0.343679, 0.328288, 0.343719, 0.273336, 0.284009, 0.281357, 0.294752, 0.318019, 0.333702, 0.320365, 0.336272, 0.326988, 0.342907, 0.329901, 0.345375, 0.334514, 0.350429, 0.286741, 0.298114, 0.294395, 0.308481, 0.310045, 0.3253, 0.327075, 0.343101, 0.333655, 0.349541, 0.338308, 0.354636, 0.303293, 0.315584, 0.308523, 0.323363, 0.327929, 0.344125, 0.336695, 0.352916, 0.34181, 0.35851, 0.310213, 0.32275, 0.331714, 0.348077, 0.349227, 0.366501, 0.357197, 0.375197, 0.344111, 0.35861, 0.353905, 0.371323, 0.374732, 0.394476, 0.375259, 0.391596, 0.382484, 0.401498, 0.431101, 0.452275, 0.443836, 0.468198, 0.474842, 0.5}}

    Private pf_river_equity_avg() As Double = {0.844124124260355, 0.816625479289941, 0.79174276923077, 0.767000479289941, 0.742243621301775, 0.713496017751479, 0.685146301775149, 0.656474775147929, 0.627554071005917, 0.598416532544379, 0.566668662721893, 0.53464549704142, 0.502341988165681, 0.660643544378698, 0.641972213017752, 0.651404668639053, 0.632164674556213, 0.642305414201183, 0.622492899408284, 0.633457053254438, 0.613082934911243, 0.614670142011834, 0.593006668639053, 0.605636384615385, 0.583347325443787, 0.595518473372781, 0.572525875739645, 0.584381100591716, 0.560606745562131, 0.584524964497042, 0.560791301775148, 0.575888355029586, 0.551481792899409, 0.568193195266272, 0.543187881656805, 0.560229437869822, 0.534596857988166, 0.624930917159763, 0.60451749704142, 0.615677431952663, 0.594677639053254, 0.606956047337278, 0.585399934911243, 0.588386863905326, 0.565550189349113, 0.571082508875739, 0.547085165680473, 0.562744609467455, 0.538173165680473, 0.553391911242603, 0.528173964497042, 0.544789047337278, 0.519003597633136, 0.5359705147929, 0.509505313609467, 0.528119035502958, 0.501050917159763, 0.520140668639054, 0.492453088757396, 0.593774207100592, 0.571928082840237, 0.584946881656805, 0.562535118343195, 0.566374940828402, 0.542683644970414, 0.549382, 0.524547899408284, 0.531792076923077, 0.50578075147929, 0.52443924852071, 0.49792826627219, 0.515879414201184, 0.488806633136095, 0.506999449704142, 0.479245213017751, 0.499081378698225, 0.470722479289941, 0.49103126035503, 0.462051142011834, 0.566479437869822, 0.54338749112426, 0.547326674556213, 0.522920875739645, 0.530360035502959, 0.504813272189349, 0.513034177514793, 0.486325603550296,
    0.495562603550296, 0.467691952662722, 0.489168881656805, 0.460896124260355, 0.480259088757397, 0.45130524260355, 0.472306739644971, 0.442748550295858, 0.464217940828402, 0.434038846153846, 0.531670656804734, 0.506716721893491, 0.514274272189349, 0.488153911242604, 0.496936479289941, 0.469653822485207, 0.479682278106509, 0.451249852071006, 0.462419011834319, 0.432871319526627, 0.455737846153846, 0.425673639053255, 0.447783562130178, 0.417117402366864, 0.439689112426035, 0.408404420118343, 0.499469266272189, 0.472703390532544, 0.482244792899408, 0.454331337278107, 0.465099355029586, 0.436045692307693, 0.448019461538461, 0.41786026035503, 0.429776639053254, 0.398340982248521, 0.42415125443787, 0.392285911242604, 0.416081674556213, 0.383602224852071, 0.47071800591716, 0.442347639053255, 0.453540088757397, 0.424031905325444, 0.436560461538462, 0.405955810650888, 0.418466639053254, 0.386592556213018, 0.400713715976332, 0.367611775147929, 0.395049970414201, 0.361511775147929, 0.444906195266272, 0.415076159763314, 0.427942579881657, 0.397020692307692, 0.410012615384615, 0.377834857988166, 0.392388556213018, 0.358988094674556, 0.374109822485207, 0.339442047337278, 0.422398532544379, 0.391310390532544, 0.404697573964497, 0.372371230769231, 0.387191301775148, 0.353651319526627, 0.369048059171598, 0.334245982248521, 0.405492011834319, 0.373432431952663, 0.38833850887574, 0.355091029585799, 0.370382562130177, 0.335884905325444, 0.377677272189349, 0.343779810650888, 0.360004585798817, 0.32488601183432, 0.351848224852071, 0.316255857988166}

#End Region

    ' Most of these metrics have been discussed (in some form) in various papers by the University of Alberta's Computer Poker Research Group 
    ' or by Carnegie Mellon University over the years.

    ' Typically when using data tables to store your game you would cluster these histograms into strategically similar groups.
    ' Normal:  Rolls out hands to the river, for each hand strength 'bucket' in the river histogram it calculates a win/tie/(loss) probability distribution.
    ' Inverse: Rolls out all opponent's possible two card hands to the river and calculates the afformentioned distribution.  (gives an idea of board texture)
    Public Function CalculateProjectedHistoWinsTiesLosses1D(ByVal pocket As ULong, ByVal board As ULong, ByVal histo_size As Integer,
                                                            Optional ByVal inverse As Boolean = False) As Single()
        Dim bcard_count As Integer = HoldemHand.Hand.BitCount(pocket Or board)
        If ((Not inverse) And (bcard_count < 5 Or bcard_count > 6)) Or
           ((inverse) And (bcard_count < 5 Or bcard_count > 7)) Then _
            Throw New Exception("Invalid card count.")

        Dim histo(histo_size)() As Single

        Dim hi As Integer

        For i As Integer = 0 To histo_size
            histo(i) = New Single() {0, 0, 0, 0}
        Next

        Dim wtl() As Integer = {0, 0, 0}

        If inverse Then

            Dim p1val, opval As UInteger

            If bcard_count = 7 Then

                p1val = HoldemHand.Hand.Evaluate(pocket Or board)
                Dim opa() As Integer
                Dim ra() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(board)
                Dim hi_river As Integer

                For Each oppocket As ULong In HoldemHand.Hand.Hands(0, pocket Or board, 2)
                    opa = Lutv2.Converter.HandConverter.ConvertToIntArray(oppocket)
                    hi_river = rLUT.getHandIndex(New Integer() {opa(0), opa(1), ra(0), ra(1), ra(2), ra(3), ra(4)})
                    hi = rLUT.LUT_ehs2(hi_river) * histo_size
                    opval = HoldemHand.Hand.Evaluate(oppocket Or board)

                    If opval > p1val Then
                        histo(hi)(0) += 1
                    ElseIf opval = p1val Then
                        histo(hi)(1) += 1
                    Else
                        histo(hi)(2) += 1
                    End If

                    histo(hi)(3) += 1
                Next

                '' *Extremely* slow without a look-up table...
                'For Each oppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 2)
                '    opval = HoldemHand.Hand.Evaluate(oppocket Or board)

                '    wtl(0) = 0 : wtl(1) = 0 : wtl(2) = 0

                '    For Each temppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or oppocket Or board, 2)
                '        tempval = HoldemHand.Hand.Evaluate(temppocket Or board)

                '        If opval > tempval Then
                '            wtl(0) += 1
                '        ElseIf opval = tempval Then
                '            wtl(1) += 1
                '        Else
                '            wtl(2) += 1
                '        End If

                '    Next

                '    hi = (wtl(0) + (wtl(1) * 0.5)) / (wtl(0) + wtl(1) + wtl(2)) * histo_size

                '    histo(hi)(0) += wtl(0)
                '    histo(hi)(1) += wtl(1)
                '    histo(hi)(2) += wtl(2)
                '    histo(hi)(3) += 1

                'Next

            Else


                Dim opa() As Integer
                Dim ra() As Integer
                Dim hi_river As Integer

                For Each river As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 7 - bcard_count)

                    p1val = HoldemHand.Hand.Evaluate(pocket Or board Or river)
                    ra = Lutv2.Converter.HandConverter.ConvertToIntArray(board Or river)

                    For Each oppocket As ULong In HoldemHand.Hand.Hands(0, pocket Or board Or river, 2)
                        opa = Lutv2.Converter.HandConverter.ConvertToIntArray(oppocket)
                        hi_river = rLUT.getHandIndex(New Integer() {opa(0), opa(1), ra(0), ra(1), ra(2), ra(3), ra(4)})
                        hi = rLUT.LUT_ehs2(hi_river) * histo_size
                        opval = HoldemHand.Hand.Evaluate(oppocket Or board Or river)

                        If opval > p1val Then
                            histo(hi)(0) += 1
                        ElseIf opval = p1val Then
                            histo(hi)(1) += 1
                        Else
                            histo(hi)(2) += 1
                        End If

                        histo(hi)(3) += 1

                    Next

                Next

                '' *Extremely* slow without a look-up table...
                'For Each river As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 7 - bcard_count)

                '    For Each oppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board Or river, 2)
                '        opval = HoldemHand.Hand.Evaluate(oppocket Or board Or river)

                '        wtl(0) = 0 : wtl(1) = 0 : wtl(2) = 0

                '        For Each temppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or oppocket Or board Or river, 2)
                '            tempval = HoldemHand.Hand.Evaluate(temppocket Or board Or river)

                '            If opval > tempval Then
                '                wtl(0) += 1
                '            ElseIf opval = tempval Then
                '                wtl(1) += 1
                '            Else
                '                wtl(2) += 1
                '            End If

                '        Next

                '        hi = (wtl(0) + (wtl(1) * 0.5)) / (wtl(0) + wtl(1) + wtl(2)) * histo_size

                '        histo(hi)(0) += wtl(0)
                '        histo(hi)(1) += wtl(1)
                '        histo(hi)(2) += wtl(2)
                '        histo(hi)(3) += 1

                '    Next

                'Next

            End If

        Else

            Dim p1val, opval As UInteger

            For Each river As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 7 - bcard_count)
                p1val = HoldemHand.Hand.Evaluate(pocket Or board Or river)

                wtl(0) = 0 : wtl(1) = 0 : wtl(2) = 0

                For Each oppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board Or river, 2)
                    opval = HoldemHand.Hand.Evaluate(oppocket Or board Or river)
                    If p1val > opval Then
                        wtl(0) += 1
                    ElseIf p1val = opval Then
                        wtl(1) += 1
                    Else
                        wtl(2) += 1
                    End If
                Next

                hi = (wtl(0) + (wtl(1) * 0.5)) / (wtl(0) + wtl(1) + wtl(2)) * histo_size

                histo(hi)(0) += wtl(0)
                histo(hi)(1) += wtl(1)
                histo(hi)(2) += wtl(2)
                histo(hi)(3) += 1
            Next

        End If


        Dim wtl_total As Double = 0, hs_total As Double = 0

        For i As Integer = 0 To histo_size
            If histo(i)(3) > 0 Then
                wtl_total = histo(i)(0) + histo(i)(1) + histo(i)(2)
                histo(i)(0) /= wtl_total
                histo(i)(1) /= wtl_total
                histo(i)(2) /= wtl_total
                hs_total += histo(i)(3)
            End If
        Next

        Dim histo_out((histo_size + 1) * 2) As Single

        For i As Integer = 0 To histo_size
            If histo(i)(3) > 0 Then
                histo(i)(3) /= hs_total
                histo_out(i) = histo(i)(0) * histo(i)(3)
                histo_out(histo_size + i + 1) = histo(i)(1) * histo(i)(3)
            End If
        Next

        histo = Nothing

        Return histo_out

    End Function

    ' Calculates the win/tie/loss distribution for the current hand state.  Hand Strength = (wins + (ties * 0.5)) / total.
    Public Function CalculateCurrentWinsTiesLosses(ByVal pocket As ULong, ByVal board As ULong) As Double()

        Dim bcard_count As Integer = HoldemHand.Hand.BitCount(pocket Or board)
        If bcard_count < 5 Then Throw New Exception("Invalid card count.")
        Dim p1val As UInteger = HoldemHand.Hand.Evaluate(pocket Or board)
        Dim opval As UInteger

        Dim wins As Integer = 0, losses As Integer = 0, draws As Integer = 0

        For Each handmask As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 2)
            opval = HoldemHand.Hand.Evaluate(handmask Or board)
            If p1val > opval Then
                wins += 1
            ElseIf p1val = opval Then
                draws += 1
            Else
                losses += 1
            End If
        Next

        Dim count As Integer = wins + draws + losses

        Return New Double() {wins / count, draws / count, losses / count}

    End Function

    ' Not used here, but you get the idea.
    Public Function CalculateProjectedWinsTiesLosses(ByVal pocket As ULong, ByVal board As ULong) As Single()

        Dim bcard_count As Integer = HoldemHand.Hand.BitCount(pocket Or board)
        If bcard_count < 5 Or bcard_count > 6 Then Throw New Exception("Invalid card count.")

        Dim p1val, opval As UInteger
        Dim wins As Integer = 0, losses As Integer = 0, draws As Integer = 0, count As Integer = 0

        For Each river As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board, 7 - bcard_count)
            p1val = HoldemHand.Hand.Evaluate(pocket Or board Or river)
            For Each oppocket As ULong In HoldemHand.Hand.Hands(0UL, pocket Or board Or river, 2)
                opval = HoldemHand.Hand.Evaluate(oppocket Or board Or river)
                If p1val > opval Then
                    wins += 1
                ElseIf p1val = opval Then
                    draws += 1
                Else
                    losses += 1
                End If
                count += 1
            Next
        Next

        Dim output() As Single = New Single() {wins / count, draws / count, losses / count}

        Return output

    End Function

    ' A rudimentary board texture metric showing the 'gaps' between cards.
    Public Function gapedness(ByVal mask As ULong) As Double()

        Const all_cards As ULong = 4503599627370495

        '3,6,10
        Dim output As New ArrayList

        Dim gc As Double

        For Each pair As ULong In HoldemHand.Hand.Hands(0, mask Xor all_cards, 2)
            gc = HoldemHand.Hand.GapCount(pair)
            If gc > 0 Then gc /= 10
            output.Add(gc)
        Next

        Return output.ToArray(gc.GetType)

    End Function

#End Region

#Region "Hand/Deck Generation"

    ' Sets the statistical hand/board info for the selected cards and puts them into a structure used for training.
    ' Those that aren't already in look-up tables are cached in memory for later use.
    Private Sub setHand(ByRef ti As train_info, ByVal index As Integer,
                        ByVal p As ULong, ByVal flop As ULong, ByVal turn As ULong, ByVal river As ULong,
                        ByVal hi_flop As Integer, ByVal hi_turn As Integer, ByVal hi_river As Integer)


        ti.pocket(index) = p
        ti.flop = flop
        ti.turn = turn
        ti.river = river

        Dim pocket_inputs As New List(Of Double)
        Dim flop_inputs As New List(Of Double)
        Dim turn_inputs As New List(Of Double)
        Dim river_inputs As New List(Of Double)


        ' ======================== Preflop Data ===========================

        Dim card() As String = HoldemHand.Hand.MaskToString(p).Split(" ")

        Dim p_169 As Integer = HoldemHand.Hand.PocketHand169Type(p)

        pocket_inputs.Add((pf_river_equity_avg(p_169) - pf_river_equity_avg(168)) / (pf_river_equity_avg(0) - pf_river_equity_avg(168)))

        If card(0)(0) = card(1)(0) Then pocket_inputs.Add(1) Else pocket_inputs.Add(-1) ' Paired
        If card(0)(1) = card(1)(1) Then pocket_inputs.Add(1) Else pocket_inputs.Add(-1) ' Suited
        If HoldemHand.Hand.IsConnected(p) Then pocket_inputs.Add(1) Else pocket_inputs.Add(-1)

        Dim gc As Double = HoldemHand.Hand.GapCount(p)
        If gc >= 0 Then pocket_inputs.Add(gc / 10) Else pocket_inputs.Add(-1)


        ' ======================== Flop Data ===========================

        If flop_wtl_cache(hi_flop) Is Nothing Then _
            flop_wtl_cache(hi_flop) = CalculateCurrentWinsTiesLosses(p, flop)

        flop_inputs.AddRange(flop_wtl_cache(hi_flop))

        '' Requires LUT Server running
        'Dim fhwtl() As Single = readFromMemoryMap("flop_projected_HS_Histogram_WTL_50", hi_flop, 103)
        'flop_inputs.AddRange(Array.ConvertAll(fhwtl, New Converter(Of Single, Double)(AddressOf Double.Parse)))
        'Dim fhwtli() As Single = readFromMemoryMap("flop_projected_HS_Histogram_WTL_50_Inverse", hi_flop, 103)
        'flop_inputs.AddRange(Array.ConvertAll(fhwtli, New Converter(Of Single, Double)(AddressOf Double.Parse)))

        flop_inputs.AddRange(Array.ConvertAll(flop_projected_HS_Histogram_WTL_50(hi_flop),
                                              New Converter(Of Single, Double)(AddressOf Double.Parse)))
        flop_inputs.AddRange(Array.ConvertAll(flop_projected_HS_Histogram_WTL_50_Inverse(hi_flop),
                                              New Converter(Of Single, Double)(AddressOf Double.Parse)))

        flop_inputs.AddRange(gapedness(flop))                          ' See comments above.
        flop_inputs.Add(CDbl(HoldemHand.Hand.rankedNess(flop, 3)) / 3) ' A rankedness of 1 = all same rank
        flop_inputs.Add(CDbl(HoldemHand.Hand.suitCount(flop)) / 3)     ' A suit count of 1 = all same suit

        ' ======================== Turn Data ===========================

        If turn_wtl_cache(hi_turn) Is Nothing Then _
            turn_wtl_cache(hi_turn) = CalculateCurrentWinsTiesLosses(p, turn)

        turn_inputs.AddRange(turn_wtl_cache(hi_turn))

        If turn_projected_HS_Histogram_WTL_45_cache(hi_turn) Is Nothing Then _
            turn_projected_HS_Histogram_WTL_45_cache(hi_turn) = CalculateProjectedHistoWinsTiesLosses1D(p, turn, 45)

        turn_inputs.AddRange(Array.ConvertAll(turn_projected_HS_Histogram_WTL_45_cache(hi_turn),
                                              New Converter(Of Single, Double)(AddressOf Double.Parse)))

        '' Requires LUT Server running
        'Dim hwtli() As Single = readFromMemoryMap("turn_projected_HS_Histogram_WTL_20_Inverse", hi_turn, 43)
        'turn_inputs.AddRange(Array.ConvertAll(hwtli, New Converter(Of Single, Double)(AddressOf Double.Parse)))

        turn_inputs.AddRange(Array.ConvertAll(turn_projected_HS_Histogram_WTL_20_Inverse(hi_turn),
                                              New Converter(Of Single, Double)(AddressOf Double.Parse)))

        turn_inputs.AddRange(gapedness(turn))
        turn_inputs.Add(CDbl(HoldemHand.Hand.rankedNess(turn, 4)) / 4)
        turn_inputs.Add(CDbl(HoldemHand.Hand.suitCount(turn)) / 4)

        ' ======================== River Data ===========================

        If river_wtl_cache(hi_river) Is Nothing Then _
            river_wtl_cache(hi_river) = CalculateCurrentWinsTiesLosses(p, river)

        river_inputs.AddRange(river_wtl_cache(hi_river))

        If river_projected_HS_Histogram_WTL_25_Inverse_cache(hi_river) Is Nothing Then _
            river_projected_HS_Histogram_WTL_25_Inverse_cache(hi_river) = CalculateProjectedHistoWinsTiesLosses1D(p, river, 25, True)

        river_inputs.AddRange(Array.ConvertAll(river_projected_HS_Histogram_WTL_25_Inverse_cache(hi_river),
                                               New Converter(Of Single, Double)(AddressOf Double.Parse)))

        river_inputs.AddRange(gapedness(river))
        river_inputs.Add(CDbl(HoldemHand.Hand.rankedNess(river, 5)) / 5)
        river_inputs.Add(CDbl(HoldemHand.Hand.suitCount(river)) / 5)

        ti.pin(index) = pocket_inputs.ToArray.Clone()
        ti.fin(index) = flop_inputs.ToArray.Clone()
        ti.tin(index) = turn_inputs.ToArray.Clone()
        ti.rin(index) = river_inputs.ToArray.Clone()

    End Sub


    ' HomogeneousHandSet is used to generate hands that aren't likely to be seen randomly.  
    ' Not recommended (and impossible in some instances) to be larger than 5x5x5 
    Private Function parallelGetHomogeneousHandSet(ByVal a As Integer, ByVal b As Integer, ByVal c As Integer) As List(Of train_info)
        Dim fs(1, a, b, c) As Boolean

        Dim l As New List(Of train_info)

        Dim po As New ParallelOptions
        po.MaxDegreeOfParallelism = System.Environment.ProcessorCount

        ' Doesn't work for some reason.  Causes hangs.
        Parallel.For(1, 300000, po, Sub(i, state)

                                        SyncLock l
                                            If l.Count >= fs.Length / 2 Or state.ShouldExitCurrentIteration Then
                                                'state.Break()
                                                Exit Sub
                                            End If
                                        End SyncLock

                                        ' Pocket hands...
                                        Dim p0 As ULong = HoldemHand.Hand.RandomHand(0UL, 2)
                                        Dim p1 As ULong = HoldemHand.Hand.RandomHand(p0, 2)

                                        ' Board cards...
                                        Dim flop As ULong = HoldemHand.Hand.RandomHand(p0 Or p1, 3)
                                        Dim turn As ULong = flop Or HoldemHand.Hand.RandomHand(p0 Or p1 Or flop, 1)
                                        Dim river As ULong = turn Or HoldemHand.Hand.RandomHand(p0 Or p1 Or turn, 1)

                                        Dim fa() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(flop)
                                        Dim ta() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(turn)
                                        Dim ra() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(river)

                                        ' Player hand indices...
                                        Dim p0a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p0)

                                        Dim hi0_flop As Integer = fLUT.getHandIndex(New Integer() {p0a(0), p0a(1), fa(0), fa(1), fa(2)})
                                        Dim hi0_turn As Integer = tLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ta(0), ta(1), ta(2), ta(3)})
                                        Dim hi0_river As Integer = rLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

                                        Dim p1a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p1)

                                        Dim hi1_flop As Integer = fLUT.getHandIndex(New Integer() {p1a(0), p1a(1), fa(0), fa(1), fa(2)})
                                        Dim hi1_turn As Integer = tLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ta(0), ta(1), ta(2), ta(3)})
                                        Dim hi1_river As Integer = rLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})


                                        ' Buckets...
                                        Dim h(,) = New Integer(,) _
                                        {{fLUT.LUT_ehs2(hi0_flop) * a, tLUT.LUT_ehs2(hi0_turn) * b, rLUT.LUT_ehs2(hi0_river) * c},
                                        {fLUT.LUT_ehs2(hi1_flop) * a, tLUT.LUT_ehs2(hi1_turn) * b, rLUT.LUT_ehs2(hi1_river) * c}}

                                        If Not (fs(0, h(0, 0), h(0, 1), h(0, 2)) AndAlso fs(1, h(1, 0), h(1, 1), h(1, 2))) Then
                                            Dim ti As New train_info
                                            ti.regrets = New List(Of (Double(), Double()))
                                            ti.cummulatives = New List(Of (Double(), Double()))
                                            ReDim ti.pocket(1)
                                            ReDim ti.pin(1)
                                            ReDim ti.fin(1)
                                            ReDim ti.tin(1)
                                            ReDim ti.rin(1)
                                            setHand(ti, 0, p0, flop, turn, river, hi0_flop, hi0_turn, hi0_river)
                                            setHand(ti, 1, p1, flop, turn, river, hi1_flop, hi1_turn, hi1_river)
                                            ti.evs = New UInteger() {HoldemHand.Hand.Evaluate(p0 Or river), HoldemHand.Hand.Evaluate(p1 Or river)}
                                            SyncLock l
                                                If l.Count < fs.Length / 2 And Not state.ShouldExitCurrentIteration Then l.Add(ti)
                                                fs(0, h(0, 0), h(0, 1), h(0, 2)) = True
                                                fs(1, h(1, 0), h(1, 1), h(1, 2)) = True
                                                'If l.Count >= fs.Length / 2 Then state.Break()
                                            End SyncLock
                                        End If


                                    End Sub)


        Return l
    End Function

    Private Function getHomogeneousHandSet(ByVal a As Integer, ByVal b As Integer, ByVal c As Integer) As List(Of train_info)
        Dim fs(1, a, b, c) As Boolean
        Dim l As New List(Of train_info)

        While True

            Dim ti As New train_info
            ti.regrets = New List(Of (Double(), Double()))
            ti.cummulatives = New List(Of (Double(), Double()))

            ' Pocket hands...
            Dim p0 As ULong = HoldemHand.Hand.RandomHand(0UL, 2)
            Dim p1 As ULong = HoldemHand.Hand.RandomHand(p0, 2)

            ' Board cards...
            Dim flop As ULong = HoldemHand.Hand.RandomHand(p0 Or p1, 3)
            Dim turn As ULong = flop Or HoldemHand.Hand.RandomHand(p0 Or p1 Or flop, 1)
            Dim river As ULong = turn Or HoldemHand.Hand.RandomHand(p0 Or p1 Or turn, 1)

            Dim fa() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(flop)
            Dim ta() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(turn)
            Dim ra() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(river)

            ' Player hand indices...
            Dim p0a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p0)

            Dim hi0_flop As Integer = fLUT.getHandIndex(New Integer() {p0a(0), p0a(1), fa(0), fa(1), fa(2)})
            Dim hi0_turn As Integer = tLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ta(0), ta(1), ta(2), ta(3)})
            Dim hi0_river As Integer = rLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

            Dim p1a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p1)

            Dim hi1_flop As Integer = fLUT.getHandIndex(New Integer() {p1a(0), p1a(1), fa(0), fa(1), fa(2)})
            Dim hi1_turn As Integer = tLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ta(0), ta(1), ta(2), ta(3)})
            Dim hi1_river As Integer = rLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

            ' Buckets...
            Dim h(,) = New Integer(,) _
                {{fLUT.LUT_ehs2(hi0_flop) * a, tLUT.LUT_ehs2(hi0_turn) * b, rLUT.LUT_ehs2(hi0_river) * c},
                {fLUT.LUT_ehs2(hi1_flop) * a, tLUT.LUT_ehs2(hi1_turn) * b, rLUT.LUT_ehs2(hi1_river) * c}}

            If Not (fs(0, h(0, 0), h(0, 1), h(0, 2)) AndAlso fs(1, h(1, 0), h(1, 1), h(1, 2))) Then
                ReDim ti.pocket(1)
                ReDim ti.pin(1)
                ReDim ti.fin(1)
                ReDim ti.tin(1)
                ReDim ti.rin(1)
                setHand(ti, 0, p0, flop, turn, river, hi0_flop, hi0_turn, hi0_river)
                setHand(ti, 1, p1, flop, turn, river, hi1_flop, hi1_turn, hi1_river)
                ti.evs = New UInteger() {HoldemHand.Hand.Evaluate(p0 Or river), HoldemHand.Hand.Evaluate(p1 Or river)}
                l.Add(ti)
                fs(0, h(0, 0), h(0, 1), h(0, 2)) = True
                fs(1, h(1, 0), h(1, 1), h(1, 2)) = True
            End If

            If l.Count >= fs.Length / 2 Then Exit While
        End While

        Return l
    End Function


    ' Gets a set of random hand/board combinations.
    Private Function parallelGetRandomHandSet(ByVal num_hands As Integer) As List(Of train_info)

        Dim l As New List(Of train_info)

        Dim po As New ParallelOptions
        po.MaxDegreeOfParallelism = System.Environment.ProcessorCount

        Parallel.For(1, num_hands + 1, po, Sub(i)

                                               Dim ti As New train_info
                                               ti.regrets = New List(Of (Double(), Double()))
                                               ti.cummulatives = New List(Of (Double(), Double()))

                                               Dim p0a() As Integer, p1a() As Integer, fa() As Integer, ta() As Integer, ra() As Integer

                                               Dim p0, p1, flop, turn, river As ULong

                                               ' Pocket hands...
                                               p0 = HoldemHand.Hand.RandomHand(0UL, 2)
                                               p1 = HoldemHand.Hand.RandomHand(p0, 2)

                                               ' Board cards...
                                               flop = HoldemHand.Hand.RandomHand(p0 Or p1, 3)
                                               turn = flop Or HoldemHand.Hand.RandomHand(p0 Or p1 Or flop, 1)
                                               river = turn Or HoldemHand.Hand.RandomHand(p0 Or p1 Or turn, 1)

                                               fa = Lutv2.Converter.HandConverter.ConvertToIntArray(flop)
                                               ta = Lutv2.Converter.HandConverter.ConvertToIntArray(turn)
                                               ra = Lutv2.Converter.HandConverter.ConvertToIntArray(river)

                                               ' Player hand indices...
                                               Dim hi0_flop, hi0_turn, hi0_river, hi1_flop, hi1_turn, hi1_river As Integer

                                               p0a = Lutv2.Converter.HandConverter.ConvertToIntArray(p0)

                                               hi0_flop = fLUT.getHandIndex(New Integer() {p0a(0), p0a(1), fa(0), fa(1), fa(2)})
                                               hi0_turn = tLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ta(0), ta(1), ta(2), ta(3)})
                                               hi0_river = rLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

                                               p1a = Lutv2.Converter.HandConverter.ConvertToIntArray(p1)

                                               hi1_flop = fLUT.getHandIndex(New Integer() {p1a(0), p1a(1), fa(0), fa(1), fa(2)})
                                               hi1_turn = tLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ta(0), ta(1), ta(2), ta(3)})
                                               hi1_river = rLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

                                               ReDim ti.pocket(1)
                                               ReDim ti.pin(1)
                                               ReDim ti.fin(1)
                                               ReDim ti.tin(1)
                                               ReDim ti.rin(1)

                                               setHand(ti, 0, p0, flop, turn, river, hi0_flop, hi0_turn, hi0_river)
                                               setHand(ti, 1, p1, flop, turn, river, hi1_flop, hi1_turn, hi1_river)

                                               ti.evs = New UInteger() {HoldemHand.Hand.Evaluate(p0 Or river), HoldemHand.Hand.Evaluate(p1 Or river)}

                                               SyncLock l
                                                   l.Add(ti)
                                               End SyncLock

                                           End Sub)

        Return l
    End Function

    Private Function getRandomHandSet(ByVal num_hands As Integer) As List(Of train_info)

        Dim l As New List(Of train_info)

        For i As Integer = 1 To num_hands

            Dim ti As New train_info
            ti.regrets = New List(Of (Double(), Double()))
            ti.cummulatives = New List(Of (Double(), Double()))

            ' Pocket hands...
            Dim p0 As ULong = HoldemHand.Hand.RandomHand(0UL, 2)
            Dim p1 As ULong = HoldemHand.Hand.RandomHand(p0, 2)

            ' Board cards...
            Dim flop As ULong = HoldemHand.Hand.RandomHand(p0 Or p1, 3)
            Dim turn As ULong = flop Or HoldemHand.Hand.RandomHand(p0 Or p1 Or flop, 1)
            Dim river As ULong = turn Or HoldemHand.Hand.RandomHand(p0 Or p1 Or turn, 1)

            Dim fa() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(flop)
            Dim ta() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(turn)
            Dim ra() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(river)

            ' Player hand indices...
            Dim p0a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p0)

            Dim hi0_flop As Integer = fLUT.getHandIndex(New Integer() {p0a(0), p0a(1), fa(0), fa(1), fa(2)})
            Dim hi0_turn As Integer = tLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ta(0), ta(1), ta(2), ta(3)})
            Dim hi0_river As Integer = rLUT.getHandIndex(New Integer() {p0a(0), p0a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

            Dim p1a() As Integer = Lutv2.Converter.HandConverter.ConvertToIntArray(p1)

            Dim hi1_flop As Integer = fLUT.getHandIndex(New Integer() {p1a(0), p1a(1), fa(0), fa(1), fa(2)})
            Dim hi1_turn As Integer = tLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ta(0), ta(1), ta(2), ta(3)})
            Dim hi1_river As Integer = rLUT.getHandIndex(New Integer() {p1a(0), p1a(1), ra(0), ra(1), ra(2), ra(3), ra(4)})

            ReDim ti.pocket(1)
            ReDim ti.pin(1)
            ReDim ti.fin(1)
            ReDim ti.tin(1)
            ReDim ti.rin(1)
            setHand(ti, 0, p0, flop, turn, river, hi0_flop, hi0_turn, hi0_river)
            setHand(ti, 1, p1, flop, turn, river, hi1_flop, hi1_turn, hi1_river)
            ti.evs = New UInteger() {HoldemHand.Hand.Evaluate(p0 Or river), HoldemHand.Hand.Evaluate(p1 Or river)}
            l.Add(ti)
        Next

        Return l
    End Function

#End Region


    ' Loads the pre-computed look-up tables generated by the statistucal functions.
    ' Try to use raw/unserialized byte data, otherwise deserializing is extremely slow for large data sets.
    Private Sub loadLUTs()

        HoldemHand.Hand.PocketHand169Type(HoldemHand.Hand.ParseHand("Ac Ad")) ' Instantiates the HoldemHand ph169 dictionary.

        fLUT.InitializeEmpty() : fastReadBinaryData(luts_folder & "\flop_ehs2.bin", fLUT.LUT_ehs2, 1361802)
        tLUT.InitializeEmpty() : fastReadBinaryData(luts_folder & "\turn_ehs2.bin", tLUT.LUT_ehs2, 15111642)
        rLUT.InitializeEmpty() : fastReadBinaryData(luts_folder & "\river_hs.bin", rLUT.LUT_ehs2, 52402675)

        ' ----------------------------------- Flop -----------------------------------

        Try
            Console.WriteLine("Loading: flop_projected_HS_Histogram_WTL_50 (raw)")
            fastReadBinaryData(luts_folder & "\flop_projected_HS_Histogram_WTL_50-raw.bin", flop_projected_HS_Histogram_WTL_50, 1361802, 103)
        Catch ex As Exception
            Console.WriteLine("Loading/Deserializing: flop_projected_HS_Histogram_WTL_50")
            loadBinaryData(luts_folder & "\flop_projected_HS_Histogram_WTL_50.bin", flop_projected_HS_Histogram_WTL_50)
        End Try


        Try
            Console.WriteLine("Loading: flop_projected_HS_Histogram_WTL_50_Inverse (raw)")
            fastReadBinaryData(luts_folder & "\flop_projected_HS_Histogram_WTL_50_Inverse-raw.bin", flop_projected_HS_Histogram_WTL_50_Inverse, 1361802, 103)
        Catch ex As Exception
            Console.WriteLine("Loading/Deserializing: flop_projected_HS_Histogram_WTL_50_Inverse")
            loadBinaryData(luts_folder & "\flop_projected_HS_Histogram_WTL_50_Inverse.bin", flop_projected_HS_Histogram_WTL_50_Inverse)
        End Try


        ' ----------------------------------- Turn ----------------------------------- 

        Try
            Console.WriteLine("Loading: turn_projected_HS_Histogram_WTL_20_Inverse (raw)")
            fastReadBinaryData(luts_folder & "\turn_projected_HS_Histogram_WTL_20_Inverse-raw.bin", turn_projected_HS_Histogram_WTL_20_Inverse, 15111642, 43)
        Catch ex As Exception
            Console.WriteLine("Loading: turn_projected_HS_Histogram_WTL_20_Inverse (in chunks)")
            For i As Integer = 0 To 10
                Dim chunk(15111641)() As Single
                loadBinaryData(luts_folder & "\turn_projected_HS_Histogram_WTL_20_Inverse-chunk" & i & ".bin", chunk)
                For j As Integer = 0 To 15111641
                    If chunk(j) IsNot Nothing Then _
                        turn_projected_HS_Histogram_WTL_20_Inverse(j) = chunk(j).Clone
                Next
            Next
        End Try


    End Sub

    Private Sub processArgs(ByVal args() As String)
        If args IsNot Nothing AndAlso args.Length > 0 Then
            Dim i As Integer = 0
            While i < args.Length
                Select Case args(i).ToLower
                    Case "-enablelogging"
                        logging_enabled = True
                        Exit Select
                    Case "-optimizationtest"
                        optimization_test = True
                        Exit Select
                    Case "-regretpoolingonly"
                        ' Doesn't "add/accumulate" new regrets.
                        ' The idea is to use this with a large pool size
                        regret_pooling_only = True
                        Exit Select
                    Case "-paralleldeckgeneration"
                        ' This was buggy for some reason.  I think I fixed it
                        ' but I added a switch just in case.
                        parallel_deck_generation = True
                        Exit Select
                    Case "-iterations"
                        iterations = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-samplingtype"
                        sampling_type = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-regretpoolsize"
                        r_pool_size = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-cummulativepoolsize"
                        c_pool_size = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-regretmaxsavecount" ' Per batch
                        r_save_count = CLng(args(i + 1)) : i += 1
                        Exit Select
                    Case "-regretsavepercent"
                        r_save_percent = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case "-cummulativemaxsavecount" ' Per batch
                        c_save_count = CLng(args(i + 1)) : i += 1
                        Exit Select
                    Case "-cummulativesavepercent"
                        c_save_percent = CDbl(args(i + 1)) : i += 1
                    Case "-deletesamples"
                        delete_samples = True
                        Exit Select
                    Case "-regretonly"
                        just_regrets = True
                        just_cummulative = False
                        Exit Select
                    Case "-cummulativeonly"
                        just_regrets = False
                        just_cummulative = True
                        Exit Select
                    Case "-regretsamplethreshold"
                        r_sample_threshold = CLng(args(i + 1)) : i += 1
                        Exit Select
                    Case "-cummulativesamplethreshold"
                        c_sample_threshold = CLng(args(i + 1)) : i += 1
                        Exit Select
                    Case "-learningrate"
                        learningrate = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case "-skipdrop"
                        skipdrop = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case "-treedepth"
                        treedepth = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-estimators"
                        estimators = CInt(args(i + 1)) : i += 1
                        Exit Select
                    Case "-linear"
                        linear = True
                        Exit Select
                    Case "-dart"
                        dart = True
                        Exit Select
                    Case "-exact"
                        exact = True
                        Exit Select
                    Case "-dropout"
                        dropout = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case "-gamma"
                        gamma = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case "-subsample"
                        subsample = CDbl(args(i + 1)) : i += 1
                        Exit Select
                    Case Else
                        Console.WriteLine("Unknown argument: " & args(i))
                End Select
                i += 1
            End While
        End If
    End Sub


    Private Sub loadLatestModels(ByVal model_prefix As String, ByRef h As Dictionary(Of String, SharpLearning.XGBoost.Models.RegressionXGBoostModel),
                                 ByRef lastloadtime As DateTime, ByVal pool_size As Integer)

        Dim hf() As String = getHighestWeightsFile(model_prefix, pool_size)

        Dim temp_lastloadtime As DateTime = DateTime.Now

        For q As Integer = hf.Length - 1 To 0 Step -1

            If h.ContainsKey(hf(q).ToLower) Then
                If DateTime.Compare(System.IO.File.GetLastWriteTime(hf(q)), lastloadtime) > 0 Then
                    Console.WriteLine("Adding: " & hf(q))
                    Dim tm As Models.RegressionXGBoostModel = Nothing
                    Try
                        tm = New Models.RegressionXGBoostModel(New XGBoost.lib.Booster(hf(q)))
                    Catch ex As Exception
                        tm = Nothing
                    End Try
                    Dim count As Integer = 0
                    While tm Is Nothing And count < 30 ' Probably a file read collision
                        System.Threading.Thread.Sleep(1000)
                        Try
                            tm = New Models.RegressionXGBoostModel(New XGBoost.lib.Booster(hf(q)))
                        Catch ex As Exception
                            tm = Nothing
                        End Try
                        count += 1
                    End While
                    If tm IsNot Nothing Then h(hf(q).ToLower) = tm
                End If
            ElseIf hf(q) <> "" Then
                Console.WriteLine("Adding: " & hf(q))
                Dim tm As Models.RegressionXGBoostModel = Nothing
                Try
                    tm = New Models.RegressionXGBoostModel(New XGBoost.lib.Booster(hf(q)))
                Catch ex As Exception
                    tm = Nothing
                End Try
                Dim count As Integer = 0
                While tm Is Nothing And count < 30 ' Probably a file read collision
                    System.Threading.Thread.Sleep(1000)
                    Try
                        tm = New Models.RegressionXGBoostModel(New XGBoost.lib.Booster(hf(q)))
                    Catch ex As Exception
                        tm = Nothing
                    End Try
                    count += 1
                End While
                If tm IsNot Nothing Then h.Add(hf(q).ToLower, tm)
            End If

        Next

        lastloadtime = temp_lastloadtime

        If h.Count > pool_size Then
            ' Find the oldest model
            Dim lowest_i As Integer = Integer.MaxValue
            Dim lowest_k As String = ""
            For Each k As String In h.Keys
                Dim num As Integer = CInt(k.Substring(k.LastIndexOf("\") + 1).Replace(model_prefix, "").Replace(".bin", ""))
                If num < lowest_i Then
                    lowest_i = num
                    lowest_k = k
                End If
            Next
            Console.WriteLine("Removing: " & lowest_k)
            h.Remove(lowest_k)
        End If

    End Sub

    Private Sub trainModelAndAddToPool(ByVal data_prefix As String, ByRef nin As List(Of Double()), ByRef no As List(Of Double))

        Dim n As DateTime = DateTime.Now

        Dim model_prefix As String = data_prefix & "_best_weights-"

        Dim q As Integer = 1

        log &= "Starting Training... " & vbTab & n.ToShortDateString & " " & n.ToLongTimeString & vbCrLf

        log &= "Input shape: " & nin.Count & ", " & nin(0).Length & vbCrLf
        log &= "Output shape: " & no.Count & ", 1" & vbCrLf

        Console.WriteLine(vbCrLf & "Input shape: " & nin.Count & ", " & nin(0).Length)
        Console.WriteLine("Output shape: " & no.Count & ", 1")

        log &= "Estimators:    " & estimators & vbTab
        log &= "Tree Depth:    " & treedepth & vbTab
        log &= "Gamma:         " & gamma & vbTab
        log &= "Sub Sample:    " & subsample & vbTab
        log &= "Learning Rate: " & learningrate.ToString("N6") & vbTab

        Dim learner As Learners.RegressionXGBoostLearner
        Dim objective As RegressionObjective
        Dim treeMeth As TreeMethod

        If linear Then
            objective = RegressionObjective.LinearRegression
        Else
            objective = RegressionObjective.LogisticRegression
        End If

        If exact Then
            treeMeth = TreeMethod.Exact
            log &= "Tree Method:   Exact" & vbTab
        Else
            treeMeth = TreeMethod.Approx
            log &= "Tree Method:   Approx" & vbTab
        End If

        If dart Then
            log &= "Booster Type:   DART" & vbCrLf
            learner = New Learners.RegressionXGBoostLearner(maximumTreeDepth:=treedepth, learningRate:=learningrate, estimators:=estimators, objective:=objective,
                                                            boosterType:=BoosterType.DART, dropoutRate:=dropout, treeMethod:=treeMeth, skipDrop:=skipdrop,
                                                            gamma:=gamma, subSample:=subsample)
        Else
            log &= "Booster Type:   GBTree" & vbCrLf
            learner = New Learners.RegressionXGBoostLearner(maximumTreeDepth:=treedepth, learningRate:=learningrate, estimators:=estimators, objective:=objective,
                                                            treeMethod:=treeMeth, gamma:=gamma, subSample:=subsample)
        End If

        'Dim learner As New Learners.RegressionXGBoostLearner(maximumTreeDepth:=td, learningRate:=lr, estimators:=es,
        '                                                     objective:=RegressionObjective.LogisticRegression,
        '                                                     boosterType:=BoosterType.DART, dropoutRate:=0.1)

        'Dim learner As New Learners.RegressionXGBoostLearner(maximumTreeDepth:=4, estimators:=200)

        ' Must set gcAllowVeryLargeObjects in App.config or there will be a size limit of 500k (2gb)
        ' for the F64Matrix (rather than 4.6m) due to it's use of a single array to store data. Must
        ' also copy/rename the config file (program_name.exe.config) if the exe is moved/renamed.
        ' <runtime>
        '   <gcAllowVeryLargeObjects enabled = "true" />
        ' </runtime>
        Dim mx As New SharpLearning.Containers.Matrices.F64Matrix(nin.Count, nin(0).Length)

        For i As Integer = nin.Count - 1 To 0 Step -1
            For j As Integer = 0 To nin(i).Length - 1
                mx.Item(i, j) = nin(i)(j)
            Next
            ' Try to reduce the memory footprint.  
            ' Faster if it's the last item on the list?
            nin(i) = Nothing
            nin.RemoveAt(i)
        Next

        Dim m As Models.RegressionXGBoostModel = learner.Learn(mx, no.ToArray())

        Dim nf As DateTime = DateTime.Now

        Dim mse As New SharpLearning.Metrics.Regression.MeanSquaredErrorRegressionMetric
        Dim mae As New SharpLearning.Metrics.Regression.MeanAbsolutErrorRegressionMetric

        Dim predictions() As Double = m.Predict(mx)

        log &= "MSE: " & mse.Error(no.ToArray(), predictions).ToString("N6") & vbTab
        log &= "MAE: " & mae.Error(no.ToArray(), predictions).ToString("N6") & vbCrLf

        log &= "Finished... " & nf.ToShortDateString & " " & nf.ToLongTimeString & vbTab & "In: " & nf.Subtract(n).ToString


        While System.IO.File.Exists(model_prefix & q & ".bin")
            q += 1
        End While

        m.Save(model_prefix & q & ".bin")

        System.IO.File.WriteAllText(model_prefix & q & ".txt", log)
        mx = Nothing
        If m IsNot Nothing Then m.Dispose()
        m = Nothing
    End Sub

    Private Function processInput(ByVal input_files() As String, ByVal sample_threshold As Long, ByVal data_prefix As String) As Integer

        Dim ninl As New List(Of Double()), nol As New List(Of Double)

        shuffleArray(input_files)

        For i As Integer = 0 To input_files.Length - 1

            Dim num As Integer = CInt(input_files(i).Substring(input_files(i).LastIndexOf("\") + 1).Replace(data_prefix & "_samples", "").Replace(".bin", ""))

            Try

                Dim samples As New List(Of (Double(), Double()))
                loadBinaryData(data_prefix & "_samples" & num & ".bin", samples)

                shuffleList(samples) ' Not sure if this is relevant with Boosted trees.

                For j As Integer = 0 To samples.Count - 1
                    ninl.Add(samples(j).Item1)
                    nol.Add(samples(j).Item2(0))
                    If logging_enabled Then _
                        System.IO.File.AppendAllText("log_samples.txt", String.Join(",", samples(j).Item1) & vbTab & String.Join(",", samples(j).Item2) & vbCrLf)
                    samples(j) = Nothing
                Next

                samples.Clear()
                samples = Nothing

                If delete_samples Then _
                    System.IO.File.Delete(data_prefix & "_samples" & num & ".bin")

            Catch ex As Exception
                ' Likely a file read collision.

            End Try

            'If ninl.Count >= sample_threshold Then Exit For

        Next

        Dim output As Integer = 0

        If ninl.Count > 0 AndAlso (ninl.Count = nol.Count) Then
            output = ninl.Count

            trainModelAndAddToPool(data_prefix, ninl, nol)

            ninl.Clear()
            nol.Clear()
            ninl = Nothing
            nol = Nothing

        Else

            Console.WriteLine("Input/Output discrepancy: " & ninl.Count & vbTab & nol.Count)

        End If

        Return output

    End Function

    Private Sub optimizationTestKeras(ByVal input_files() As String)
        Dim nin As New List(Of Double()), no As New List(Of Double)

        shuffleArray(input_files)

        Dim r As New Random

        For i As Integer = 0 To input_files.Length - 1
            Dim samples As New List(Of (Double(), Double()))
            loadBinaryData(input_files(i), samples)
            shuffleList(samples) ' Not sure if this is relevant with Boosted trees.
            For j As Integer = 0 To samples.Count - 1
                If r.NextDouble() < 150000 / 4500000 Then
                    nin.Add(samples(j).Item1)
                    no.Add(samples(j).Item2(0))
                End If
                samples(j) = Nothing
            Next
            samples.Clear()
            samples = Nothing
        Next

        Dim temp_ins(nin.Count - 1, nin(0).Length - 1) As Double
        Dim temp_outs(nin.Count - 1, 0) As Double

        For x As Integer = 0 To nin.Count - 1
            For y As Integer = 0 To nin(x).Count - 1
                temp_ins(x, y) = nin(x)(y)
            Next
            temp_outs(x, 0) = no(x)
        Next

        Dim p(6) As SharpLearning.Optimization.IParameterSpec
        p(0) = New MinMaxParameterSpec(2, 10000, parameterType:=ParameterType.Discrete) ' epochs
        p(1) = New MinMaxParameterSpec(100, 400, parameterType:=ParameterType.Discrete) ' batch size
        p(2) = New MinMaxParameterSpec(0.05, 0.7, parameterType:=ParameterType.Continuous) ' training algo

        Dim m As Keras.Models.Sequential = Utils.loadOrBuildModel("", 7, False)

        Dim optimizer As String = IIf(r.NextDouble() < 0.5, "nadam", "adadelta")
        m.Compile(optimizer:=optimizer, loss:="mse", metrics:=New String() {"mse", "mae", "mape"})

        Dim best_vloss As Double = Double.PositiveInfinity

        For i As Integer = 1 To 10000

            Dim h As Keras.Callbacks.History =
                m.Fit(Numpy.np.array(temp_ins), Numpy.np.array(temp_outs), batch_size:=2048, shuffle:=True, epochs:=1, validation_split:=(2 / 3), verbose:=0)

            Dim vloss, vmse, vmae, vmape As Double

            vloss = h.HistoryLogs.Item("val_loss")(0)
            vmse = h.HistoryLogs.Item("val_mean_squared_error")(0)
            vmae = h.HistoryLogs.Item("val_mean_absolute_error")(0)
            vmape = h.HistoryLogs.Item("val_mean_absolute_percentage_error")(0)

            If vloss < best_vloss Then
                Console.WriteLine("Best: " & i & vbTab & vloss & vbTab & vmae & vbTab & optimizer)
                best_vloss = vloss
            End If
        Next

    End Sub

    Private Sub optimizationTestXGBoost(ByVal input_files() As String)

        Dim nin As New List(Of Double()), no As New List(Of Double)

        shuffleArray(input_files)

        Dim r As New Random

        Dim div As Double = 150000 / (totalFileSizes(input_files) / 3800)

        For i As Integer = 0 To input_files.Length - 1
            Dim samples As New List(Of (Double(), Double()))
            loadBinaryData(input_files(i), samples)
            shuffleList(samples) ' Not sure if this is relevant with Boosted trees.
            For j As Integer = 0 To samples.Count - 1
                If r.NextDouble() < div Then
                    nin.Add(samples(j).Item1)
                    no.Add(samples(j).Item2(0))
                End If
                samples(j) = Nothing
            Next
            samples.Clear()
            samples = Nothing
        Next

        'While nin.Count > 150000
        '    Dim i As Integer = r.Next(nin.Count)
        '    nin.RemoveAt(i)
        '    no.RemoveAt(i)
        'End While

        Dim mx As New SharpLearning.Containers.Matrices.F64Matrix(nin.Count, nin(0).Length)

        For i As Integer = nin.Count - 1 To 0 Step -1
            For j As Integer = 0 To nin(i).Length - 1
                mx.Item(i, j) = nin(i)(j)
            Next
            ' Try to reduce the memory footprint.  
            ' Faster if it's the last item on the list?
            nin(i) = Nothing
            nin.RemoveAt(i)
        Next

        Dim splitter As New RandomTrainingTestIndexSplitter(Of Double)(2 / 3)
        Dim split_mx As TrainingTestSetSplit = splitter.SplitSet(mx, no.ToArray)

        Console.WriteLine("Train Dimension: " & split_mx.TrainingSet.Observations.RowCount & "x" & split_mx.TrainingSet.Observations.ColumnCount)
        Console.WriteLine("Test Dimension:  " & split_mx.TestSet.Observations.RowCount & "x" & split_mx.TestSet.Observations.ColumnCount)

        Dim p(7) As SharpLearning.Optimization.IParameterSpec
        'p(0) = New MinMaxParameterSpec(2, 10, parameterType:=ParameterType.Discrete) ' Tree Depth
        'p(1) = New MinMaxParameterSpec(50, 500, parameterType:=ParameterType.Discrete) ' Estimators
        'p(2) = New MinMaxParameterSpec(0.01, 0.3, parameterType:=ParameterType.Continuous) ' Learning Rate
        'p(3) = New MinMaxParameterSpec(0.01, 0.1, parameterType:=ParameterType.Continuous) ' Dropout Rate
        'p(4) = New MinMaxParameterSpec(0.0, 0.7, parameterType:=ParameterType.Continuous) ' Skip Drop
        'p(5) = New MinMaxParameterSpec(0, 5, parameterType:=ParameterType.Discrete) ' Gamma

        'p(0) = New MinMaxParameterSpec(7, 20, parameterType:=ParameterType.Discrete) ' Tree Depth
        'p(1) = New MinMaxParameterSpec(80, 500, parameterType:=ParameterType.Discrete) ' Estimators
        'p(2) = New MinMaxParameterSpec(0.13, 0.5, parameterType:=ParameterType.Continuous) ' Learning Rate
        'p(3) = New MinMaxParameterSpec(0.005, 0.1, parameterType:=ParameterType.Continuous) ' Dropout Rate
        'p(4) = New MinMaxParameterSpec(0.1, 0.7, parameterType:=ParameterType.Continuous) ' Skip Drop
        'p(5) = New MinMaxParameterSpec(0, 10, parameterType:=ParameterType.Discrete) ' Gamma

        'p(0) = New MinMaxParameterSpec(20, 50, parameterType:=ParameterType.Discrete) ' Tree Depth
        'p(1) = New MinMaxParameterSpec(100, 300, parameterType:=ParameterType.Discrete) ' Estimators
        'p(2) = New MinMaxParameterSpec(0.25, 0.7, parameterType:=ParameterType.Continuous) ' Learning Rate
        'p(3) = New MinMaxParameterSpec(0.005, 0.2, parameterType:=ParameterType.Continuous) ' Dropout Rate
        'p(4) = New MinMaxParameterSpec(0.1, 0.7, parameterType:=ParameterType.Continuous) ' Skip Drop
        'p(5) = New MinMaxParameterSpec(0, 10, parameterType:=ParameterType.Discrete) ' Gamma

        p(0) = New MinMaxParameterSpec(2, 70, parameterType:=ParameterType.Discrete) ' Tree Depth
        p(1) = New MinMaxParameterSpec(100, 400, parameterType:=ParameterType.Discrete) ' Estimators
        p(2) = New MinMaxParameterSpec(0.05, 0.7, parameterType:=ParameterType.Continuous) ' Learning Rate
        p(3) = New MinMaxParameterSpec(0.005, 0.2, parameterType:=ParameterType.Continuous) ' Dropout Rate
        p(4) = New MinMaxParameterSpec(0.1, 0.7, parameterType:=ParameterType.Continuous) ' Skip Drop
        p(5) = New MinMaxParameterSpec(0, 20, parameterType:=ParameterType.Discrete) ' Gamma
        p(6) = New MinMaxParameterSpec(0.1, 1, parameterType:=ParameterType.Continuous) ' Sub Sample

        p(7) = New MinMaxParameterSpec(0, 1, parameterType:=ParameterType.Discrete) ' Model

        Dim optimizer As New ParticleSwarmOptimizer(p, 10, 10, maxDegreeOfParallelism:=1)


        If Not System.IO.File.Exists("log_optimization.txt") Then _
            System.IO.File.WriteAllText("log_optimization.txt",
            "Starting Time" & vbTab &
            "Input shape" & vbTab &
            "Tree Depth" & vbTab &
            "Estimators" & vbTab &
            "Learning Rate" & vbTab &
            "Dropout Rate" & vbTab &
            "Skip Drop" & vbTab &
            "Gamma" & vbTab &
            "Sub Sample" & vbTab &
            "Model" & vbTab &
            "MSE" & vbTab &
            "MAE" & vbTab &
            "Duration" & vbTab &
            "Size on Disk" & vbCrLf)

        Dim minimize As Func(Of Double(), OptimizerResult) = Function(v)
                                                                 Dim n As DateTime = DateTime.Now, nf As DateTime
                                                                 Dim predictions() As Double

                                                                 Dim tlog As String = n.ToShortDateString & " " & n.ToLongTimeString & vbTab

                                                                 tlog &= mx.RowCount & "x" & mx.ColumnCount & vbTab

                                                                 tlog &= CInt(v(0)) & vbTab
                                                                 tlog &= CInt(v(1)) & vbTab
                                                                 tlog &= v(2).ToString("N6") & vbTab
                                                                 tlog &= v(3).ToString("N6") & vbTab
                                                                 tlog &= v(4).ToString("N6") & vbTab
                                                                 tlog &= CInt(v(5)) & vbTab
                                                                 tlog &= v(6).ToString("N6") & vbTab

                                                                 Dim model_size As Long = 0

                                                                 Select Case CInt(v(7))
                                                                     Case 0
                                                                         tlog &= "XGBoost Approx DART" & vbTab
                                                                         Dim learner As New Learners.RegressionXGBoostLearner(maximumTreeDepth:=CInt(v(0)),
                                                                            estimators:=CInt(v(1)), learningRate:=v(2), boosterType:=BoosterType.DART,
                                                                            dropoutRate:=v(3), skipDrop:=v(4), gamma:=v(5), treeMethod:=TreeMethod.Approx,
                                                                            subSample:=v(6))
                                                                         Dim m As Models.RegressionXGBoostModel = learner.Learn(split_mx.TrainingSet.Observations,
                                                                                                                        split_mx.TrainingSet.Targets)
                                                                         predictions = m.Predict(split_mx.TestSet.Observations)
                                                                         Try
                                                                             Dim mn As String = "tempmodel_" & r.Next() & ".bin"
                                                                             m.Save(mn)
                                                                             model_size = My.Computer.FileSystem.GetFileInfo(mn).Length
                                                                             System.IO.File.Delete(mn)
                                                                         Catch ex As Exception
                                                                         End Try
                                                                         Exit Select
                                                                     Case Else
                                                                         tlog &= "XGBoost Approx GBTree" & vbTab
                                                                         Dim learner As New Learners.RegressionXGBoostLearner(maximumTreeDepth:=CInt(v(0)),
                                                                            estimators:=CInt(v(1)), learningRate:=v(2), boosterType:=BoosterType.GBTree,
                                                                            dropoutRate:=v(3), skipDrop:=v(4), gamma:=v(5), treeMethod:=TreeMethod.Approx,
                                                                            subSample:=v(6))
                                                                         Dim m As Models.RegressionXGBoostModel = learner.Learn(split_mx.TrainingSet.Observations,
                                                                                                                        split_mx.TrainingSet.Targets)
                                                                         predictions = m.Predict(split_mx.TestSet.Observations)
                                                                         Try
                                                                             Dim mn As String = "tempmodel_" & r.Next() & ".bin"
                                                                             m.Save(mn)
                                                                             model_size = My.Computer.FileSystem.GetFileInfo(mn).Length
                                                                             System.IO.File.Delete(mn)
                                                                         Catch ex As Exception
                                                                         End Try
                                                                         Exit Select
                                                                         'Case Else
                                                                         '    tlog &= "AdaBoost" & vbTab
                                                                         '    Dim learner As New SharpLearning.AdaBoost.Learners.RegressionAdaBoostLearner(
                                                                         '        iterations:=CInt(v(1)), maximumTreeDepth:=CInt(v(0)),
                                                                         '        loss:=SharpLearning.AdaBoost.Learners.AdaBoostRegressionLoss.Squared)
                                                                         '    Dim m As SharpLearning.AdaBoost.Models.RegressionAdaBoostModel =
                                                                         '       learner.Learn(split_mx.TrainingSet.Observations, split_mx.TrainingSet.Targets)
                                                                         '    predictions = m.Predict(split_mx.TestSet.Observations)
                                                                 End Select

                                                                 nf = DateTime.Now

                                                                 Dim mse As New SharpLearning.Metrics.Regression.MeanSquaredErrorRegressionMetric
                                                                 Dim mae As New SharpLearning.Metrics.Regression.MeanAbsolutErrorRegressionMetric

                                                                 Dim loss As Double = mse.Error(split_mx.TestSet.Targets, predictions)

                                                                 tlog &= loss.ToString("N6") & vbTab
                                                                 tlog &= mae.Error(split_mx.TestSet.Targets, predictions).ToString("N6") & vbTab

                                                                 tlog &= nf.Subtract(n).ToString & vbTab

                                                                 tlog &= model_size & vbCrLf

                                                                 Dim saved As Boolean = False, count As Integer = 0
                                                                 While (Not saved) And count < 10
                                                                     Try
                                                                         System.IO.File.AppendAllText("log_optimization.txt", tlog)
                                                                         saved = True
                                                                     Catch ex As Exception
                                                                         System.Threading.Thread.Sleep(100)
                                                                         saved = False
                                                                     End Try
                                                                     count += 1
                                                                 End While

                                                                 Console.Write(tlog)

                                                                 Return New OptimizerResult(v, loss)

                                                             End Function


        Dim bor As OptimizerResult = optimizer.OptimizeBest(minimize)

        Dim blog As String = vbTab & vbTab

        For i As Integer = 0 To bor.ParameterSet.Length - 1
            blog &= bor.ParameterSet(i) & vbTab
        Next

        blog &= bor.Error

        System.IO.File.AppendAllText("log_optimization.txt", blog & vbCrLf)

        Console.WriteLine(blog)

    End Sub

    Private Sub generateUpdates()
        Dim count As Integer = 0

        Parallel.For(0, 2, Sub(i, state)

                               ' SharpLearning XGBoost models (apparently) aren't thread safe and don't play well with sync locking 
                               ' so it was faster to spin up separate loops (or run in separate application instances).  Unless there 
                               ' is a better way?

                               Dim gt As DecisionN = Nothing

                               Dim rh As New Dictionary(Of String, SharpLearning.XGBoost.Models.RegressionXGBoostModel)
                               Dim ch As New Dictionary(Of String, SharpLearning.XGBoost.Models.RegressionXGBoostModel)

                               Dim r_lastloadtime As New DateTime
                               Dim c_lastloadtime As New DateTime

                               Dim r_all As New List(Of (Double(), Double()))
                               Dim c_all As New List(Of (Double(), Double()))

                               Dim ris() As String = {}, cis() As String = {}
                               Dim rfs As Long = 0, cfs As Long = 0

                               Dim rand As New ThreadSafeRandom()

                               While True

                                   ' Get a rough estimate of existing # samples by file sizes (because we're rebels).
                                   If totalFileSizes("regret_samples*.bin") >= r_sample_threshold * 3800 Then _
                                       Exit While

                                   ' (Re)Load the latest model(s) if they're newer.
                                   loadLatestModels("regret_best_weights-", rh, r_lastloadtime, r_pool_size)
                                   loadLatestModels("cummulative_best_weights-", ch, c_lastloadtime, c_pool_size)

                                   Dim dts As DateTime = DateTime.Now

                                   If gt Is Nothing Or count Mod 100 = 0 Then
                                       ' Dynamically build a game tree.
                                       ' You may want to rebuild the game tree with different/random/sparce 
                                       ' betting abstractions every so often.  i.e. For larger games like NL.
                                       ' Other ideas: Use the Null tree node to create "dropout" gametrees.
                                       gt = New DecisionN(0, 0, 40, New Single() {1480, 1460}, New Single() {20, 40}, "", -1)
                                       GameTreeNode.r_pooling_only = regret_pooling_only
                                       GameTreeNode.r_percent = r_save_percent
                                       GameTreeNode.c_percent = c_save_percent
                                       GameTreeNode.logging = logging_enabled
                                   End If

                                   Dim hhs As List(Of train_info)

                                   If parallel_deck_generation Then
                                       hhs = IIf(count Mod 5 = 0, parallelGetHomogeneousHandSet(5, 5, 5), parallelGetRandomHandSet(216))
                                   Else
                                       hhs = IIf(count Mod 5 = 0, getHomogeneousHandSet(5, 5, 5), getRandomHandSet(216))
                                   End If

                                   Dim rk(rh.Count - 1) As String : rh.Keys.CopyTo(rk, 0)
                                   Dim ck(ch.Count - 1) As String : ch.Keys.CopyTo(ck, 0)

                                   For j As Integer = 0 To hhs.Count - 1

                                       Dim ti As train_info = hhs(j)

                                       If rh.Count > 0 Then
                                           ti.mxgb = rh(rk(rand.NewNext(0, rk.Length)))
                                           ti.m = Nothing
                                       Else
                                           'MsgBox("Shouldn't be here (regret)")
                                           ti.m = Nothing
                                           ti.mxgb = Nothing
                                       End If

                                       If ch.Count > 0 Then
                                           ti.cxgb = ch(ck(rand.NewNext(0, ck.Length)))
                                           ti.c = Nothing
                                       Else
                                           'MsgBox("Shouldn't be here (cummulative)")
                                           ti.c = Nothing
                                           ti.cxgb = Nothing
                                       End If

                                       Dim u() As Double

                                       Select Case sampling_type
                                           Case 1
                                               u = New Double() {gt.TrainExternalSamplingCFU(0, ti), gt.TrainExternalSamplingCFU(1, ti)}
                                               Exit Select
                                           Case 2
                                               u = New Double() {gt.TrainProbingCFU(0, ti, 1, 1, False), gt.TrainProbingCFU(1, ti, 1, 1, False)}
                                               Exit Select
                                           Case Else
                                               u = New Double() {gt.TrainProbing(0, ti, 1, 1, False), gt.TrainProbing(1, ti, 1, 1, False)}
                                               Exit Select
                                       End Select

                                       If logging_enabled Then _
                                                Console.WriteLine("Current Utilities: " & u(0) & vbTab & u(1))

                                       hhs(j) = ti
                                   Next

                                   Dim ts As TimeSpan = DateTime.Now.Subtract(dts)

                                   For q As Integer = 0 To hhs.Count - 1
                                       For j As Integer = 0 To hhs(q).regrets.Count - 1
                                           r_all.Add(hhs(q).regrets(j))
                                       Next
                                       For j As Integer = 0 To hhs(q).cummulatives.Count - 1
                                           c_all.Add(hhs(q).cummulatives(j))
                                       Next
                                   Next

                                   log &= "#" & count & vbTab & "Thread: " & i & vbTab & "Time: " & ts.ToString & " Samples: " &
                                          r_all.Count & vbTab & c_all.Count & IIf(rh.Count = 0, vbTab & "No model", "") & vbCrLf

                                   Console.WriteLine("#" & count & vbTab & "Thread: " & i & vbTab & "Time: " & ts.ToString & " Samples: " &
                                                      r_all.Count & vbTab & c_all.Count & IIf(rh.Count = 0, vbTab & "No model", ""))

                                   If r_save_count > 0 AndAlso r_all.Count >= r_save_count Then
                                       While r_all.Count > r_save_count
                                           r_all.RemoveAt(rand.NewNext(0, r_all.Count))
                                       End While
                                       Dim z As Integer = 0
                                       While System.IO.File.Exists("regret_samples" & z & ".bin") : z += 1 : End While
                                       Try
                                           saveBinaryData("regret_samples" & z & ".bin", r_all)
                                       Catch ex As Exception
                                       End Try
                                       r_all.Clear()
                                   End If


                                   If c_save_count > 0 AndAlso c_all.Count >= c_save_count Then
                                       While c_all.Count > c_save_count
                                           c_all.RemoveAt(rand.NewNext(0, c_all.Count))
                                       End While
                                       Dim z As Integer = 0
                                       While System.IO.File.Exists("cummulative_samples" & z & ".bin") : z += 1 : End While
                                       Try
                                           saveBinaryData("cummulative_samples" & z & ".bin", c_all)
                                       Catch ex As Exception
                                       End Try
                                       c_all.Clear()
                                   End If

                                   ' Get a rough estimate of # samples by file sizes.
                                   If totalFileSizes("regret_samples*.bin") >= r_sample_threshold * 3800 Then _
                                       Exit While

                                   count += 1

                               End While
                           End Sub)

    End Sub

    Private Sub crunchModel()

        Dim regret_samples_processed As Integer = 0
        Dim cummulative_samples_processed As Integer = 0

        Dim ris() As String = {}, cis() As String = {}
        Dim rfs As Long = 0, cfs As Long = 0

        ' Get a rough estimate of # samples by file sizes.
        If Not just_cummulative Then
            ris = System.IO.Directory.GetFiles(System.IO.Directory.GetCurrentDirectory, "regret_samples*.bin")
            If ris.Count > 0 Then
                For i As Integer = 0 To ris.Length - 1 : rfs += My.Computer.FileSystem.GetFileInfo(ris(i)).Length : Next
            End If
        End If

        If Not just_regrets Then
            cis = System.IO.Directory.GetFiles(System.IO.Directory.GetCurrentDirectory, "cummulative_samples*.bin")
            If cis.Count > 0 Then
                For i As Integer = 0 To cis.Length - 1 : cfs += My.Computer.FileSystem.GetFileInfo(cis(i)).Length : Next
            End If
        End If


        If (Not just_cummulative) AndAlso rfs >= r_sample_threshold * 3800 Then
            Console.WriteLine("Processing regrets... Data available: " &
                                  IIf(rfs >= 1024 * 1024, (rfs / (1024 * 1024)).ToString("N0") & " MB", (rfs / 1024).ToString("N0") & " KB"))

            regret_samples_processed = processInput(ris, r_sample_threshold, "regret")

            Console.WriteLine("Batch regrets processed: " & regret_samples_processed)

            ' In case new Cummulative inputs arrive while processing the regrets.
            If Not just_regrets Then
                cis = System.IO.Directory.GetFiles(System.IO.Directory.GetCurrentDirectory, "cummulative_samples*.bin")
                If cis.Count > 0 Then
                    For i As Integer = 0 To cis.Length - 1 : cfs += My.Computer.FileSystem.GetFileInfo(cis(i)).Length : Next
                End If
            End If
        End If

        If (Not just_regrets) AndAlso cfs >= c_sample_threshold * 3800 Then
            Console.WriteLine("Processing cummulatives... Data available: " &
                                  IIf(cfs >= 1024 * 1024, (cfs / (1024 * 1024)).ToString("N0") & " MB", (cfs / 1024).ToString("N0") & " KB"))

            cummulative_samples_processed = processInput(cis, c_sample_threshold, "cummulative")

            Console.WriteLine("Batch cummulative processed: " & cummulative_samples_processed & vbCrLf)
        End If


    End Sub


    Sub Main()
        'Dim n As DateTime = DateTime.Now
        'Dim gt As GameTreeNode = New DecisionN(0, 0, 40, New Single() {1480, 1460}, New Single() {20, 40}, "", 4)
        'Console.WriteLine(DateTime.Now.Subtract(n).ToString)
        'Exit Sub

        ' Just a test to make sure gcAllowVeryLargeObjects is working...
        Dim mx As New SharpLearning.Containers.Matrices.F64Matrix(4500000, 471) : mx = Nothing

        ' So the computer doesn't grind to a hault...
        Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.BelowNormal

        For i As Integer = 1 To 100
            optimizationTestXGBoost(System.IO.Directory.GetFiles("C:\Users\Dev\Desktop\HUL Regret Test ProbingCFU Pooling (XGBoost)\", "regret_samples*.bin"))
            'optimizationTestKeras(System.IO.Directory.GetFiles("C:\Users\Dev\Desktop\HUL Regret Test ProbingCFU Pooling (XGBoost)\", "regret_samples*.bin"))
        Next
        Exit Sub

        ' Check for pirates...
        processArgs(My.Application.CommandLineArgs.ToArray)

        ' Load the look-up tables...
        loadLUTs()

        For i As Integer = 1 To iterations

            log = "Iteration #" & i & vbCrLf & vbCrLf

            ' Generate some regret updates...
            generateUpdates()

            ' Create a model with the regret updates...
            crunchModel()

        Next


    End Sub


End Module
